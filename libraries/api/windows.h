// Windows API wrapper
// Copyright (C) Florian Negele

// This file is part of the Eigen Compiler Suite.

// The ECS is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// The ECS is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// Under Section 7 of the GNU General Public License version 3,
// the copyright holder grants you additional permissions to use
// this file as described in the ECS Runtime Support Exception.

// You should have received a copy of the GNU General Public License
// and a copy of the ECS Runtime Support Exception along with
// the ECS.  If not, see <https://www.gnu.org/licenses/>.

#ifndef ECS_WINDOWS_HEADER_INCLUDED
#define ECS_WINDOWS_HEADER_INCLUDED

#define ABOVE_NORMAL_PRIORITY_CLASS 0x8000
#define AC_SRC_ALPHA 0x1
#define AC_SRC_OVER 0x0
#define AD_CLOCKWISE 2
#define AD_COUNTERCLOCKWISE 1
#define AF_APPLETALK 16
#define AF_BTH 32
#define AF_INET 2
#define AF_INET6 23
#define AF_IPX 6
#define AF_IRDA 26
#define AF_NETBIOS 17
#define AF_UNSPEC 0
#define ALTERNATE 1
#define ANSI_FIXED_FONT 11
#define ANSI_VAR_FONT 12
#define ASPECTX 40
#define ASPECTXY 44
#define ASPECTY 42
#define BACKGROUND_BLUE 0x10
#define BACKGROUND_GREEN 0x20
#define BACKGROUND_INTENSITY 0x80
#define BACKGROUND_RED 0x40
#define BAUD_075 0x1
#define BAUD_110 0x2
#define BAUD_115200 0x20000
#define BAUD_1200 0x40
#define BAUD_128K 0x10000
#define BAUD_134_5 0x4
#define BAUD_14400 0x1000
#define BAUD_150 0x8
#define BAUD_1800 0x80
#define BAUD_19200 0x2000
#define BAUD_2400 0x100
#define BAUD_300 0x10
#define BAUD_38400 0x4000
#define BAUD_4800 0x200
#define BAUD_56K 0x8000
#define BAUD_57600 0x40000
#define BAUD_600 0x20
#define BAUD_7200 0x400
#define BAUD_9600 0x800
#define BAUD_USER 0x10000000
#define BDR_RAISEDINNER 4
#define BDR_RAISEDOUTER 1
#define BDR_SUNKENINNER 8
#define BDR_SUNKENOUTER 2
#define BELOW_NORMAL_PRIORITY_CLASS 0x4000
#define BF_ADJUST 0x2000
#define BF_BOTTOM 8
#define BF_BOTTOMLEFT (BF_BOTTOM | BF_LEFT)
#define BF_BOTTOMRIGHT (BF_BOTTOM | BF_RIGHT)
#define BF_DIAGONAL 16
#define BF_DIAGONAL_ENDBOTTOMLEFT (BF_DIAGONAL | BF_BOTTOM | BF_LEFT)
#define BF_DIAGONAL_ENDBOTTOMRIGHT (BF_DIAGONAL | BF_BOTTOM | BF_RIGHT)
#define BF_DIAGONAL_ENDTOPLEFT (BF_DIAGONAL | BF_TOP | BF_LEFT)
#define BF_DIAGONAL_ENDTOPRIGHT (BF_DIAGONAL | BF_TOP | BF_RIGHT)
#define BF_FLAT 0x4000
#define BF_LEFT 1
#define BF_MIDDLE 0x800
#define BF_MONO 0x8000
#define BF_RECT (BF_LEFT | BF_TOP | BF_RIGHT | BF_BOTTOM)
#define BF_RIGHT 4
#define BF_SOFT 0x1000
#define BF_TOP 2
#define BF_TOPLEFT (BF_TOP | BF_LEFT)
#define BF_TOPRIGHT (BF_TOP | BF_RIGHT)
#define BITSPIXEL 12
#define BLACKNESS 0x42
#define BLACKONWHITE 1
#define BLACK_BRUSH 4
#define BLACK_PEN 7
#define BLTALIGNMENT 119
#define BTHPROTO_RFCOMM 3
#define CAPTUREBLT 0x40000000
#define CA_LOG_FILTER 2
#define CA_NEGATIVE 1
#define CBR_110 110
#define CBR_115200 115200
#define CBR_1200 1200
#define CBR_128000 128000
#define CBR_14400 14400
#define CBR_19200 19200
#define CBR_2400 2400
#define CBR_256000 256000
#define CBR_300 300
#define CBR_38400 38400
#define CBR_4800 4800
#define CBR_56000 56000
#define CBR_57600 57600
#define CBR_600 600
#define CBR_9600 9600
#define CCHDEVICENAME 32
#define CCHFORMNAME 32
#define CC_CHORD 4
#define CC_CIRCLES 1
#define CC_ELLIPSES 8
#define CC_INTERIORS 128
#define CC_NONE 0
#define CC_PIE 2
#define CC_ROUNDRECT 256
#define CC_STYLED 32
#define CC_WIDE 16
#define CC_WIDESTYLED 64
#define CDS_FULLSCREEN 4
#define CDS_GLOBAL 8
#define CDS_NORESET 0x10000000
#define CDS_RESET 0x40000000
#define CDS_SET_PRIMARY 16
#define CDS_TEST 2
#define CDS_UPDATEREGISTRY 1
#define CE_BREAK 0x10
#define CE_DNS 0x800
#define CE_FRAME 0x8
#define CE_IOE 0x400
#define CE_MODE 0x8000
#define CE_OOP 0x1000
#define CE_OVERRUN 0x2
#define CE_PTO 0x200
#define CE_RXOVER 0x1
#define CE_RXPARITY 0x4
#define CE_TXFULL 0x100
#define CF_BITMAP 2
#define CF_DIB 8
#define CF_DIBV5 17
#define CF_DIF 5
#define CF_DSPBITMAP 0x82
#define CF_DSPENHMETAFILE 0x8E
#define CF_DSPMETAFILEPICT 0x83
#define CF_DSPTEXT 0x81
#define CF_ENHMETAFILE 14
#define CF_GDIOBJFIRST 0x300
#define CF_GDIOBJLAST 0x3FF
#define CF_HDROP 15
#define CF_LOCALE 16
#define CF_METAFILEPICT 3
#define CF_OEMTEXT 7
#define CF_OWNERDISPLAY 0x80
#define CF_PALETTE 9
#define CF_PENDATA 10
#define CF_PRIVATEFIRST 0x200
#define CF_PRIVATELAST 0x2FF
#define CF_RIFF 11
#define CF_SYLK 4
#define CF_TEXT 1
#define CF_TIFF 6
#define CF_UNICODETEXT 13
#define CF_WAVE 12
#define CLIPCAPS 36
#define CM_CMYK_COLOR 0x4
#define CM_DEVICE_ICM 0x1
#define CM_GAMMA_RAMP 0x2
#define CM_NONE 0x0
#define COLORMGMTCAPS 121
#define COLORONCOLOR 3
#define COLORRES 108
#define COLOR_3DDKSHADOW 21
#define COLOR_3DFACE COLOR_BTNFACE
#define COLOR_3DHIGHLIGHT COLOR_BTNHIGHLIGHT
#define COLOR_3DHILIGHT COLOR_BTNHIGHLIGHT
#define COLOR_3DLIGHT 22
#define COLOR_3DSHADOW COLOR_BTNSHADOW
#define COLOR_ACTIVEBORDER 10
#define COLOR_ACTIVECAPTION 2
#define COLOR_APPWORKSPACE 12
#define COLOR_BACKGROUND 1
#define COLOR_BTNFACE 15
#define COLOR_BTNHIGHLIGHT 20
#define COLOR_BTNHILIGHT COLOR_BTNHIGHLIGHT
#define COLOR_BTNSHADOW 16
#define COLOR_BTNTEXT 18
#define COLOR_CAPTIONTEXT 9
#define COLOR_DESKTOP COLOR_BACKGROUND
#define COLOR_GRADIENTACTIVECAPTION 27
#define COLOR_GRADIENTINACTIVECAPTION 28
#define COLOR_GRAYTEXT 17
#define COLOR_HIGHLIGHT 13
#define COLOR_HIGHLIGHTTEXT 14
#define COLOR_HOTLIGHT 26
#define COLOR_INACTIVEBORDER 11
#define COLOR_INACTIVECAPTION 3
#define COLOR_INACTIVECAPTIONTEXT 19
#define COLOR_INFOBK 24
#define COLOR_INFOTEXT 23
#define COLOR_MENU 4
#define COLOR_MENUBAR 30
#define COLOR_MENUHILIGHT 29
#define COLOR_MENUTEXT 7
#define COLOR_SCROLLBAR 0
#define COLOR_WINDOW 5
#define COLOR_WINDOWFRAME 6
#define COLOR_WINDOWTEXT 8
#define COMPLEXREGION 3
#define CONDITION_VARIABLE_LOCKMODE_SHARED 0x1
#define CONSOLE_FULLSCREEN 1
#define CONSOLE_FULLSCREEN_HARDWARE 2
#define CREATE_ALWAYS 2
#define CREATE_NEW 1
#define CREATE_SUSPENDED 4
#define CRITICAL_SECTION_NO_DEBUG_INFO 0x1000000
#define CS_BYTEALIGNCLIENT 0x1000
#define CS_BYTEALIGNWINDOW 0x2000
#define CS_CLASSDC 0x40
#define CS_DBLCLKS 0x8
#define CS_DROPSHADOW 0x20000
#define CS_GLOBALCLASS 0x4000
#define CS_HREDRAW 0x2
#define CS_IME 0x10000
#define CS_NOCLOSE 0x200
#define CS_OWNDC 0x20
#define CS_PARENTDC 0x80
#define CS_SAVEBITS 0x800
#define CS_VREDRAW 0x1
#define CURVECAPS 28
#define CW_USEDEFAULT ((int) 0x80000000)
#define DATABITS_16 0x10
#define DATABITS_16X 0x20
#define DATABITS_5 0x1
#define DATABITS_6 0x2
#define DATABITS_7 0x4
#define DATABITS_8 0x8
#define DCB_ACCUMULATE 2
#define DCB_DIRTY 2
#define DCB_DISABLE 8
#define DCB_ENABLE 4
#define DCB_RESET 1
#define DCB_SET 3
#define DCX_CACHE 2
#define DCX_CLIPCHILDREN 8
#define DCX_CLIPSIBLINGS 16
#define DCX_EXCLUDERGN 64
#define DCX_EXCLUDEUPDATE 0x100
#define DCX_INTERSECTRGN 128
#define DCX_INTERSECTUPDATE 0x200
#define DCX_LOCKWINDOWUPDATE 0x400
#define DCX_NORESETATTRS 4
#define DCX_PARENTCLIP 32
#define DCX_VALIDATE 0x200000
#define DCX_WINDOW 1
#define DC_ACTIVE 0x1
#define DC_BINNAMES 12
#define DC_BINS 6
#define DC_BRUSH 18
#define DC_BUTTONS 0x1000
#define DC_COPIES 18
#define DC_DRIVER 11
#define DC_DUPLEX 7
#define DC_ENUMRESOLUTIONS 13
#define DC_EXTRA 9
#define DC_FIELDS 1
#define DC_FILEDEPENDENCIES 14
#define DC_GRADIENT 0x20
#define DC_ICON 0x4
#define DC_INBUTTON 0x10
#define DC_MAXEXTENT 5
#define DC_MINEXTENT 4
#define DC_ORIENTATION 17
#define DC_PAPERNAMES 16
#define DC_PAPERS 2
#define DC_PAPERSIZE 3
#define DC_PEN 19
#define DC_SIZE 8
#define DC_SMALLCAP 0x2
#define DC_TEXT 0x8
#define DC_TRUETYPE 15
#define DC_VERSION 10
#define DEFAULT_GUI_FONT 17
#define DEFAULT_PALETTE 15
#define DELETE 0x10000
#define DESKTOPHORZRES 118
#define DESKTOPVERTRES 117
#define DEVICE_DEFAULT_FONT 14
#define DFCS_ADJUSTRECT 0x2000
#define DFCS_BUTTON3STATE 8
#define DFCS_BUTTONCHECK 0
#define DFCS_BUTTONPUSH 16
#define DFCS_BUTTONRADIO 4
#define DFCS_BUTTONRADIOIMAGE 1
#define DFCS_BUTTONRADIOMASK 2
#define DFCS_CAPTIONCLOSE 0
#define DFCS_CAPTIONHELP 4
#define DFCS_CAPTIONMAX 2
#define DFCS_CAPTIONMIN 1
#define DFCS_CAPTIONRESTORE 3
#define DFCS_CHECKED 1024
#define DFCS_FLAT 0x4000
#define DFCS_HOT 0x1000
#define DFCS_INACTIVE 256
#define DFCS_MENUARROW 0
#define DFCS_MENUARROWRIGHT 4
#define DFCS_MENUBULLET 2
#define DFCS_MENUCHECK 1
#define DFCS_MONO 0x8000
#define DFCS_PUSHED 512
#define DFCS_SCROLLCOMBOBOX 5
#define DFCS_SCROLLDOWN 1
#define DFCS_SCROLLLEFT 2
#define DFCS_SCROLLRIGHT 3
#define DFCS_SCROLLSIZEGRIP 8
#define DFCS_SCROLLSIZEGRIPRIGHT 16
#define DFCS_SCROLLUP 0
#define DFCS_TRANSPARENT 0x800
#define DFC_BUTTON 4
#define DFC_CAPTION 1
#define DFC_MENU 2
#define DFC_POPUPMENU 5
#define DFC_SCROLL 3
#define DIB_PAL_COLORS 1
#define DIB_RGB_COLORS 0
#define DKGRAY_BRUSH 3
#define DMCOLLATE_FALSE 0
#define DMCOLLATE_TRUE 1
#define DMCOLOR_COLOR 2
#define DMCOLOR_MONOCHROME 1
#define DMDFO_CENTER 2
#define DMDFO_DEFAULT 0
#define DMDFO_STRETCH 1
#define DMDITHER_COARSE 2
#define DMDITHER_ERRORDIFFUSION 5
#define DMDITHER_FINE 3
#define DMDITHER_GRAYSCALE 10
#define DMDITHER_LINEART 4
#define DMDITHER_NONE 1
#define DMDITHER_RESERVED6 6
#define DMDITHER_RESERVED7 7
#define DMDITHER_RESERVED8 8
#define DMDITHER_RESERVED9 9
#define DMDITHER_USER 256
#define DMDO_180 2
#define DMDO_270 3
#define DMDO_90 1
#define DMDO_DEFAULT 0
#define DMDUP_HORIZONTAL 3
#define DMDUP_SIMPLEX 1
#define DMDUP_VERTICAL 2
#define DMICMMETHOD_DEVICE 4
#define DMICMMETHOD_DRIVER 3
#define DMICMMETHOD_NONE 1
#define DMICMMETHOD_SYSTEM 2
#define DMICMMETHOD_USER 256
#define DMICM_COLORMETRIC 3
#define DMICM_CONTRAST 2
#define DMICM_SATURATE 1
#define DMICM_USER 256
#define DMMEDIA_GLOSSY 3
#define DMMEDIA_STANDARD 1
#define DMMEDIA_TRANSPARENCY 2
#define DMMEDIA_USER 256
#define DMPAPER_10X11 45
#define DMPAPER_10X14 16
#define DMPAPER_11X17 17
#define DMPAPER_15X11 46
#define DMPAPER_9X11 44
#define DMPAPER_A2 66
#define DMPAPER_A3 8
#define DMPAPER_A3_EXTRA 63
#define DMPAPER_A3_EXTRA_TRANSVERSE 68
#define DMPAPER_A3_TRANSVERSE 67
#define DMPAPER_A4 9
#define DMPAPER_A4SMALL 10
#define DMPAPER_A4_EXTRA 53
#define DMPAPER_A4_PLUS 60
#define DMPAPER_A4_TRANSVERSE 55
#define DMPAPER_A5 11
#define DMPAPER_A5_EXTRA 64
#define DMPAPER_A5_TRANSVERSE 61
#define DMPAPER_A_PLUS 57
#define DMPAPER_B4 12
#define DMPAPER_B5 13
#define DMPAPER_B5_EXTRA 65
#define DMPAPER_B5_TRANSVERSE 62
#define DMPAPER_B_PLUS 58
#define DMPAPER_CSHEET 24
#define DMPAPER_DSHEET 25
#define DMPAPER_ENV_10 20
#define DMPAPER_ENV_11 21
#define DMPAPER_ENV_12 22
#define DMPAPER_ENV_14 23
#define DMPAPER_ENV_9 19
#define DMPAPER_ENV_B4 33
#define DMPAPER_ENV_B5 34
#define DMPAPER_ENV_B6 35
#define DMPAPER_ENV_C3 29
#define DMPAPER_ENV_C4 30
#define DMPAPER_ENV_C5 28
#define DMPAPER_ENV_C6 31
#define DMPAPER_ENV_C65 32
#define DMPAPER_ENV_DL 27
#define DMPAPER_ENV_INVITE 47
#define DMPAPER_ENV_ITALY 36
#define DMPAPER_ENV_MONARCH 37
#define DMPAPER_ENV_PERSONAL 38
#define DMPAPER_ESHEET 26
#define DMPAPER_EXECUTIVE 7
#define DMPAPER_FANFOLD_LGL_GERMAN 41
#define DMPAPER_FANFOLD_STD_GERMAN 40
#define DMPAPER_FANFOLD_US 39
#define DMPAPER_FOLIO 14
#define DMPAPER_ISO_B4 42
#define DMPAPER_JAPANESE_POSTCARD 43
#define DMPAPER_LEDGER 4
#define DMPAPER_LEGAL 5
#define DMPAPER_LEGAL_EXTRA 51
#define DMPAPER_LETTER 1
#define DMPAPER_LETTERSMALL 2
#define DMPAPER_LETTER_EXTRA 50
#define DMPAPER_LETTER_EXTRA_TRANSVERSE 56
#define DMPAPER_LETTER_PLUS 59
#define DMPAPER_LETTER_TRANSVERSE 54
#define DMPAPER_NOTE 18
#define DMPAPER_QUARTO 15
#define DMPAPER_RESERVED_48 48
#define DMPAPER_RESERVED_49 49
#define DMPAPER_STATEMENT 6
#define DMPAPER_TABLOID 3
#define DMPAPER_TABLOID_EXTRA 52
#define DMPAPER_USER 256
#define DMTT_BITMAP 1
#define DMTT_DOWNLOAD 2
#define DMTT_DOWNLOAD_OUTLINE 4
#define DMTT_SUBDEV 3
#define DM_BITSPERPEL 0x40000
#define DM_COLLATE 0x8000
#define DM_COLOR 0x800
#define DM_COPIES 0x100
#define DM_DEFAULTSOURCE 0x200
#define DM_DISPLAYFIXEDOUTPUT 0x20000000
#define DM_DISPLAYFLAGS 0x200000
#define DM_DISPLAYFREQUENCY 0x400000
#define DM_DISPLAYORIENTATION 0x80
#define DM_DITHERTYPE 0x4000000
#define DM_DUPLEX 0x1000
#define DM_FORMNAME 0x10000
#define DM_GRAYSCALE 0x1
#define DM_ICMINTENT 0x1000000
#define DM_ICMMETHOD 0x800000
#define DM_INTERLACED 0x2
#define DM_LOGPIXELS 0x20000
#define DM_MEDIATYPE 0x2000000
#define DM_NUP 0x40
#define DM_ORIENTATION 0x1
#define DM_PANNINGHEIGHT 0x10000000
#define DM_PANNINGWIDTH 0x8000000
#define DM_PAPERLENGTH 0x4
#define DM_PAPERSIZE 0x2
#define DM_PAPERWIDTH 0x8
#define DM_PELSHEIGHT 0x100000
#define DM_PELSWIDTH 0x80000
#define DM_POSITION 0x20
#define DM_PRINTQUALITY 0x400
#define DM_SCALE 0x10
#define DM_TTOPTION 0x4000
#define DM_YRESOLUTION 0x2000
#define DRIVERVERSION 0
#define DSS_DEFAULT 64
#define DSS_DISABLED 32
#define DSS_HIDEPREFIX 0x200
#define DSS_MONO 128
#define DSS_NORMAL 0
#define DSS_PREFIXONLY 0x400
#define DSS_RIGHT 0x8000
#define DSS_UNION 16
#define DSTINVERT 0x550009
#define DST_BITMAP 4
#define DST_COMPLEX 0
#define DST_ICON 3
#define DST_PREFIXTEXT 2
#define DST_TEXT 1
#define DTR_CONTROL_DISABLE 0x0
#define DTR_CONTROL_ENABLE 0x1
#define DTR_CONTROL_HANDSHAKE 0x2
#define DT_BOTTOM 8
#define DT_CALCRECT 1024
#define DT_CENTER 1
#define DT_CHARSTREAM 4
#define DT_DISPFILE 6
#define DT_EDITCONTROL 8192
#define DT_END_ELLIPSIS 32768
#define DT_EXPANDTABS 64
#define DT_EXTERNALLEADING 512
#define DT_HIDEPREFIX 1048576
#define DT_INTERNAL 4096
#define DT_LEFT 0
#define DT_METAFILE 5
#define DT_MODIFYSTRING 65536
#define DT_NOCLIP 256
#define DT_NOFULLWIDTHCHARBREAK 524288
#define DT_NOPREFIX 2048
#define DT_PATH_ELLIPSIS 16384
#define DT_PLOTTER 0
#define DT_PREFIXONLY 2097152
#define DT_RASCAMERA 3
#define DT_RASDISPLAY 1
#define DT_RASPRINTER 2
#define DT_RIGHT 2
#define DT_RTLREADING 131072
#define DT_SINGLELINE 32
#define DT_TABSTOP 128
#define DT_TOP 0
#define DT_VCENTER 4
#define DT_WORDBREAK 16
#define DT_WORD_ELLIPSIS 0x40000
#define EDD_GET_DEVICE_INTERFACE_NAME 1
#define EDGE_BUMP (BDR_RAISEDOUTER | BDR_SUNKENINNER)
#define EDGE_ETCHED (BDR_SUNKENOUTER | BDR_RAISEDINNER)
#define EDGE_RAISED (BDR_RAISEDOUTER | BDR_RAISEDINNER)
#define EDGE_SUNKEN (BDR_SUNKENOUTER | BDR_SUNKENINNER)
#define EDS_RAWMODE 0x2
#define EDS_ROTATEDMODE 0x4
#define ENABLE_ECHO_INPUT 0x4
#define ENABLE_INSERT_MODE 0x20
#define ENABLE_LINE_INPUT 0x2
#define ENABLE_MOUSE_INPUT 0x10
#define ENABLE_PROCESSED_INPUT 0x1
#define ENABLE_PROCESSED_OUTPUT 0x1
#define ENABLE_QUICK_EDIT_MODE 0x40
#define ENABLE_WINDOW_INPUT 0x8
#define ENABLE_WRAP_AT_EOL_OUTPUT 0x2
#define ENUM_CURRENT_SETTINGS ((DWORD) -1)
#define ENUM_REGISTRY_SETTINGS ((DWORD) -2)
#define ETO_CLIPPED 0x4
#define ETO_GLYPH_INDEX 0x10
#define ETO_GRAYED 0x1
#define ETO_IGNORELANGUAGE 0x1000
#define ETO_NUMERICSLATIN 0x800
#define ETO_NUMERICSLOCAL 0x400
#define ETO_OPAQUE 0x2
#define ETO_PDY 0x2000
#define ETO_RTLREADING 0x80
#define EVENPARITY 2
#define EV_BREAK 0x40
#define EV_CTS 0x8
#define EV_DSR 0x10
#define EV_ERR 0x80
#define EV_EVENT1 0x800
#define EV_EVENT2 0x1000
#define EV_PERR 0x200
#define EV_RING 0x100
#define EV_RLSD 0x20
#define EV_RX80FULL 0x400
#define EV_RXCHAR 0x1
#define EV_RXFLAG 0x2
#define EV_TXEMPTY 0x4
#define EXCEPTION_MAXIMUM_PARAMETERS 15
#define FALSE 0
#define FILE_ADD_FILE 0x2
#define FILE_ADD_SUBDIRECTORY 0x4
#define FILE_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x1FF)
#define FILE_APPEND_DATA 0x4
#define FILE_ATTRIBUTE_ARCHIVE 0x20
#define FILE_ATTRIBUTE_COMPRESSED 0x800
#define FILE_ATTRIBUTE_DEVICE 0x40
#define FILE_ATTRIBUTE_DIRECTORY 0x10
#define FILE_ATTRIBUTE_ENCRYPTED 0x4000
#define FILE_ATTRIBUTE_HIDDEN 0x2
#define FILE_ATTRIBUTE_NORMAL 0x80
#define FILE_ATTRIBUTE_NOT_CONTENT_INDEXED 0x2000
#define FILE_ATTRIBUTE_OFFLINE 0x1000
#define FILE_ATTRIBUTE_READONLY 0x1
#define FILE_ATTRIBUTE_REPARSE_POINT 0x400
#define FILE_ATTRIBUTE_SPARSE_FILE 0x200
#define FILE_ATTRIBUTE_SYSTEM 0x4
#define FILE_ATTRIBUTE_TEMPORARY 0x100
#define FILE_BEGIN 0
#define FILE_CREATE_PIPE_INSTANCE 0x4
#define FILE_CURRENT 1
#define FILE_DELETE_CHILD 0x40
#define FILE_END 2
#define FILE_EXECUTE 0x20
#define FILE_FLAG_BACKUP_SEMANTICS 0x2000000
#define FILE_FLAG_DELETE_ON_CLOSE 0x4000000
#define FILE_FLAG_FIRST_PIPE_INSTANCE 0x80000
#define FILE_FLAG_NO_BUFFERING 0x20000000
#define FILE_FLAG_OPEN_NO_RECALL 0x100000
#define FILE_FLAG_OPEN_REPARSE_POINT 0x200000
#define FILE_FLAG_OVERLAPPED 0x40000000
#define FILE_FLAG_POSIX_SEMANTICS 0x1000000
#define FILE_FLAG_RANDOM_ACCESS 0x10000000
#define FILE_FLAG_SEQUENTIAL_SCAN 0x8000000
#define FILE_FLAG_SESSION_AWARE 0x800000
#define FILE_FLAG_WRITE_THROUGH 0x80000000
#define FILE_GENERIC_EXECUTE (STANDARD_RIGHTS_EXECUTE | FILE_READ_ATTRIBUTES | FILE_EXECUTE | SYNCHRONIZE)
#define FILE_GENERIC_READ (STANDARD_RIGHTS_READ | FILE_READ_DATA | FILE_READ_ATTRIBUTES | FILE_READ_EA | SYNCHRONIZE)
#define FILE_GENERIC_WRITE (STANDARD_RIGHTS_WRITE | FILE_WRITE_DATA | FILE_WRITE_ATTRIBUTES | FILE_WRITE_EA | FILE_APPEND_DATA | SYNCHRONIZE)
#define FILE_LIST_DIRECTORY 0x1
#define FILE_READ_ATTRIBUTES 0x80
#define FILE_READ_DATA 0x1
#define FILE_READ_EA 0x8
#define FILE_READ_ONLY_VOLUME 0x80000
#define FILE_SHARE_DELETE 0x4
#define FILE_SHARE_READ 0x1
#define FILE_SHARE_WRITE 0x2
#define FILE_TRAVERSE 0x20
#define FILE_WRITE_ATTRIBUTES 0x100
#define FILE_WRITE_DATA 0x2
#define FILE_WRITE_EA 0x10
#define FLI_GLYPHS 0x40000
#define FLOODFILLBORDER 0
#define FLOODFILLSURFACE 1
#define FOREGROUND_BLUE 0x1
#define FOREGROUND_GREEN 0x2
#define FOREGROUND_INTENSITY 0x8
#define FOREGROUND_RED 0x4
#define FR_NOT_ENUM 0x20
#define FR_PRIVATE 0x10
#define GCL_CBCLSEXTRA (-20)
#define GCL_CBWNDEXTRA (-18)
#define GCL_HBRBACKGROUND (-10)
#define GCL_HCURSOR (-12)
#define GCL_HICON (-14)
#define GCL_HICONSM (-34)
#define GCL_HMODULE (-16)
#define GCL_MENUNAME (-8)
#define GCL_STYLE (-26)
#define GCL_WNDPROC (-24)
#define GCP_DBCS 1
#define GCP_DIACRITIC 256
#define GCP_GLYPHSHAPE 16
#define GCP_KASHIDA 1024
#define GCP_LIGATE 32
#define GCP_REORDER 2
#define GCP_USEKERNING 8
#define GCW_ATOM (-32)
#define GENERIC_ALL 0x10000000
#define GENERIC_EXECUTE 0x20000000
#define GENERIC_READ 0x80000000
#define GENERIC_WRITE 0x40000000
#define GGI_MARK_NONEXISTING_GLYPHS 0x1
#define GGO_BEZIER 3
#define GGO_BITMAP 1
#define GGO_GLYPH_INDEX 128
#define GGO_GRAY2_BITMAP 4
#define GGO_GRAY4_BITMAP 5
#define GGO_GRAY8_BITMAP 6
#define GGO_METRICS 0
#define GGO_NATIVE 2
#define GGO_UNHINTED 256
#define GHND (GMEM_MOVEABLE | GMEM_ZEROINIT)
#define GMEM_DDESHARE 0x2000
#define GMEM_DISCARDABLE 0x100
#define GMEM_FIXED 0x0
#define GMEM_LOWER GMEM_NOT_BANKED
#define GMEM_MODIFY 0x80
#define GMEM_MOVEABLE 0x2
#define GMEM_NOCOMPACT 0x10
#define GMEM_NODISCARD 0x20
#define GMEM_NOTIFY 0x4000
#define GMEM_NOT_BANKED 0x1000
#define GMEM_SHARE 0x2000
#define GMEM_ZEROINIT 0x40
#define GM_ADVANCED 2
#define GM_COMPATIBLE 1
#define GPTR (GMEM_FIXED | GMEM_ZEROINIT)
#define GRADIENT_FILL_RECT_H 0x0
#define GRADIENT_FILL_RECT_V 0x1
#define GRADIENT_FILL_TRIANGLE 0x2
#define GRAY_BRUSH 2
#define GW_CHILD 5
#define GW_ENABLEDPOPUP 6
#define GW_HWNDFIRST 0
#define GW_HWNDLAST 1
#define GW_HWNDNEXT 2
#define GW_HWNDPREV 3
#define GW_OWNER 4
#define GWL_EXSTYLE (-20)
#define GWL_HINSTANCE (-6)
#define GWL_HWNDPARENT (-8)
#define GWL_ID (-12)
#define GWL_STYLE (-16)
#define GWL_USERDATA (-21)
#define GWL_WNDPROC (-4)
#define HALFTONE 4
#define HBMMENU_CALLBACK ((HBITMAP) -1)
#define HBMMENU_MBAR_CLOSE ((HBITMAP) 5)
#define HBMMENU_MBAR_CLOSE_D ((HBITMAP) 6)
#define HBMMENU_MBAR_MINIMIZE ((HBITMAP) 3)
#define HBMMENU_MBAR_MINIMIZE_D ((HBITMAP) 7)
#define HBMMENU_MBAR_RESTORE ((HBITMAP) 2)
#define HBMMENU_POPUP_CLOSE ((HBITMAP) 8)
#define HBMMENU_POPUP_MAXIMIZE ((HBITMAP) 10)
#define HBMMENU_POPUP_MINIMIZE ((HBITMAP) 11)
#define HBMMENU_POPUP_RESTORE ((HBITMAP) 9)
#define HBMMENU_SYSTEM ((HBITMAP) 1)
#define HEAP_CREATE_ENABLE_EXECUTE 0x40000
#define HEAP_GENERATE_EXCEPTIONS 0x4
#define HEAP_NO_SERIALIZE 0x1
#define HEAP_REALLOC_IN_PLACE_ONLY 0x10
#define HEAP_ZERO_MEMORY 0x8
#define HIGH_PRIORITY_CLASS 0x80
#define HOLLOW_BRUSH 5
#define HORZRES 8
#define HORZSIZE 4
#define HS_BDIAGONAL 3
#define HS_CROSS 4
#define HS_DIAGCROSS 5
#define HS_FDIAGONAL 2
#define HS_HORIZONTAL 0
#define HS_VERTICAL 1
#define HWND_BOTTOM ((HWND) 1)
#define HWND_NOTOPMOST ((HWND) -2)
#define HWND_TOP ((HWND) 0)
#define HWND_TOPMOST ((HWND) -1)
#define IDABORT 3
#define IDANI_CAPTION 3
#define IDCANCEL 2
#define IDCLOSE 8
#define IDCONTINUE 11
#define IDC_APPSTARTING MAKEINTRESOURCE (32650)
#define IDC_ARROW MAKEINTRESOURCE (32512)
#define IDC_CROSS MAKEINTRESOURCE (32515)
#define IDC_HAND MAKEINTRESOURCE (32649)
#define IDC_HELP MAKEINTRESOURCE (32651)
#define IDC_IBEAM MAKEINTRESOURCE (32513)
#define IDC_ICON MAKEINTRESOURCE (32641)
#define IDC_NO MAKEINTRESOURCE (32648)
#define IDC_SIZE MAKEINTRESOURCE (32640)
#define IDC_SIZEALL MAKEINTRESOURCE (32646)
#define IDC_SIZENESW MAKEINTRESOURCE (32643)
#define IDC_SIZENS MAKEINTRESOURCE (32645)
#define IDC_SIZENWSE MAKEINTRESOURCE (32642)
#define IDC_SIZEWE MAKEINTRESOURCE (32644)
#define IDC_UPARROW MAKEINTRESOURCE (32516)
#define IDC_WAIT MAKEINTRESOURCE (32514)
#define IDHELP 9
#define IDIGNORE 5
#define IDI_APPLICATION MAKEINTRESOURCE (32512)
#define IDI_ASTERISK MAKEINTRESOURCE (32516)
#define IDI_ERROR MAKEINTRESOURCE (32513)
#define IDI_EXCLAMATION MAKEINTRESOURCE (32515)
#define IDI_HAND MAKEINTRESOURCE (32513)
#define IDI_INFORMATION MAKEINTRESOURCE (32516)
#define IDI_QUESTION MAKEINTRESOURCE (32514)
#define IDI_SHIELD MAKEINTRESOURCE (32518)
#define IDI_WARNING MAKEINTRESOURCE (32515)
#define IDI_WINLOGO MAKEINTRESOURCE (32517)
#define IDLE_PRIORITY_CLASS 0x40
#define IDNO 7
#define IDOK 1
#define IDRETRY 4
#define IDTRYAGAIN 10
#define IDYES 6
#define ILLUMINANT_A 1
#define ILLUMINANT_B 2
#define ILLUMINANT_C 3
#define ILLUMINANT_D50 4
#define ILLUMINANT_D55 5
#define ILLUMINANT_D65 6
#define ILLUMINANT_D75 7
#define ILLUMINANT_DAYLIGHT ILLUMINANT_C
#define ILLUMINANT_DEVICE_DEFAULT 0
#define ILLUMINANT_F2 8
#define ILLUMINANT_FLUORESCENT ILLUMINANT_F2
#define ILLUMINANT_MAX_INDEX ILLUMINANT_F2
#define ILLUMINANT_NTSC ILLUMINANT_C
#define ILLUMINANT_TUNGSTEN ILLUMINANT_A
#define INFINITE (-1)
#define INIT_ONCE_ASYNC 0x2
#define INIT_ONCE_CHECK_ONLY 0x1
#define INVALID_FILE_ATTRIBUTES (-1)
#define INVALID_FILE_SIZE (-1)
#define INVALID_HANDLE_VALUE (-1)
#define INVALID_SET_FILE_POINTER (-1)
#define INVALID_SOCKET (-1)
#define IPPROTO_ICMP 1
#define IPPROTO_ICMPV6 58
#define IPPROTO_IGMP 2
#define IPPROTO_RM 113
#define IPPROTO_TCP 6
#define IPPROTO_UDP 17
#define LAYOUT_BITMAPORIENTATIONPRESERVED 8
#define LAYOUT_BTT 2
#define LAYOUT_LTR 0
#define LAYOUT_ORIENTATIONMASK (LAYOUT_RTL | LAYOUT_BTT | LAYOUT_VBH)
#define LAYOUT_RTL 1
#define LAYOUT_VBH 4
#define LC_INTERIORS 128
#define LC_MARKER 4
#define LC_NONE 0
#define LC_POLYLINE 2
#define LC_POLYMARKER 8
#define LC_STYLED 32
#define LC_WIDE 16
#define LC_WIDESTYLED 64
#define LF_FACESIZE 32
#define LF_FULLFACESIZE 64
#define LINECAPS 30
#define LOGPIXELSX 88
#define LOGPIXELSY 90
#define LTGRAY_BRUSH 1
#define MARKPARITY 3
#define MAXBYTE 0xff
#define MAXDWORD 0xffffffff
#define MAXWORD 0xffff
#define MB_ABORTRETRYIGNORE 0x2
#define MB_APPLMODAL 0x0
#define MB_CANCELTRYCONTINUE 0x6
#define MB_DEFAULT_DESKTOP_ONLY 0x20000
#define MB_DEFBUTTON1 0x0
#define MB_DEFBUTTON2 0x100
#define MB_DEFBUTTON3 0x200
#define MB_DEFBUTTON4 0x300
#define MB_HELP 0x4000
#define MB_ICONASTERISK 0x40
#define MB_ICONERROR MB_ICONHAND
#define MB_ICONEXCLAMATION 0x30
#define MB_ICONHAND 0x10
#define MB_ICONINFORMATION MB_ICONASTERISK
#define MB_ICONQUESTION 0x20
#define MB_ICONSTOP MB_ICONHAND
#define MB_ICONWARNING MB_ICONEXCLAMATION
#define MB_NOFOCUS 0x8000
#define MB_OK 0x0
#define MB_OKCANCEL 0x1
#define MB_RETRYCANCEL 0x5
#define MB_RIGHT 0x80000
#define MB_RTLREADING 0x100000
#define MB_SERVICE_NOTIFICATION 0x200000
#define MB_SETFOREGROUND 0x10000
#define MB_SYSTEMMODAL 0x1000
#define MB_TASKMODAL 0x2000
#define MB_TOPMOST 0x40000
#define MB_USERICON 0x80
#define MB_YESNO 0x4
#define MB_YESNOCANCEL 0x3
#define MERGECOPY 0xC000CA
#define MERGEPAINT 0xBB0226
#define MFS_CHECKED MF_CHECKED
#define MFS_DEFAULT MF_DEFAULT
#define MFS_DISABLED MFS_GRAYED
#define MFS_ENABLED MF_ENABLED
#define MFS_GRAYED 0x3
#define MFS_HILITE MF_HILITE
#define MFS_UNCHECKED MF_UNCHECKED
#define MFS_UNHILITE MF_UNHILITE
#define MFT_BITMAP MF_BITMAP
#define MFT_MENUBARBREAK MF_MENUBARBREAK
#define MFT_MENUBREAK MF_MENUBREAK
#define MFT_OWNERDRAW MF_OWNERDRAW
#define MFT_RADIOCHECK 0x200
#define MFT_RIGHTJUSTIFY MF_RIGHTJUSTIFY
#define MFT_RIGHTORDER 0x2000
#define MFT_SEPARATOR MF_SEPARATOR
#define MFT_STRING MF_STRING
#define MF_APPEND 0x100
#define MF_BITMAP 0x4
#define MF_BYCOMMAND 0x0
#define MF_BYPOSITION 0x400
#define MF_CHANGE 0x80
#define MF_CHECKED 0x8
#define MF_DEFAULT 0x1000
#define MF_DELETE 0x200
#define MF_DISABLED 0x2
#define MF_ENABLED 0x0
#define MF_GRAYED 0x1
#define MF_HELP 0x4000
#define MF_HILITE 0x80
#define MF_INSERT 0x0
#define MF_MENUBARBREAK 0x20
#define MF_MENUBREAK 0x40
#define MF_OWNERDRAW 0x100
#define MF_POPUP 0x10
#define MF_REMOVE 0x1000
#define MF_RIGHTJUSTIFY 0x4000
#define MF_SEPARATOR 0x800
#define MF_STRING 0x0
#define MF_SYSMENU 0x2000
#define MF_UNCHECKED 0x0
#define MF_UNHILITE 0x0
#define MF_USECHECKBITMAPS 0x200
#define MIIM_BITMAP 0x80
#define MIIM_CHECKMARKS 0x8
#define MIIM_DATA 0x20
#define MIIM_FTYPE 0x100
#define MIIM_ID 0x2
#define MIIM_STATE 0x1
#define MIIM_STRING 0x40
#define MIIM_SUBMENU 0x4
#define MIIM_TYPE 0x10
#define MM_ANISOTROPIC 8
#define MM_HIENGLISH 5
#define MM_HIMETRIC 3
#define MM_ISOTROPIC 7
#define MM_LOENGLISH 4
#define MM_LOMETRIC 2
#define MM_MAX_NUMAXES 16
#define MM_TEXT 1
#define MM_TWIPS 6
#define MN_GETHMENU 0x1E1
#define MONITOR_DEFAULTTONEAREST 0x2
#define MONITOR_DEFAULTTONULL 0x0
#define MONITOR_DEFAULTTOPRIMARY 0x1
#define MOUSEEVENTF_ABSOLUTE 0x8000
#define MOUSEEVENTF_HWHEEL 0x1000
#define MOUSEEVENTF_LEFTDOWN 0x2
#define MOUSEEVENTF_LEFTUP 0x4
#define MOUSEEVENTF_MIDDLEDOWN 0x20
#define MOUSEEVENTF_MIDDLEUP 0x40
#define MOUSEEVENTF_MOVE 0x1
#define MOUSEEVENTF_RIGHTDOWN 0x8
#define MOUSEEVENTF_RIGHTUP 0x10
#define MOUSEEVENTF_WHEEL 0x800
#define MOUSEEVENTF_XDOWN 0x80
#define MOUSEEVENTF_XUP 0x100
#define MSG_DONTROUTE 0x4
#define MSG_OOB 0x1
#define MSG_PARTIAL 0x8000
#define MSG_PEEK 0x2
#define MS_CTS_ON 0x10
#define MS_DSR_ON 0x20
#define MS_RING_ON 0x40
#define MS_RLSD_ON 0x80
#define MWT_IDENTITY 1
#define MWT_LEFTMULTIPLY 2
#define MWT_RIGHTMULTIPLY 3
#define NFR_ANSI 1
#define NFR_UNICODE 2
#define NF_QUERY 3
#define NF_REQUERY 4
#define NOMIRRORBITMAP 0x80000000
#define NOPARITY 0
#define NORMAL_PRIORITY_CLASS 0x20
#define NOTSRCCOPY 0x330008
#define NOTSRCERASE 0x1100A6
#define NULL nullptr
#define NULLREGION 1
#define NULL_BRUSH 5
#define NULL_PEN 8
#define NUMBRUSHES 16
#define NUMCOLORS 24
#define NUMFONTS 22
#define NUMMARKERS 20
#define NUMPENS 18
#define NUMRESERVED 106
#define OBJ_BITMAP 7
#define OBJ_BRUSH 2
#define OBJ_COLORSPACE 14
#define OBJ_DC 3
#define OBJ_ENHMETADC 12
#define OBJ_ENHMETAFILE 13
#define OBJ_EXTPEN 11
#define OBJ_FONT 6
#define OBJ_MEMDC 10
#define OBJ_METADC 4
#define OBJ_METAFILE 9
#define OBJ_PAL 5
#define OBJ_PEN 1
#define OBJ_REGION 8
#define ODDPARITY 1
#define OEM_FIXED_FONT 10
#define ONE5STOPBITS 1
#define ONESTOPBIT 0
#define OPAQUE 2
#define OPEN_ALWAYS 4
#define OPEN_EXISTING 3
#define PARITY_EVEN 0x400
#define PARITY_MARK 0x800
#define PARITY_NONE 0x100
#define PARITY_ODD 0x200
#define PARITY_SPACE 0x1000
#define PATCOPY 0xF00021
#define PATH_MAX 260
#define PATINVERT 0x5A0049
#define PATPAINT 0xFB0A09
#define PBTF_APMRESUMEFROMFAILURE 0x1
#define PBT_APMBATTERYLOW 0x9
#define PBT_APMOEMEVENT 0xB
#define PBT_APMPOWERSTATUSCHANGE 0xA
#define PBT_APMQUERYSTANDBY 0x1
#define PBT_APMQUERYSTANDBYFAILED 0x3
#define PBT_APMQUERYSUSPEND 0x0
#define PBT_APMQUERYSUSPENDFAILED 0x2
#define PBT_APMRESUMEAUTOMATIC 0x12
#define PBT_APMRESUMECRITICAL 0x6
#define PBT_APMRESUMESTANDBY 0x8
#define PBT_APMRESUMESUSPEND 0x7
#define PBT_APMSTANDBY 0x5
#define PBT_APMSUSPEND 0x4
#define PCF_16BITMODE 0x200
#define PCF_DTRDSR 0x1
#define PCF_INTTIMEOUTS 0x80
#define PCF_PARITY_CHECK 0x8
#define PCF_RLSD 0x4
#define PCF_RTSCTS 0x2
#define PCF_SETXCHAR 0x20
#define PCF_SPECIALCHARS 0x100
#define PCF_TOTALTIMEOUTS 0x40
#define PCF_XONXOFF 0x10
#define PC_INTERIORS 128
#define PC_NONE 0
#define PC_PATHS 512
#define PC_POLYGON 1
#define PC_POLYPOLYGON 256
#define PC_RECTANGLE 2
#define PC_SCANLINE 8
#define PC_STYLED 32
#define PC_TRAPEZOID 4
#define PC_WIDE 16
#define PC_WIDESTYLED 64
#define PC_WINDPOLYGON 4
#define PDEVICESIZE 26
#define PHYSICALHEIGHT 111
#define PHYSICALOFFSETX 112
#define PHYSICALOFFSETY 113
#define PHYSICALWIDTH 110
#define PLANES 14
#define POLYGONALCAPS 32
#define PROCESSOR_ARCHITECTURE_AMD64 9
#define PROCESSOR_ARCHITECTURE_ARM 5
#define PROCESSOR_ARCHITECTURE_IA64 6
#define PROCESSOR_ARCHITECTURE_INTEL 0
#define PROCESSOR_ARCHITECTURE_UNKNOWN 0xffff
#define PROCESS_HEAP_ENTRY_BUSY 0x4
#define PROCESS_HEAP_ENTRY_DDESHARE 0x20
#define PROCESS_HEAP_ENTRY_MOVEABLE 0x10
#define PROCESS_HEAP_REGION 0x1
#define PROCESS_HEAP_UNCOMMITTED_RANGE 0x2
#define PROCESS_MODE_BACKGROUND_BEGIN 0x100000
#define PROCESS_MODE_BACKGROUND_END 0x200000
#define PST_FAX 0x21
#define PST_LAT 0x101
#define PST_MODEM 0x6
#define PST_NETWORK_BRIDGE 0x100
#define PST_PARALLELPORT 0x2
#define PST_RS232 0x1
#define PST_RS422 0x3
#define PST_RS423 0x4
#define PST_RS449 0x5
#define PST_SCANNER 0x22
#define PST_TCPIP_TELNET 0x102
#define PST_UNSPECIFIED 0x0
#define PST_X25 0x103
#define PS_DASH 1
#define PS_DASHDOT 3
#define PS_DASHDOTDOT 4
#define PS_DOT 2
#define PS_INSIDEFRAME 6
#define PS_NULL 5
#define PS_SOLID 0
#define PURGE_RXABORT 0x2
#define PURGE_RXCLEAR 0x8
#define PURGE_TXABORT 0x1
#define PURGE_TXCLEAR 0x4
#define PWR_CRITICALRESUME 3
#define PWR_FAIL (-1)
#define PWR_OK 1
#define PWR_SUSPENDREQUEST 1
#define PWR_SUSPENDRESUME 2
#define R2_BLACK 1
#define R2_COPYPEN 13
#define R2_MASKNOTPEN 3
#define R2_MASKPEN 9
#define R2_MASKPENNOT 5
#define R2_MERGENOTPEN 12
#define R2_MERGEPEN 15
#define R2_MERGEPENNOT 14
#define R2_NOP 11
#define R2_NOT 6
#define R2_NOTCOPYPEN 4
#define R2_NOTMASKPEN 8
#define R2_NOTMERGEPEN 2
#define R2_NOTXORPEN 10
#define R2_WHITE 16
#define R2_XORPEN 7
#define RASTERCAPS 38
#define RC_BANDING 2
#define RC_BIGFONT 1024
#define RC_BITBLT 1
#define RC_BITMAP64 8
#define RC_DEVBITS 0x8000
#define RC_DIBTODEV 512
#define RC_DI_BITMAP 128
#define RC_FLOODFILL 4096
#define RC_GDI20_OUTPUT 16
#define RC_GDI20_STATE 32
#define RC_NONE 0
#define RC_OP_DX_OUTPUT 0x4000
#define RC_PALETTE 256
#define RC_SAVEBITMAP 64
#define RC_SCALING 4
#define RC_STRETCHBLT 2048
#define RC_STRETCHDIB 8192
#define READ_CONTROL 0x20000
#define REALTIME_PRIORITY_CLASS 0x100
#define RGN_AND 1
#define RGN_COPY 5
#define RGN_DIFF 4
#define RGN_OR 2
#define RGN_XOR 3
#define RTS_CONTROL_DISABLE 0x0
#define RTS_CONTROL_ENABLE 0x1
#define RTS_CONTROL_HANDSHAKE 0x2
#define RTS_CONTROL_TOGGLE 0x3
#define SB_CONST_ALPHA 0x1
#define SB_GRAD_RECT 0x10
#define SB_GRAD_TRI 0x20
#define SB_NONE 0x0
#define SB_PIXEL_ALPHA 0x2
#define SB_PREMULT_ALPHA 0x4
#define SCALINGFACTORX 114
#define SCALINGFACTORY 115
#define SD_BOTH 2
#define SD_RECEIVE 0
#define SD_SEND 1
#define SHADEBLENDCAPS 120
#define SIMPLEREGION 2
#define SIZEPALETTE 104
#define SOCKET_ERROR (-1)
#define SOCK_DGRAM 2
#define SOCK_RAW 3
#define SOCK_RDM 4
#define SOCK_SEQPACKET 5
#define SOCK_STREAM 1
#define SOMAXCONN 0x7fffffff
#define SPACEPARITY 4
#define SPECIFIC_RIGHTS_ALL 0xFFFF
#define SP_BAUD 0x2
#define SP_DATABITS 0x4
#define SP_HANDSHAKING 0x10
#define SP_PARITY 0x1
#define SP_PARITY_CHECK 0x20
#define SP_RLSD 0x40
#define SP_STOPBITS 0x8
#define SRCAND 0x8800C6
#define SRCCOPY 0xCC0020
#define SRCERASE 0x440328
#define SRCINVERT 0x660046
#define SRCPAINT 0xEE0086
#define STANDARD_RIGHTS_ALL (DELETE | READ_CONTROL | WRITE_DAC | WRITE_OWNER | SYNCHRONIZE)
#define STANDARD_RIGHTS_EXECUTE READ_CONTROL
#define STANDARD_RIGHTS_READ READ_CONTROL
#define STANDARD_RIGHTS_REQUIRED (DELETE | READ_CONTROL | WRITE_DAC | WRITE_OWNER)
#define STANDARD_RIGHTS_WRITE READ_CONTROL
#define STD_ERROR_HANDLE (-12)
#define STD_INPUT_HANDLE (-10)
#define STD_OUTPUT_HANDLE (-11)
#define STOPBITS_10 0x1
#define STOPBITS_15 0x2
#define STOPBITS_20 0x4
#define STRETCH_ANDSCANS 1
#define STRETCH_DELETESCANS 3
#define STRETCH_HALFTONE 4
#define STRETCH_ORSCANS 2
#define SWP_ASYNCWINDOWPOS 0x4000
#define SWP_DEFERERASE 0x2000
#define SWP_DRAWFRAME SWP_FRAMECHANGED
#define SWP_FRAMECHANGED 0x20
#define SWP_HIDEWINDOW 0x80
#define SWP_NOACTIVATE 0x10
#define SWP_NOCOPYBITS 0x100
#define SWP_NOMOVE 0x2
#define SWP_NOOWNERZORDER 0x200
#define SWP_NOREDRAW 0x8
#define SWP_NOREPOSITION SWP_NOOWNERZORDER
#define SWP_NOSENDCHANGING 0x400
#define SWP_NOSIZE 0x1
#define SWP_NOZORDER 0x4
#define SWP_SHOWWINDOW 0x40
#define SW_FORCEMINIMIZE 11
#define SW_HIDE 0
#define SW_MAXIMIZE 3
#define SW_MINIMIZE 6
#define SW_RESTORE 9
#define SW_SHOW 5
#define SW_SHOWDEFAULT 10
#define SW_SHOWMAXIMIZED 3
#define SW_SHOWMINIMIZED 2
#define SW_SHOWMINNOACTIVE 7
#define SW_SHOWNA 8
#define SW_SHOWNOACTIVATE 4
#define SW_SHOWNORMAL 1
#define SYNCHRONIZE 0x100000
#define SYSPAL_ERROR 0
#define SYSPAL_NOSTATIC 2
#define SYSPAL_NOSTATIC256 3
#define SYSPAL_STATIC 1
#define SYSRGN 4
#define SYSTEM_FIXED_FONT 16
#define SYSTEM_FONT 13
#define TA_BASELINE 24
#define TA_BOTTOM 8
#define TA_CENTER 6
#define TA_LEFT 0
#define TA_NOUPDATECP 0
#define TA_RIGHT 2
#define TA_RTLREADING 256
#define TA_TOP 0
#define TA_UPDATECP 1
#define TC_CP_STROKE 4
#define TC_CR_90 8
#define TC_CR_ANY 16
#define TC_EA_DOUBLE 512
#define TC_IA_ABLE 1024
#define TC_OP_CHARACTER 1
#define TC_OP_STROKE 2
#define TC_RA_ABLE 8192
#define TC_RESERVED 32768
#define TC_SA_CONTIN 256
#define TC_SA_DOUBLE 64
#define TC_SA_INTEGER 128
#define TC_SCROLLBLT 65536
#define TC_SF_X_YINDEP 32
#define TC_SO_ABLE 4096
#define TC_UA_ABLE 2048
#define TC_VA_ABLE 16384
#define TECHNOLOGY 2
#define TEXTCAPS 34
#define TIMERV_DEFAULT_COALESCING 0x0
#define TIMERV_NO_COALESCING 0xFFFFFFFF
#define TRANSPARENT 1
#define TRUE 1
#define TRUNCATE_EXISTING 5
#define TWOSTOPBITS 2
#define UISF_ACTIVE 0x4
#define UISF_HIDEACCEL 0x2
#define UISF_HIDEFOCUS 0x1
#define UIS_CLEAR 2
#define UIS_INITIALIZE 3
#define UIS_SET 1
#define USER_TIMER_MAXIMUM 0x7FFFFFFF
#define USER_TIMER_MINIMUM 0xA
#define VERTRES 10
#define VERTSIZE 6
#define VREFRESH 116
#define WAIT_ABANDONED 0x80
#define WAIT_FAILED (-1)
#define WAIT_OBJECT_0 0x0
#define WAIT_TIMEOUT 0x102
#define WA_ACTIVE 1
#define WA_CLICKACTIVE 2
#define WA_INACTIVE 0
#define WHITENESS 0xFF0062
#define WHITEONBLACK 2
#define WHITE_BRUSH 0
#define WHITE_PEN 6
#define WINDING 2
#define WMSZ_BOTTOM 6
#define WMSZ_BOTTOMLEFT 7
#define WMSZ_BOTTOMRIGHT 8
#define WMSZ_LEFT 1
#define WMSZ_RIGHT 2
#define WMSZ_TOP 3
#define WMSZ_TOPLEFT 4
#define WMSZ_TOPRIGHT 5
#define WM_ACTIVATE 0x6
#define WM_ACTIVATEAPP 0x1C
#define WM_AFXFIRST 0x360
#define WM_AFXLAST 0x37F
#define WM_APP 0x8000
#define WM_APPCOMMAND 0x319
#define WM_ASKCBFORMATNAME 0x30C
#define WM_CANCELJOURNAL 0x4B
#define WM_CANCELMODE 0x1F
#define WM_CAPTURECHANGED 0x215
#define WM_CHANGECBCHAIN 0x30D
#define WM_CHANGEUISTATE 0x127
#define WM_CHAR 0x102
#define WM_CHARTOITEM 0x2F
#define WM_CHILDACTIVATE 0x22
#define WM_CLEAR 0x303
#define WM_CLOSE 0x10
#define WM_COMMAND 0x111
#define WM_COMMNOTIFY 0x44
#define WM_COMPACTING 0x41
#define WM_COMPAREITEM 0x39
#define WM_CONTEXTMENU 0x7B
#define WM_COPY 0x301
#define WM_COPYDATA 0x4A
#define WM_CREATE 0x1
#define WM_CTLCOLORBTN 0x135
#define WM_CTLCOLORDLG 0x136
#define WM_CTLCOLOREDIT 0x133
#define WM_CTLCOLORLISTBOX 0x134
#define WM_CTLCOLORMSGBOX 0x132
#define WM_CTLCOLORSCROLLBAR 0x137
#define WM_CTLCOLORSTATIC 0x138
#define WM_CUT 0x300
#define WM_DEADCHAR 0x103
#define WM_DELETEITEM 0x2D
#define WM_DESTROY 0x2
#define WM_DESTROYCLIPBOARD 0x307
#define WM_DEVICECHANGE 0x219
#define WM_DEVMODECHANGE 0x1B
#define WM_DISPLAYCHANGE 0x7E
#define WM_DRAWCLIPBOARD 0x308
#define WM_DRAWITEM 0x2B
#define WM_DROPFILES 0x233
#define WM_ENABLE 0xA
#define WM_ENDSESSION 0x16
#define WM_ENTERIDLE 0x121
#define WM_ENTERMENULOOP 0x211
#define WM_ENTERSIZEMOVE 0x231
#define WM_ERASEBKGND 0x14
#define WM_EXITMENULOOP 0x212
#define WM_EXITSIZEMOVE 0x232
#define WM_FONTCHANGE 0x1D
#define WM_GETDLGCODE 0x87
#define WM_GETFONT 0x31
#define WM_GETHOTKEY 0x33
#define WM_GETICON 0x7F
#define WM_GETMINMAXINFO 0x24
#define WM_GETOBJECT 0x3D
#define WM_GETTEXT 0xD
#define WM_GETTEXTLENGTH 0xE
#define WM_HANDHELDFIRST 0x358
#define WM_HANDHELDLAST 0x35F
#define WM_HELP 0x53
#define WM_HOTKEY 0x312
#define WM_HSCROLL 0x114
#define WM_HSCROLLCLIPBOARD 0x30E
#define WM_ICONERASEBKGND 0x27
#define WM_IME_CHAR 0x286
#define WM_IME_COMPOSITION 0x10F
#define WM_IME_COMPOSITIONFULL 0x284
#define WM_IME_CONTROL 0x283
#define WM_IME_ENDCOMPOSITION 0x10E
#define WM_IME_KEYDOWN 0x290
#define WM_IME_KEYLAST 0x10F
#define WM_IME_KEYUP 0x291
#define WM_IME_NOTIFY 0x282
#define WM_IME_REQUEST 0x288
#define WM_IME_SELECT 0x285
#define WM_IME_SETCONTEXT 0x281
#define WM_IME_STARTCOMPOSITION 0x10D
#define WM_INITDIALOG 0x110
#define WM_INITMENU 0x116
#define WM_INITMENUPOPUP 0x117
#define WM_INPUT 0xFF
#define WM_INPUTLANGCHANGE 0x51
#define WM_INPUTLANGCHANGEREQUEST 0x50
#define WM_KEYDOWN 0x100
#define WM_KEYFIRST 0x100
#define WM_KEYUP 0x101
#define WM_KILLFOCUS 0x8
#define WM_LBUTTONDBLCLK 0x203
#define WM_LBUTTONDOWN 0x201
#define WM_LBUTTONUP 0x202
#define WM_MBUTTONDBLCLK 0x209
#define WM_MBUTTONDOWN 0x207
#define WM_MBUTTONUP 0x208
#define WM_MDIACTIVATE 0x222
#define WM_MDICASCADE 0x227
#define WM_MDICREATE 0x220
#define WM_MDIDESTROY 0x221
#define WM_MDIGETACTIVE 0x229
#define WM_MDIICONARRANGE 0x228
#define WM_MDIMAXIMIZE 0x225
#define WM_MDINEXT 0x224
#define WM_MDIREFRESHMENU 0x234
#define WM_MDIRESTORE 0x223
#define WM_MDISETMENU 0x230
#define WM_MDITILE 0x226
#define WM_MEASUREITEM 0x2C
#define WM_MENUCHAR 0x120
#define WM_MENUCOMMAND 0x126
#define WM_MENUDRAG 0x123
#define WM_MENUGETOBJECT 0x124
#define WM_MENURBUTTONUP 0x122
#define WM_MENUSELECT 0x11F
#define WM_MOUSEACTIVATE 0x21
#define WM_MOUSEFIRST 0x200
#define WM_MOUSEHOVER 0x2A1
#define WM_MOUSELEAVE 0x2A3
#define WM_MOUSEMOVE 0x200
#define WM_MOUSEWHEEL 0x20A
#define WM_MOVE 0x3
#define WM_MOVING 0x216
#define WM_NCACTIVATE 0x86
#define WM_NCCALCSIZE 0x83
#define WM_NCCREATE 0x81
#define WM_NCDESTROY 0x82
#define WM_NCHITTEST 0x84
#define WM_NCLBUTTONDBLCLK 0xA3
#define WM_NCLBUTTONDOWN 0xA1
#define WM_NCLBUTTONUP 0xA2
#define WM_NCMBUTTONDBLCLK 0xA9
#define WM_NCMBUTTONDOWN 0xA7
#define WM_NCMBUTTONUP 0xA8
#define WM_NCMOUSEHOVER 0x2A0
#define WM_NCMOUSELEAVE 0x2A2
#define WM_NCMOUSEMOVE 0xA0
#define WM_NCPAINT 0x85
#define WM_NCRBUTTONDBLCLK 0xA6
#define WM_NCRBUTTONDOWN 0xA4
#define WM_NCRBUTTONUP 0xA5
#define WM_NCXBUTTONDBLCLK 0xAD
#define WM_NCXBUTTONDOWN 0xAB
#define WM_NCXBUTTONUP 0xAC
#define WM_NEXTDLGCTL 0x28
#define WM_NEXTMENU 0x213
#define WM_NOTIFY 0x4E
#define WM_NOTIFYFORMAT 0x55
#define WM_NULL 0x0
#define WM_PAINT 0xF
#define WM_PAINTCLIPBOARD 0x309
#define WM_PAINTICON 0x26
#define WM_PALETTECHANGED 0x311
#define WM_PALETTEISCHANGING 0x310
#define WM_PARENTNOTIFY 0x210
#define WM_PASTE 0x302
#define WM_PENWINFIRST 0x380
#define WM_PENWINLAST 0x38F
#define WM_POWER 0x48
#define WM_POWERBROADCAST 0x218
#define WM_PRINT 0x317
#define WM_PRINTCLIENT 0x318
#define WM_QUERYDRAGICON 0x37
#define WM_QUERYENDSESSION 0x11
#define WM_QUERYNEWPALETTE 0x30F
#define WM_QUERYOPEN 0x13
#define WM_QUERYUISTATE 0x129
#define WM_QUEUESYNC 0x23
#define WM_QUIT 0x12
#define WM_RBUTTONDBLCLK 0x206
#define WM_RBUTTONDOWN 0x204
#define WM_RBUTTONUP 0x205
#define WM_RENDERALLFORMATS 0x306
#define WM_RENDERFORMAT 0x305
#define WM_SETCURSOR 0x20
#define WM_SETFOCUS 0x7
#define WM_SETFONT 0x30
#define WM_SETHOTKEY 0x32
#define WM_SETICON 0x80
#define WM_SETREDRAW 0xB
#define WM_SETTEXT 0xC
#define WM_SETTINGCHANGE WM_WININICHANGE
#define WM_SHOWWINDOW 0x18
#define WM_SIZE 0x5
#define WM_SIZECLIPBOARD 0x30B
#define WM_SIZING 0x214
#define WM_SPOOLERSTATUS 0x2A
#define WM_STYLECHANGED 0x7D
#define WM_STYLECHANGING 0x7C
#define WM_SYNCPAINT 0x88
#define WM_SYSCHAR 0x106
#define WM_SYSCOLORCHANGE 0x15
#define WM_SYSCOMMAND 0x112
#define WM_SYSDEADCHAR 0x107
#define WM_SYSKEYDOWN 0x104
#define WM_SYSKEYUP 0x105
#define WM_TABLET_FIRST 0x2c0
#define WM_TABLET_LAST 0x2df
#define WM_TCARD 0x52
#define WM_THEMECHANGED 0x31A
#define WM_TIMECHANGE 0x1E
#define WM_TIMER 0x113
#define WM_UNDO 0x304
#define WM_UNINITMENUPOPUP 0x125
#define WM_UPDATEUISTATE 0x128
#define WM_USER 0x400
#define WM_USERCHANGED 0x54
#define WM_VKEYTOITEM 0x2E
#define WM_VSCROLL 0x115
#define WM_VSCROLLCLIPBOARD 0x30A
#define WM_WINDOWPOSCHANGED 0x47
#define WM_WINDOWPOSCHANGING 0x46
#define WM_WININICHANGE 0x1A
#define WM_WTSSESSION_CHANGE 0x2B1
#define WM_XBUTTONDBLCLK 0x20D
#define WM_XBUTTONDOWN 0x20B
#define WM_XBUTTONUP 0x20C
#define WRITE_DAC 0x40000
#define WRITE_OWNER 0x80000
#define WSADESCRIPTION_LEN 256
#define WSAEACCES 10013
#define WSAEADDRINUSE 10048
#define WSAEADDRNOTAVAIL 10049
#define WSAEAFNOSUPPORT 10047
#define WSAEALREADY 10037
#define WSAEBADF 10009
#define WSAECANCELLED 10103
#define WSAECONNABORTED 10053
#define WSAECONNREFUSED 10061
#define WSAECONNRESET 10054
#define WSAEDESTADDRREQ 10039
#define WSAEDISCON 10101
#define WSAEDQUOT 10069
#define WSAEFAULT 10014
#define WSAEHOSTDOWN 10064
#define WSAEHOSTUNREACH 10065
#define WSAEINPROGRESS 10036
#define WSAEINTR 10004
#define WSAEINVAL 10022
#define WSAEINVALIDPROCTABLE 10104
#define WSAEINVALIDPROVIDER 10105
#define WSAEISCONN 10056
#define WSAELOOP 10062
#define WSAEMFILE 10024
#define WSAEMSGSIZE 10040
#define WSAENAMETOOLONG 10063
#define WSAENETDOWN 10050
#define WSAENETRESET 10052
#define WSAENETUNREACH 10051
#define WSAENOBUFS 10055
#define WSAENOMORE 10102
#define WSAENOPROTOOPT 10042
#define WSAENOTCONN 10057
#define WSAENOTEMPTY 10066
#define WSAENOTSOCK 10038
#define WSAEOPNOTSUPP 10045
#define WSAEPFNOSUPPORT 10046
#define WSAEPROCLIM 10067
#define WSAEPROTONOSUPPORT 10043
#define WSAEPROTOTYPE 10041
#define WSAEPROVIDERFAILEDINIT 10106
#define WSAEREFUSED 10112
#define WSAEREMOTE 10071
#define WSAESHUTDOWN 10058
#define WSAESOCKTNOSUPPORT 10044
#define WSAESTALE 10070
#define WSAETIMEDOUT 10060
#define WSAETOOMANYREFS 10059
#define WSAEUSERS 10068
#define WSAEWOULDBLOCK 10035
#define WSAHOST_NOT_FOUND 11001
#define WSANOTINITIALISED 10093
#define WSANO_DATA 11004
#define WSANO_RECOVERY 11003
#define WSASERVICE_NOT_FOUND 10108
#define WSASYSCALLFAILURE 10107
#define WSASYSNOTREADY 10091
#define WSASYS_STATUS_LEN 128
#define WSATRY_AGAIN 11002
#define WSATYPE_NOT_FOUND 10109
#define WSAVERNOTSUPPORTED 10092
#define WSA_E_CANCELLED 10111
#define WSA_E_NO_MORE 10110
#define WSA_INVALID_HANDLE 6
#define WSA_INVALID_PARAMETER 87
#define WSA_IO_INCOMPLETE 996
#define WSA_IO_PENDING 997
#define WSA_NOT_ENOUGH_MEMORY 8
#define WSA_OPERATION_ABORTED 995
#define WSA_QOS_ADMISSION_FAILURE 11010
#define WSA_QOS_BAD_OBJECT 11013
#define WSA_QOS_BAD_STYLE 11012
#define WSA_QOS_EFILTERCOUNT 11021
#define WSA_QOS_EFILTERSTYLE 11019
#define WSA_QOS_EFILTERTYPE 11020
#define WSA_QOS_EFLOWCOUNT 11023
#define WSA_QOS_EFLOWDESC 11026
#define WSA_QOS_EFLOWSPEC 11017
#define WSA_QOS_EOBJLENGTH 11022
#define WSA_QOS_EPOLICYOBJ 11025
#define WSA_QOS_EPROVSPECBUF 11018
#define WSA_QOS_EPSFILTERSPEC 11028
#define WSA_QOS_EPSFLOWSPEC 11027
#define WSA_QOS_ESDMODEOBJ 11029
#define WSA_QOS_ESERVICETYPE 11016
#define WSA_QOS_ESHAPERATEOBJ 11030
#define WSA_QOS_EUNKOWNPSOBJ 11024
#define WSA_QOS_GENERIC_ERROR 11015
#define WSA_QOS_NO_RECEIVERS 11008
#define WSA_QOS_NO_SENDERS 11007
#define WSA_QOS_POLICY_FAILURE 11011
#define WSA_QOS_RECEIVERS 11005
#define WSA_QOS_REQUEST_CONFIRMED 11009
#define WSA_QOS_RESERVED_PETYPE 11031
#define WSA_QOS_SENDERS 11006
#define WSA_QOS_TRAFFIC_CTRL_ERROR 11014
#define WS_BORDER 0x800000
#define WS_CAPTION 0xC00000
#define WS_CHILD 0x40000000
#define WS_CHILDWINDOW WS_CHILD
#define WS_CLIPCHILDREN 0x2000000
#define WS_CLIPSIBLINGS 0x4000000
#define WS_DISABLED 0x8000000
#define WS_DLGFRAME 0x400000
#define WS_EX_ACCEPTFILES 0x10
#define WS_EX_APPWINDOW 0x40000
#define WS_EX_CLIENTEDGE 0x200
#define WS_EX_COMPOSITED 0x2000000
#define WS_EX_CONTEXTHELP 0x400
#define WS_EX_CONTROLPARENT 0x10000
#define WS_EX_DLGMODALFRAME 0x1
#define WS_EX_LAYERED 0x80000
#define WS_EX_LAYOUTRTL 0x400000
#define WS_EX_LEFT 0x0
#define WS_EX_LEFTSCROLLBAR 0x4000
#define WS_EX_LTRREADING 0x0
#define WS_EX_MDICHILD 0x40
#define WS_EX_NOACTIVATE 0x8000000
#define WS_EX_NOINHERITLAYOUT 0x100000
#define WS_EX_NOPARENTNOTIFY 0x4
#define WS_EX_OVERLAPPEDWINDOW (WS_EX_WINDOWEDGE | WS_EX_CLIENTEDGE)
#define WS_EX_PALETTEWINDOW (WS_EX_WINDOWEDGE | WS_EX_TOOLWINDOW | WS_EX_TOPMOST)
#define WS_EX_RIGHT 0x1000
#define WS_EX_RIGHTSCROLLBAR 0x0
#define WS_EX_RTLREADING 0x2000
#define WS_EX_STATICEDGE 0x20000
#define WS_EX_TOOLWINDOW 0x80
#define WS_EX_TOPMOST 0x8
#define WS_EX_TRANSPARENT 0x20
#define WS_EX_WINDOWEDGE 0x100
#define WS_GROUP 0x20000
#define WS_HSCROLL 0x100000
#define WS_ICONIC WS_MINIMIZE
#define WS_MAXIMIZE 0x1000000
#define WS_MAXIMIZEBOX 0x10000
#define WS_MINIMIZE 0x20000000
#define WS_MINIMIZEBOX 0x20000
#define WS_OVERLAPPED 0x0
#define WS_OVERLAPPEDWINDOW (WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX)
#define WS_POPUP 0x80000000
#define WS_POPUPWINDOW (WS_POPUP | WS_BORDER | WS_SYSMENU)
#define WS_SIZEBOX WS_THICKFRAME
#define WS_SYSMENU 0x80000
#define WS_TABSTOP 0x10000
#define WS_THICKFRAME 0x40000
#define WS_TILED WS_OVERLAPPED
#define WS_TILEDWINDOW WS_OVERLAPPEDWINDOW
#define WS_VISIBLE 0x10000000
#define WS_VSCROLL 0x200000
#define XBUTTON1 0x1
#define XBUTTON2 0x2

enum ORIENTATION_PREFERENCE {
	ORIENTATION_PREFERENCE_NONE,
	ORIENTATION_PREFERENCE_LANDSCAPE,
	ORIENTATION_PREFERENCE_PORTRAIT,
	ORIENTATION_PREFERENCE_LANDSCAPE_FLIPPED,
	ORIENTATION_PREFERENCE_PORTRAIT_FLIPPED,
};

using BOOL = int;
using BYTE = unsigned char;
using CHAR = char;
using DWORD = unsigned long;
using FLOAT = float;
using HANDLE = void*;
using INT = int;
using INT_PTR = int;
using LONG = long;
using LONG_PTR = long;
using LONGLONG = long long;
using SHORT = short;
using SIZE_T = decltype (sizeof 0);
using UINT = unsigned int;
using UINT_PTR = decltype (sizeof 0);
using ULONG = unsigned long;
using ULONG_PTR = decltype (sizeof 0);
using ULONGLONG = unsigned long long;
using USHORT = unsigned short;
using VOID = void;
using WCHAR = char16_t;
using WORD = unsigned short;

using ACCESS_MASK = DWORD;
using ATOM = WORD;
using COLORREF = DWORD;
using COLOR16 = USHORT;
using DWORD_PTR = ULONG_PTR;
using FLOAT = float;
using HBITMAP = HANDLE;
using HBRUSH = HANDLE;
using HCURSOR = HANDLE;
using HDC = HANDLE;
using HFONT = HANDLE;
using HGDIOBJ = HANDLE;
using HGLOBAL = HANDLE;
using HICON = HANDLE;
using HINSTANCE = HANDLE;
using HKEY = HANDLE;
using HKEY = HANDLE;
using HMENU = HANDLE;
using HMODULE = HINSTANCE;
using HMONITOR = HANDLE;
using HPALETTE = HANDLE;
using HPEN = HANDLE;
using HRESULT = LONG;
using HRGN = HANDLE;
using HWND = HANDLE;
using LARGE_INTEGER = LONGLONG;
using LCID = DWORD;
using LPARAM = LONG_PTR*;
using LPBYTE = BYTE*;
using LPCSTR = const CHAR*;
using LPCVOID = const VOID*;
using LPCWSTR = const WCHAR*;
using LPDWORD = DWORD*;
using LPINT = INT*;
using LPLONG = LONG*;
using LPSTR = CHAR*;
using LPVOID = VOID*;
using LPWORD = WORD*;
using LPWSTR = WCHAR*;
using LRESULT = LONG_PTR*;
using PBOOL = BOOL*;
using PCHAR = BOOL*;
using PCSTR = const CHAR*;
using PDWORD = DWORD*;
using PFLOAT = FLOAT*;
using PHANDLE = HANDLE*;
using PLONG = LONG*;
using PSTR = CHAR*;
using PULONG = ULONG*;
using PULONGLONG = ULONGLONG*;
using PVOID = VOID*;
using SOCKET = UINT_PTR;
using WPARAM = UINT_PTR;

#ifdef UNICODE
	using LPCTSTR = LPCWSTR;
	using LPTSTR = LPWSTR;
	using TBYTE = WCHAR;
	using TCHAR = WCHAR;
	#define TEXT(string) u##string
#else
	using LPCTSTR = LPCSTR;
	using LPTSTR = LPSTR;
	using TBYTE = BYTE;
	using TCHAR = CHAR;
	#define TEXT(string) string
#endif

struct EXCEPTION_POINTERS;
struct LOGFONTA;
struct LOGFONTW;
struct RECT;
struct TEXTMETRICA;
struct TEXTMETRICW;

using LPRECT = RECT*;
using LPCRECT = const RECT*;
using PEXCEPTION_POINTERS = EXCEPTION_POINTERS*;

using DRAWSTATEPROC = BOOL (*) (HDC hdc, LPARAM lData, WPARAM wData, int cx, int cy);
using FARPROC = INT_PTR (*) ();
using FONTENUMPROCA = int (*) (const LOGFONTA *lpelfe, const TEXTMETRICA *lpntme, DWORD FontType, LPARAM lParam);
using FONTENUMPROCW = int (*) (const LOGFONTW *lpelfe, const TEXTMETRICW *lpntme, DWORD FontType, LPARAM lParam);
using GOBJENUMPROC = int (*) (LPVOID lpLogObject, LPARAM lpData);
using GRAYSTRINGPROC = BOOL (*) (HDC hdc, LPARAM lpData, int nCount);
using LINEDDAPROC = VOID (int Arg1, int Arg2, LPARAM Arg3);
using LPCOLORREF = COLORREF*;
using LPFIBER_START_ROUTINE = VOID (*) (PVOID lpParameter);
using LPHANDLE = HANDLE*;
using LPTHREAD_START_ROUTINE = DWORD (*) (LPVOID lpThreadParameter);
using MONITORENUMPROC = BOOL (*) (HMONITOR Arg1, HDC Arg2, LPRECT Arg3, LPARAM Arg4);
using PDWORD_PTR = DWORD_PTR*;
using PHKEY = HKEY;
using PVECTORED_EXCEPTION_HANDLER = ULONG (*) (PEXCEPTION_POINTERS ExceptionInfo);
using REGSAM = ACCESS_MASK;
using TIMERPROC = VOID (*) (HWND hwnd, UINT uMsg, UINT_PTR idEvent, DWORD dwTime);
using WNDPROC = LRESULT (*) (HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam);

typedef struct ABC {
	int abcA;
	UINT abcB;
	int abcC;
} *PABC, *NPABC, *LPABC;

typedef struct ABCFLOAT {
	FLOAT abcfA;
	FLOAT abcfB;
	FLOAT abcfC;
} *PABCFLOAT, *NPABCFLOAT, *LPABCFLOAT;

typedef struct addrinfo {
	INT ai_flags;
	INT ai_family;
	INT ai_socktype;
	INT ai_protocol;
	SIZE_T ai_addrlen;
	CHAR *ai_canonname;
	struct sockaddr *ai_addr;
	struct addrinfo *ai_next;
} ADDRINFOA, *PADDRINFOA;

typedef struct BITMAP {
	LONG bmType;
	LONG bmWidth;
	LONG bmHeight;
	LONG bmWidthBytes;
	WORD bmPlanes;
	WORD bmBitsPixel;
	LPVOID bmBits;
} *LPBITMAP;

typedef struct BITMAPINFOHEADER {
	DWORD biSize;
	LONG biWidth;
	LONG biHeight;
	WORD biPlanes;
	WORD biBitCount;
	DWORD biCompression;
	DWORD biSizeImage;
	LONG biXPelsPerMeter;
	LONG biYPelsPerMeter;
	DWORD biClrUsed;
	DWORD biClrImportant;
} *PBITMAPINFOHEADER;

struct RGBQUAD {
	BYTE rgbBlue;
	BYTE rgbGreen;
	BYTE rgbRed;
	BYTE rgbReserved;
};

typedef struct BITMAPINFO {
	BITMAPINFOHEADER bmiHeader;
	RGBQUAD bmiColors[1];
} *LPBITMAPINFO, *PBITMAPINFO;

typedef struct BLENDFUNCTION {
	BYTE BlendOp;
	BYTE BlendFlags;
	BYTE SourceConstantAlpha;
	BYTE AlphaFormat;
} *PBLENDFUNCTION;

typedef struct COLORADJUSTMENT {
	WORD caSize;
	WORD caFlags;
	WORD caIlluminantIndex;
	WORD caRedGamma;
	WORD caGreenGamma;
	WORD caBlueGamma;
	WORD caReferenceBlack;
	WORD caReferenceWhite;
	SHORT caContrast;
	SHORT caBrightness;
	SHORT caColorfulness;
	SHORT caRedGreenTint;
} *PCOLORADJUSTMENT, *LPCOLORADJUSTMENT;

typedef struct DCB {
	DWORD DCBlength;
	DWORD BaudRate;
	DWORD fBinary: 1;
	DWORD fParity: 1;
	DWORD fOutxCtsFlow: 1;
	DWORD fOutxDsrFlow: 1;
	DWORD fDtrControl: 2;
	DWORD fDsrSensitivity: 1;
	DWORD fTXContinueOnXoff: 1;
	DWORD fOutX: 1;
	DWORD fInX: 1;
	DWORD fErrorChar: 1;
	DWORD fNull: 1;
	DWORD fRtsControl: 2;
	DWORD fAbortOnError: 1;
	DWORD fDummy2: 17;
	WORD wReserved;
	WORD XonLim;
	WORD XoffLim;
	BYTE ByteSize;
	BYTE Parity;
	BYTE StopBits;
	char XonChar;
	char XoffChar;
	char ErrorChar;
	char EofChar;
	char EvtChar;
	WORD wReserved1;
} *LPDCB;

typedef struct COMMCONFIG {
	DWORD dwSize;
	WORD wVersion;
	WORD wReserved;
	DCB dcb;
	DWORD dwProviderSubType;
	DWORD dwProviderOffset;
	DWORD dwProviderSize;
	WCHAR wcProviderData[1];
} *LPCOMMCONFIG;

typedef struct COMMPROP {
	WORD wPacketLength;
	WORD wPacketVersion;
	DWORD dwServiceMask;
	DWORD dwReserved1;
	DWORD dwMaxTxQueue;
	DWORD dwMaxRxQueue;
	DWORD dwMaxBaud;
	DWORD dwProvSubType;
	DWORD dwProvCapabilities;
	DWORD dwSettableParams;
	DWORD dwSettableBaud;
	WORD wSettableData;
	WORD wSettableStopParity;
	DWORD dwCurrentTxQueue;
	DWORD dwCurrentRxQueue;
	DWORD dwProvSpec1;
	DWORD dwProvSpec2;
	WCHAR wcProvChar[1];
} *LPCOMMPROP;

typedef struct COMMTIMEOUTS {
	DWORD ReadIntervalTimeout;
	DWORD ReadTotalTimeoutMultiplier;
	DWORD ReadTotalTimeoutConstant;
	DWORD WriteTotalTimeoutMultiplier;
	DWORD WriteTotalTimeoutConstant;
} *LPCOMMTIMEOUTS;

typedef struct COMSTAT {
	DWORD fCtsHold: 1;
	DWORD fDsrHold: 1;
	DWORD fRlsdHold: 1;
	DWORD fXoffHold: 1;
	DWORD fXoffSent: 1;
	DWORD fEof: 1;
	DWORD fTxim: 1;
	DWORD fReserved: 25;
	DWORD cbInQue;
	DWORD cbOutQue;
} *LPCOMSTAT;

typedef struct COORD {
	SHORT X;
	SHORT Y;
} *PCOORD;

typedef struct COPYDATASTRUCT {
	ULONG_PTR dwData;
	DWORD cbData;
	PVOID lpData;
} *LPCOPYDATASTRUCT;

typedef struct SMALL_RECT {
	SHORT Left;
	SHORT Top;
	SHORT Right;
	SHORT Bottom;
} *PSMALL_RECT;

typedef struct CONDITION_VARIABLE {
	PVOID Ptr;
} *PCONDITION_VARIABLE;

typedef struct CONSOLE_CURSOR_INFO {
	DWORD dwSize;
	BOOL bVisible;
} *PCONSOLE_CURSOR_INFO;

typedef struct CONSOLE_FONT_INFO {
	DWORD nFont;
	COORD dwFontSize;
} *PCONSOLE_FONT_INFO;

typedef struct CONSOLE_FONT_INFOEX {
	ULONG cbSize;
	DWORD nFont;
	COORD dwFontSize;
	UINT FontFamily;
	UINT FontWeight;
	WCHAR FaceName[LF_FACESIZE];
} *PCONSOLE_FONT_INFOEX;

typedef struct CONSOLE_HISTORY_INFO {
	UINT cbSize;
	UINT HistoryBufferSize;
	UINT NumberOfHistoryBuffers;
	DWORD dwFlags;
} *PCONSOLE_HISTORY_INFO;

typedef struct CONSOLE_SCREEN_BUFFER_INFO {
	COORD dwSize;
	COORD dwCursorPosition;
	WORD wAttributes;
	SMALL_RECT srWindow;
	COORD dwMaximumWindowSize;
} *PCONSOLE_SCREEN_BUFFER_INFO;

typedef struct CONSOLE_SCREEN_BUFFER_INFOEX {
	ULONG cbSize;
	COORD dwSize;
	COORD dwCursorPosition;
	WORD wAttributes;
	SMALL_RECT srWindow;
	COORD dwMaximumWindowSize;
	WORD wPopupAttributes;
	BOOL bFullscreenSupported;
	COLORREF ColorTable[16];
} *PCONSOLE_SCREEN_BUFFER_INFOEX;

typedef struct CONSOLE_SELECTION_INFO {
	DWORD dwFlags;
	COORD dwSelectionAnchor;
	SMALL_RECT srSelection;
} *PCONSOLE_SELECTION_INFO;

typedef struct CONTEXT {
} *PCONTEXT;

typedef struct LIST_ENTRY {
	struct LIST_ENTRY* Flink;
	struct LIST_ENTRY* Blink;
} *PLIST_ENTRY;

typedef struct CRITICAL_SECTION_DEBUG {
	WORD Type;
	WORD CreatorBackTraceIndex;
	struct CRITICAL_SECTION* CriticalSection;
	LIST_ENTRY ProcessLocksList;
	DWORD EntryCount;
	DWORD ContentionCount;
	DWORD Spare[2];
} *PCRITICAL_SECTION_DEBUG;

typedef struct CRITICAL_SECTION {
	PCRITICAL_SECTION_DEBUG DebugInfo;
	LONG LockCount;
	LONG RecursionCount;
	HANDLE OwningThread;
	HANDLE LockSemaphore;
	ULONG_PTR SpinCount;
} *LPCRITICAL_SECTION;

typedef struct DESIGNVECTOR {
	DWORD dvReserved;
	DWORD dvNumAxes;
	LONG dvValues[MM_MAX_NUMAXES];
} *PDESIGNVECTOR, *LPDESIGNVECTOR;

typedef struct POINTL {
	LONG x;
	LONG y;
} *PPOINTL;

typedef struct DEVMODEA {
	BYTE dmDeviceName[CCHDEVICENAME];
	WORD dmSpecVersion;
	WORD dmDriverVersion;
	WORD dmSize;
	WORD dmDriverExtra;
	DWORD dmFields;
	union {
		struct {
			short dmOrientation;
			short dmPaperSize;
			short dmPaperLength;
			short dmPaperWidth;
			short dmScale;
			short dmCopies;
			short dmDefaultSource;
			short dmPrintQuality;
		} DUMMYSTRUCTNAME;
		POINTL dmPosition;
		struct {
			POINTL dmPosition;
			DWORD dmDisplayOrientation;
			DWORD dmDisplayFixedOutput;
		} DUMMYSTRUCTNAME2;
	} DUMMYUNIONNAME;
	short dmColor;
	short dmDuplex;
	short dmYResolution;
	short dmTTOption;
	short dmCollate;
	BYTE dmFormName[CCHFORMNAME];
	WORD dmLogPixels;
	DWORD dmBitsPerPel;
	DWORD dmPelsWidth;
	DWORD dmPelsHeight;
	union {
		DWORD dmDisplayFlags;
		DWORD dmNup;
	} DUMMYUNIONNAME2;
	DWORD dmDisplayFrequency;
	DWORD dmICMMethod;
	DWORD dmICMIntent;
	DWORD dmMediaType;
	DWORD dmDitherType;
	DWORD dmReserved1;
	DWORD dmReserved2;
	DWORD dmPanningWidth;
	DWORD dmPanningHeight;
} *PDEVMODEA, *NPDEVMODEA, *LPDEVMODEA;

typedef struct DEVMODEW {
	WCHAR dmDeviceName[CCHDEVICENAME];
	WORD dmSpecVersion;
	WORD dmDriverVersion;
	WORD dmSize;
	WORD dmDriverExtra;
	DWORD dmFields;
	union {
		struct {
			short dmOrientation;
			short dmPaperSize;
			short dmPaperLength;
			short dmPaperWidth;
			short dmScale;
			short dmCopies;
			short dmDefaultSource;
			short dmPrintQuality;
		} DUMMYSTRUCTNAME;
		POINTL dmPosition;
		struct {
			POINTL dmPosition;
			DWORD dmDisplayOrientation;
			DWORD dmDisplayFixedOutput;
		} DUMMYSTRUCTNAME2;
	} DUMMYUNIONNAME;
	short dmColor;
	short dmDuplex;
	short dmYResolution;
	short dmTTOption;
	short dmCollate;
	WCHAR dmFormName[CCHFORMNAME];
	WORD dmLogPixels;
	DWORD dmBitsPerPel;
	DWORD dmPelsWidth;
	DWORD dmPelsHeight;
	union {
		DWORD dmDisplayFlags;
		DWORD dmNup;
	} DUMMYUNIONNAME2;
	DWORD dmDisplayFrequency;
	DWORD dmICMMethod;
	DWORD dmICMIntent;
	DWORD dmMediaType;
	DWORD dmDitherType;
	DWORD dmReserved1;
	DWORD dmReserved2;
	DWORD dmPanningWidth;
	DWORD dmPanningHeight;
} *PDEVMODEW, *NPDEVMODEW, *LPDEVMODEW;

typedef struct DISPLAY_DEVICEA {
	DWORD cb;
	CHAR DeviceName[32];
	CHAR DeviceString[128];
	DWORD StateFlags;
	CHAR DeviceID[128];
	CHAR DeviceKey[128];
} *PDISPLAY_DEVICEA, *LPDISPLAY_DEVICEA;

typedef struct DISPLAY_DEVICEW {
	DWORD cb;
	WCHAR DeviceName[32];
	WCHAR DeviceString[128];
	DWORD StateFlags;
	WCHAR DeviceID[128];
	WCHAR DeviceKey[128];
} *PDISPLAY_DEVICEW, *LPDISPLAY_DEVICEW;

typedef struct DRAWTEXTPARAMS {
	UINT cbSize;
	int iTabLength;
	int iLeftMargin;
	int iRightMargin;
	UINT uiLengthDrawn;
} *LPDRAWTEXTPARAMS;

typedef struct SYSTEMTIME {
	WORD wYear;
	WORD wMonth;
	WORD wDayOfWeek;
	WORD wDay;
	WORD wHour;
	WORD wMinute;
	WORD wSecond;
	WORD wMilliseconds;
} *LPSYSTEMTIME;

typedef struct DYNAMIC_TIME_ZONE_INFORMATION {
	LONG Bias;
	WCHAR StandardName[32];
	SYSTEMTIME StandardDate;
	LONG StandardBias;
	WCHAR DaylightName[32];
	SYSTEMTIME DaylightDate;
	LONG DaylightBias;
	WCHAR TimeZoneKeyName[128];
	BOOL DynamicDaylightTimeDisabled;
} *PDYNAMIC_TIME_ZONE_INFORMATION;

typedef struct LOGFONTA {
	LONG lfHeight;
	LONG lfWidth;
	LONG lfEscapement;
	LONG lfOrientation;
	LONG lfWeight;
	BYTE lfItalic;
	BYTE lfUnderline;
	BYTE lfStrikeOut;
	BYTE lfCharSet;
	BYTE lfOutPrecision;
	BYTE lfClipPrecision;
	BYTE lfQuality;
	BYTE lfPitchAndFamily;
	CHAR lfFaceName[LF_FACESIZE];
} *PLOGFONTA, *NPLOGFONTA, *LPLOGFONTA;

typedef struct ENUMLOGFONTEXA {
	LOGFONTA elfLogFont;
	BYTE elfFullName[LF_FULLFACESIZE];
	BYTE elfStyle[LF_FACESIZE];
	BYTE elfScript[LF_FACESIZE];
} *LPENUMLOGFONTEXA;

typedef struct ENUMLOGFONTEXDVA {
	ENUMLOGFONTEXA elfEnumLogfontEx;
	DESIGNVECTOR elfDesignVector;
} *PENUMLOGFONTEXDVA, *LPENUMLOGFONTEXDVA;

typedef struct LOGFONTW {
	LONG lfHeight;
	LONG lfWidth;
	LONG lfEscapement;
	LONG lfOrientation;
	LONG lfWeight;
	BYTE lfItalic;
	BYTE lfUnderline;
	BYTE lfStrikeOut;
	BYTE lfCharSet;
	BYTE lfOutPrecision;
	BYTE lfClipPrecision;
	BYTE lfQuality;
	BYTE lfPitchAndFamily;
	WCHAR lfFaceName[LF_FACESIZE];
} *PLOGFONTW, *NPLOGFONTW, *LPLOGFONTW;

typedef struct ENUMLOGFONTEXW {
	LOGFONTW elfLogFont;
	WCHAR elfFullName[LF_FULLFACESIZE];
	WCHAR elfStyle[LF_FACESIZE];
	WCHAR elfScript[LF_FACESIZE];
} *LPENUMLOGFONTEXW;

typedef struct ENUMLOGFONTEXDVW {
	ENUMLOGFONTEXW elfEnumLogfontEx;
	DESIGNVECTOR elfDesignVector;
} *PENUMLOGFONTEXDVW, *LPENUMLOGFONTEXDVW;

typedef struct EXCEPTION_RECORD {
	DWORD ExceptionCode;
	DWORD ExceptionFlags;
	struct EXCEPTION_RECORD *ExceptionRecord;
	PVOID ExceptionAddress;
	DWORD NumberParameters;
	ULONG_PTR ExceptionInformation[EXCEPTION_MAXIMUM_PARAMETERS];
} *PEXCEPTION_RECORD;

typedef struct EXCEPTION_POINTERS {
	PEXCEPTION_RECORD ExceptionRecord;
	PCONTEXT ContextRecord;
} *PEXCEPTION_POINTERS;

typedef struct FILETIME {
	DWORD dwLowDateTime;
	DWORD dwHighDateTime;
} *PFILETIME, *LPFILETIME;

typedef struct FIXED {
	WORD fract;
	short value;
} *LPFIXED;

typedef struct GCP_RESULTSA {
	DWORD lStructSize;
	LPSTR lpOutString;
	UINT *lpOrder;
	int *lpDx;
	int *lpCaretPos;
	LPSTR lpClass;
	LPWSTR lpGlyphs;
	UINT nGlyphs;
	int nMaxFit;
} *LPGCP_RESULTSA;

typedef struct GCP_RESULTSW {
	DWORD lStructSize;
	LPWSTR lpOutString;
	UINT *lpOrder;
	int *lpDx;
	int *lpCaretPos;
	LPSTR lpClass;
	LPWSTR lpGlyphs;
	UINT nGlyphs;
	int nMaxFit;
} *LPGCP_RESULTSW;

typedef struct POINT {
	LONG x;
	LONG y;
} *LPPOINT;

typedef struct GLYPHMETRICS {
	UINT gmBlackBoxX;
	UINT gmBlackBoxY;
	POINT gmptGlyphOrigin;
	short gmCellIncX;
	short gmCellIncY;
} *LPGLYPHMETRICS;

typedef struct WCRANGE {
	WCHAR wcLow;
	USHORT cGlyphs;
} *PWCRANGE, *LPWCRANGE;

typedef struct GLYPHSET {
	DWORD cbThis;
	DWORD flAccel;
	DWORD cGlyphsSupported;
	DWORD cRanges;
	WCRANGE ranges[1];
} *PGLYPHSET, *LPGLYPHSET;

typedef struct INIT_ONCE {
	PVOID Ptr;
} *LPINIT_ONCE;

typedef struct KERNINGPAIR {
	WORD wFirst;
	WORD wSecond;
	int iKernAmount;
} *LPKERNINGPAIR;

typedef struct LOGBRUSH {
	UINT lbStyle;
	COLORREF lbColor;
	ULONG_PTR lbHatch;
} *PLOGBRUSH, *NPLOGBRUSH, *LPLOGBRUSH;

typedef struct PALETTEENTRY {
	BYTE peRed;
	BYTE peGreen;
	BYTE peBlue;
	BYTE peFlags;
} PPALETTEENTRY, *LPPALETTEENTRY;

typedef struct LOGPALETTE {
	WORD palVersion;
	WORD palNumEntries;
	PALETTEENTRY palPalEntry[1];
} *PLOGPALETTE, *NPLOGPALETTE, *LPLOGPALETTE;

typedef struct LOGPEN {
	UINT lopnStyle;
	POINT lopnWidth;
	COLORREF lopnColor;
} *PLOGPEN, *NPLOGPEN, *LPLOGPEN;

typedef struct MAT2 {
	FIXED eM11;
	FIXED eM12;
	FIXED eM21;
	FIXED eM22;
} *LPMAT2;

typedef struct MDINEXTMENU {
	HMENU hmenuIn;
	HMENU hmenuNext;
	HWND hwndNext;
} *LPMDINEXTMENU;

typedef struct MINMAXINFO {
	POINT ptReserved;
	POINT ptMaxSize;
	POINT ptMaxPosition;
	POINT ptMinTrackSize;
	POINT ptMaxTrackSize;
} *LPMINMAXINFO;

typedef struct MENUITEMINFOA {
	UINT cbSize;
	UINT fMask;
	UINT fType;
	UINT fState;
	UINT wID;
	HMENU hSubMenu;
	HBITMAP hbmpChecked;
	HBITMAP hbmpUnchecked;
	ULONG_PTR dwItemData;
	LPSTR dwTypeData;
	UINT cch;
	HBITMAP hbmpItem;
} *LPMENUITEMINFOA;

typedef struct MENUITEMINFOW {
	UINT cbSize;
	UINT fMask;
	UINT fType;
	UINT fState;
	UINT wID;
	HMENU hSubMenu;
	HBITMAP hbmpChecked;
	HBITMAP hbmpUnchecked;
	ULONG_PTR dwItemData;
	LPWSTR dwTypeData;
	UINT cch;
	HBITMAP hbmpItem;
} *LPMENUITEMINFOW;

typedef struct RECT {
	LONG left;
	LONG top;
	LONG right;
	LONG bottom;
} *LPRECT;

typedef struct MONITORINFO {
	DWORD cbSize;
	RECT rcMonitor;
	RECT rcWork;
	DWORD dwFlags;
} *LPMONITORINFO;

typedef struct MONITORINFOEXA : MONITORINFO {
	CHAR szDevice[CCHDEVICENAME];
} *LPMONITORINFOEXA;

typedef struct MONITORINFOEXW : MONITORINFO {
	WCHAR szDevice[CCHDEVICENAME];
} *LPMONITORINFOEXW;

typedef struct MSG {
	HWND hwnd;
	UINT message;
	WPARAM wParam;
	LPARAM lParam;
	DWORD time;
	POINT pt;
} *LPMSG;

typedef struct TEXTMETRICA {
	LONG tmHeight;
	LONG tmAscent;
	LONG tmDescent;
	LONG tmInternalLeading;
	LONG tmExternalLeading;
	LONG tmAveCharWidth;
	LONG tmMaxCharWidth;
	LONG tmWeight;
	LONG tmOverhang;
	LONG tmDigitizedAspectX;
	LONG tmDigitizedAspectY;
	BYTE tmFirstChar;
	BYTE tmLastChar;
	BYTE tmDefaultChar;
	BYTE tmBreakChar;
	BYTE tmItalic;
	BYTE tmUnderlined;
	BYTE tmStruckOut;
	BYTE tmPitchAndFamily;
	BYTE tmCharSet;
} *PTEXTMETRICA, *NPTEXTMETRICA, *LPTEXTMETRICA;

typedef struct PANOSE {
	BYTE bFamilyType;
	BYTE bSerifStyle;
	BYTE bWeight;
	BYTE bProportion;
	BYTE bContrast;
	BYTE bStrokeVariation;
	BYTE bArmStyle;
	BYTE bLetterform;
	BYTE bMidline;
	BYTE bXHeight;
} *LPPANOSE;

typedef struct OUTLINETEXTMETRICA {
	UINT otmSize;
	TEXTMETRICA otmTextMetrics;
	BYTE otmFiller;
	PANOSE otmPanoseNumber;
	UINT otmfsSelection;
	UINT otmfsType;
	int otmsCharSlopeRise;
	int otmsCharSlopeRun;
	int otmItalicAngle;
	UINT otmEMSquare;
	int otmAscent;
	int otmDescent;
	UINT otmLineGap;
	UINT otmsCapEmHeight;
	UINT otmsXHeight;
	RECT otmrcFontBox;
	int otmMacAscent;
	int otmMacDescent;
	UINT otmMacLineGap;
	UINT otmusMinimumPPEM;
	POINT otmptSubscriptSize;
	POINT otmptSubscriptOffset;
	POINT otmptSuperscriptSize;
	POINT otmptSuperscriptOffset;
	UINT otmsStrikeoutSize;
	int otmsStrikeoutPosition;
	int otmsUnderscoreSize;
	int otmsUnderscorePosition;
	PSTR otmpFamilyName;
	PSTR otmpFaceName;
	PSTR otmpStyleName;
	PSTR otmpFullName;
} *POUTLINETEXTMETRICA, *NPOUTLINETEXTMETRICA, *LPOUTLINETEXTMETRICA;

typedef struct TEXTMETRICW {
	LONG tmHeight;
	LONG tmAscent;
	LONG tmDescent;
	LONG tmInternalLeading;
	LONG tmExternalLeading;
	LONG tmAveCharWidth;
	LONG tmMaxCharWidth;
	LONG tmWeight;
	LONG tmOverhang;
	LONG tmDigitizedAspectX;
	LONG tmDigitizedAspectY;
	WCHAR tmFirstChar;
	WCHAR tmLastChar;
	WCHAR tmDefaultChar;
	WCHAR tmBreakChar;
	BYTE tmItalic;
	BYTE tmUnderlined;
	BYTE tmStruckOut;
	BYTE tmPitchAndFamily;
	BYTE tmCharSet;
} *PTEXTMETRICW, *NPTEXTMETRICW, *LPTEXTMETRICW;

typedef struct OUTLINETEXTMETRICW {
	UINT otmSize;
	TEXTMETRICW otmTextMetrics;
	BYTE otmFiller;
	PANOSE otmPanoseNumber;
	UINT otmfsSelection;
	UINT otmfsType;
	int otmsCharSlopeRise;
	int otmsCharSlopeRun;
	int otmItalicAngle;
	UINT otmEMSquare;
	int otmAscent;
	int otmDescent;
	UINT otmLineGap;
	UINT otmsCapEmHeight;
	UINT otmsXHeight;
	RECT otmrcFontBox;
	int otmMacAscent;
	int otmMacDescent;
	UINT otmMacLineGap;
	UINT otmusMinimumPPEM;
	POINT otmptSubscriptSize;
	POINT otmptSubscriptOffset;
	POINT otmptSuperscriptSize;
	POINT otmptSuperscriptOffset;
	UINT otmsStrikeoutSize;
	int otmsStrikeoutPosition;
	int otmsUnderscoreSize;
	int otmsUnderscorePosition;
	PSTR otmpFamilyName;
	PSTR otmpFaceName;
	PSTR otmpStyleName;
	PSTR otmpFullName;
} *POUTLINETEXTMETRICW, *NPOUTLINETEXTMETRICW, *LPOUTLINETEXTMETRICW;

typedef struct OVERLAPPED {
	ULONG_PTR Internal;
	ULONG_PTR InternalHigh;
	PVOID Pointer;
	HANDLE hEvent;
} *LPOVERLAPPED;

typedef struct PAINTSTRUCT {
	HDC hdc;
	BOOL fErase;
	RECT rcPaint;
	BOOL fRestore;
	BOOL fIncUpdate;
	BYTE rgbReserved[32];
} *LPPAINTSTRUCT;

typedef struct POLYTEXTA {
	int x;
	int y;
	UINT n;
	LPCSTR lpstr;
	UINT uiFlags;
	RECT rcl;
	int *pdx;
} *PPOLYTEXTA, *NPPOLYTEXTA, *LPPOLYTEXTA;

typedef struct POLYTEXTW {
	int x;
	int y;
	UINT n;
	LPCWSTR lpstr;
	UINT uiFlags;
	RECT rcl;
	int *pdx;
} *PPOLYTEXTW, *NPPOLYTEXTW, *LPPOLYTEXTW;

typedef struct PROCESS_HEAP_ENTRY {
	PVOID lpData;
	DWORD cbData;
	BYTE cbOverhead;
	BYTE iRegionIndex;
	WORD wFlags;
	DWORD dwCommittedSize;
	DWORD dwUnCommittedSize;
	LPVOID lpFirstBlock;
	LPVOID lpLastBlock;
} *LPPROCESS_HEAP_ENTRY;

typedef struct PROCESS_INFORMATION {
	HANDLE hProcess;
	HANDLE hThread;
	DWORD dwProcessId;
	DWORD dwThreadId;
} *LPPROCESS_INFORMATION;

typedef struct RASTERIZER_STATUS {
	short nSize;
	short wFlags;
	short nLanguageID;
} *LPRASTERIZER_STATUS;

typedef struct RGNDATAHEADER {
	DWORD dwSize;
	DWORD iType;
	DWORD nCount;
	DWORD nRgnSize;
	RECT rcBound;
} *LPRGNDATAHEADER;

typedef struct RGNDATA {
	RGNDATAHEADER rdh;
	char Buffer[1];
} *LPRGNDATA;

typedef struct SECURITY_ATTRIBUTES {
	DWORD nLength;
	LPVOID lpSecurityDescriptor;
	BOOL bInheritHandle;
} *LPSECURITY_ATTRIBUTES;

typedef struct SIZE {
	LONG cx;
	LONG cy;
} *LPSIZE, *PSIZE;

struct sockaddr {
	USHORT sa_family;
	CHAR sa_data[14];
};

typedef struct STARTUPINFOA {
	DWORD cb;
	LPSTR lpReserved;
	LPSTR lpDesktop;
	LPSTR lpTitle;
	DWORD dwX;
	DWORD dwY;
	DWORD dwXSize;
	DWORD dwYSize;
	DWORD dwXCountChars;
	DWORD dwYCountChars;
	DWORD dwFillAttribute;
	DWORD dwFlags;
	WORD wShowWindow;
	WORD cbReserved2;
	LPBYTE lpReserved2;
	HANDLE hStdInput;
	HANDLE hStdOutput;
	HANDLE hStdError;
} *LPSTARTUPINFOA;

typedef struct STARTUPINFOW {
	DWORD cb;
	LPWSTR lpReserved;
	LPWSTR lpDesktop;
	LPWSTR lpTitle;
	DWORD dwX;
	DWORD dwY;
	DWORD dwXSize;
	DWORD dwYSize;
	DWORD dwXCountChars;
	DWORD dwYCountChars;
	DWORD dwFillAttribute;
	DWORD dwFlags;
	WORD wShowWindow;
	WORD cbReserved2;
	LPBYTE lpReserved2;
	HANDLE hStdInput;
	HANDLE hStdOutput;
	HANDLE hStdError;
} *LPSTARTUPINFOW;

typedef struct SYSTEM_INFO {
	WORD wProcessorArchitecture;
	WORD wReserved;
	DWORD dwPageSize;
	LPVOID lpMinimumApplicationAddress;
	LPVOID lpMaximumApplicationAddress;
	DWORD_PTR dwActiveProcessorMask;
	DWORD dwNumberOfProcessors;
	DWORD dwProcessorType;
	DWORD dwAllocationGranularity;
	WORD wProcessorLevel;
	WORD wProcessorRevision;
} *LPSYSTEM_INFO;

typedef struct TIME_ZONE_INFORMATION {
	LONG Bias;
	WCHAR StandardName[32];
	SYSTEMTIME StandardDate;
	LONG StandardBias;
	WCHAR DaylightName[32];
	SYSTEMTIME DaylightDate;
	LONG DaylightBias;
} *LPTIME_ZONE_INFORMATION;

typedef struct TRIVERTEX {
	LONG x;
	LONG y;
	COLOR16 Red;
	COLOR16 Green;
	COLOR16 Blue;
	COLOR16 Alpha;
} *PTRIVERTEX, *LPTRIVERTEX;

typedef struct WNDCLASSA {
	UINT style;
	WNDPROC lpfnWndProc;
	int cbClsExtra;
	int cbWndExtra;
	HINSTANCE hInstance;
	HICON hIcon;
	HCURSOR hCursor;
	HBRUSH hbrBackground;
	LPCSTR lpszMenuName;
	LPCSTR lpszClassName;
} *LPWNDCLASSA;

typedef struct WNDCLASSW {
	UINT style;
	WNDPROC lpfnWndProc;
	int cbClsExtra;
	int cbWndExtra;
	HINSTANCE hInstance;
	HICON hIcon;
	HCURSOR hCursor;
	HBRUSH hbrBackground;
	LPCWSTR lpszMenuName;
	LPCWSTR lpszClassName;
} *LPWNDCLASSW;

typedef struct WNDCLASSEXA {
	UINT cbSize;
	UINT style;
	WNDPROC lpfnWndProc;
	int cbClsExtra;
	int cbWndExtra;
	HINSTANCE hInstance;
	HICON hIcon;
	HCURSOR hCursor;
	HBRUSH hbrBackground;
	LPCSTR lpszMenuName;
	LPCSTR lpszClassName;
	HICON hIconSm;
} *LPWNDCLASSEXA;

typedef struct WNDCLASSEXW {
	UINT cbSize;
	UINT style;
	WNDPROC lpfnWndProc;
	int cbClsExtra;
	int cbWndExtra;
	HINSTANCE hInstance;
	HICON hIcon;
	HCURSOR hCursor;
	HBRUSH hbrBackground;
	LPCWSTR lpszMenuName;
	LPCWSTR lpszClassName;
	HICON hIconSm;
} *LPWNDCLASSEXW;

typedef struct WSADATA {
	WORD wVersion;
	WORD wHighVersion;
	char reserved[sizeof (USHORT) + sizeof (USHORT) + WSADESCRIPTION_LEN + 1 + WSASYS_STATUS_LEN + 1 + sizeof (char*)];
} *LPWSADATA;

typedef struct XFORM {
	FLOAT eM11;
	FLOAT eM12;
	FLOAT eM21;
	FLOAT eM22;
	FLOAT eDx;
	FLOAT eDy;
} *LPXFORM;

#ifdef UNICODE
	typedef MENUITEMINFOW MENUITEMINFO, *LPMENUITEMINFO;
	typedef STARTUPINFOW STARTUPINFO, *LPSTARTUPINFO;
	typedef WNDCLASSEXW WNDCLASSEX, *LPWNDCLASSEX;
	typedef WNDCLASSW WNDCLASS, *LPWNDCLASS;
#else
	typedef MENUITEMINFOA MENUITEMINFO, *LPMENUITEMINFO;
	typedef STARTUPINFOA STARTUPINFO, *LPSTARTUPINFO;
	typedef WNDCLASSA WNDCLASS, *LPWNDCLASS;
	typedef WNDCLASSEXA WNDCLASSEX, *LPWNDCLASSEX;
#endif

extern "C" auto AbortPath (HDC hdc) noexcept -> BOOL;
extern "C" auto accept (SOCKET s, sockaddr *addr, int *addrlen) noexcept -> SOCKET;
extern "C" auto AddAtomA (LPCSTR lpString) noexcept -> ATOM;
extern "C" auto AddAtomW (LPCWSTR lpString) noexcept -> ATOM;
extern "C" auto AddConsoleAliasA (LPCSTR Source, LPCSTR Target, LPCSTR ExeName) noexcept -> BOOL;
extern "C" auto AddConsoleAliasW (LPCWSTR Source, LPCWSTR Target, LPCWSTR ExeName) noexcept -> BOOL;
extern "C" auto AddFontMemResourceEx (PVOID pFileView, DWORD cjSize, PVOID pvResrved, DWORD *pNumFonts) noexcept -> HANDLE;
extern "C" auto AddFontResourceA (LPCSTR Arg1) noexcept -> int;
extern "C" auto AddFontResourceExA (LPCSTR name, DWORD fl, PVOID res) noexcept -> int;
extern "C" auto AddFontResourceExW (LPCWSTR name, DWORD fl, PVOID res) noexcept -> int;
extern "C" auto AddFontResourceW (LPCWSTR Arg1) noexcept -> int;
extern "C" auto AddVectoredContinueHandler (ULONG FirstHandler, PVECTORED_EXCEPTION_HANDLER VectoredHandler) noexcept -> PVOID;
extern "C" auto AddVectoredExceptionHandler (ULONG FirstHandler, PVECTORED_EXCEPTION_HANDLER VectoredHandler) noexcept -> PVOID;
extern "C" auto AdjustWindowRect (LPRECT lpRect, DWORD dwStyle, BOOL bMenu) noexcept -> BOOL;
extern "C" auto AllocConsole () noexcept -> BOOL;
extern "C" auto AlphaBlend (HDC hdcDest, int xoriginDest, int yoriginDest, int wDest, int hDest, HDC hdcSrc, int xoriginSrc, int yoriginSrc, int wSrc, int hSrc, BLENDFUNCTION ftn) noexcept -> BOOL;
extern "C" auto AngleArc (HDC hdc, int x, int y, DWORD r, FLOAT StartAngle, FLOAT SweepAngle) noexcept -> BOOL;
extern "C" auto AnimatePalette (HPALETTE hPal, UINT iStartIndex, UINT cEntries, const PALETTEENTRY *ppe) noexcept -> BOOL;
extern "C" auto Arc (HDC hdc, int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4) noexcept -> BOOL;
extern "C" auto ArcTo (HDC hdc, int left, int top, int right, int bottom, int xr1, int yr1, int xr2, int yr2) noexcept -> BOOL;
extern "C" auto AttachConsole (DWORD dwProcessId) noexcept -> BOOL;
extern "C" auto Beep (DWORD dwFreq, DWORD dwDuration) noexcept -> BOOL;
extern "C" auto BeginPaint (HWND hwnd, LPPAINTSTRUCT lpPaint) noexcept -> HDC;
extern "C" auto BeginPath (HDC hdc) noexcept -> BOOL;
extern "C" auto bind (SOCKET s, const sockaddr *addr, int namelen) noexcept -> int;
extern "C" auto BitBlt (HDC hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, HDC hdcSrc, int nXSrc, int nYSrc, DWORD dwRop) noexcept -> BOOL;
extern "C" auto BuildCommDCBA (LPCSTR lpDef, LPDCB lpDCB) noexcept -> BOOL;
extern "C" auto BuildCommDCBAndTimeoutsA (LPCSTR lpDef, LPDCB lpDCB, LPCOMMTIMEOUTS lpCommTimeouts) noexcept -> BOOL;
extern "C" auto BuildCommDCBAndTimeoutsW (LPCWSTR lpDef, LPDCB lpDCB, LPCOMMTIMEOUTS lpCommTimeouts) noexcept -> BOOL;
extern "C" auto BuildCommDCBW (LPCWSTR lpDef, LPDCB lpDCB) noexcept -> BOOL;
extern "C" auto CallNamedPipeA (LPCSTR lpNamedPipeName, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesRead, DWORD nTimeOut) noexcept -> BOOL;
extern "C" auto CallNamedPipeW (LPCWSTR lpNamedPipeName, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesRead, DWORD nTimeOut) noexcept -> BOOL;
extern "C" auto CancelDC (HDC hdc) noexcept -> BOOL;
extern "C" auto ChangeDisplaySettingsA (DEVMODEA *lpDevMode, DWORD dwFlags) noexcept -> LONG;
extern "C" auto ChangeDisplaySettingsExA (LPCSTR lpszDeviceName, DEVMODEA *lpDevMode, HWND hwnd, DWORD dwflags, LPVOID lParam) noexcept -> LONG;
extern "C" auto ChangeDisplaySettingsExW (LPCWSTR lpszDeviceName, DEVMODEW *lpDevMode, HWND hwnd, DWORD dwflags, LPVOID lParam) noexcept -> LONG;
extern "C" auto ChangeDisplaySettingsW (DEVMODEW *lpDevMode, DWORD dwFlags) noexcept -> LONG;
extern "C" auto CheckMenuItem (HMENU hmenu, UINT uIDCheckItem, UINT uCheck) noexcept -> DWORD;
extern "C" auto CheckMenuRadioItem (HMENU hmenu, UINT idFirst, UINT idLast, UINT idCheck, UINT uFlags) noexcept -> BOOL;
extern "C" auto Chord (HDC hdc, int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4) noexcept -> BOOL;
extern "C" auto ClearCommBreak (HANDLE hFile) noexcept -> BOOL;
extern "C" auto ClearCommError (HANDLE hFile, LPDWORD lpErrors, LPCOMSTAT lpStat) noexcept -> BOOL;
extern "C" auto ClientToScreen (HWND hWnd, LPPOINT lpPoint) noexcept -> BOOL;
extern "C" auto CloseClipboard () noexcept -> BOOL;
extern "C" auto CloseFigure (HDC hdc) noexcept -> BOOL;
extern "C" auto CloseHandle (HANDLE hObject) noexcept -> BOOL;
extern "C" auto closesocket (SOCKET s) noexcept -> int;
extern "C" auto CombineRgn (HRGN hrgnDest, HRGN hrgnSrc1, HRGN hrgnSrc2, int fnCombineMode) noexcept -> int;
extern "C" auto CombineTransform (LPXFORM lpxfOut, const XFORM *lpxf1, const XFORM *lpxf2) noexcept -> BOOL;
extern "C" auto CommConfigDialogA (LPCSTR lpszName, HWND hWnd, LPCOMMCONFIG lpCC) noexcept -> BOOL;
extern "C" auto CommConfigDialogW (LPCWSTR lpszName, HWND hWnd, LPCOMMCONFIG lpCC) noexcept -> BOOL;
extern "C" auto CompareFileTime (const FILETIME *lpFileTime1, const FILETIME *lpFileTime2) noexcept -> LONG;
extern "C" auto connect (SOCKET s, const sockaddr *name, int namelen) noexcept -> int;
extern "C" auto ConnectNamedPipe (HANDLE hNamedPipe, LPOVERLAPPED lpOverlapped) noexcept -> BOOL;
extern "C" auto ConvertAuxiliaryCounterToPerformanceCounter (ULONGLONG ullAuxiliaryCounterValue, PULONGLONG lpPerformanceCounterValue, PULONGLONG lpConversionError) noexcept -> HRESULT;
extern "C" auto ConvertFiberToThread () noexcept -> BOOL;
extern "C" auto ConvertPerformanceCounterToAuxiliaryCounter (ULONGLONG ullPerformanceCounterValue, PULONGLONG lpAuxiliaryCounterValue, PULONGLONG lpConversionError) noexcept -> HRESULT;
extern "C" auto ConvertThreadToFiber (LPVOID lpParameter) noexcept -> LPVOID;
extern "C" auto ConvertThreadToFiberEx (LPVOID lpParameter, DWORD dwFlags) noexcept -> LPVOID;
extern "C" auto CopyRect (LPRECT lprcDst, const RECT* lprcSrc) noexcept -> BOOL;
extern "C" auto CreateBitmap (int nWidth, int nHeight, UINT cPlanes, UINT cBitsPerPel, const VOID* lpvBits) noexcept -> HBITMAP;
extern "C" auto CreateBitmapIndirect (const BITMAP* lpbm) noexcept -> HBITMAP;
extern "C" auto CreateBrushIndirect (const LOGBRUSH *plbrush) noexcept -> HBRUSH;
extern "C" auto CreateCompatibleBitmap (HDC hdc, int nWidth, int nHeight) noexcept -> HBITMAP;
extern "C" auto CreateCompatibleDC (HDC hdc) noexcept -> HDC;
extern "C" auto CreateConsoleScreenBuffer (DWORD dwDesiredAccess, DWORD dwShareMode, const LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwFlags, LPVOID lpScreenBufferData) noexcept -> HANDLE;
extern "C" auto CreateDCA (LPCSTR pwszDriver, LPCSTR pwszDevice, LPCSTR pszPort, const DEVMODEA *pdm) noexcept -> HDC;
extern "C" auto CreateDCW (LPCWSTR pwszDriver, LPCWSTR pwszDevice, LPCWSTR pszPort, const DEVMODEW *pdm) noexcept -> HDC;
extern "C" auto CreateDIBitmap (HDC hdc, const BITMAPINFOHEADER *pbmih, DWORD flInit, const VOID *pjBits, const BITMAPINFO *pbmi, UINT iUsage) noexcept -> HBITMAP;
extern "C" auto CreateDIBPatternBrushPt (const VOID *lpPackedDIB, UINT iUsage) noexcept -> HBRUSH;
extern "C" auto CreateDIBSection (HDC hdc, const BITMAPINFO *pbmi, UINT usage, VOID **ppvBits, HANDLE hSection, DWORD offset) noexcept -> HBITMAP;
extern "C" auto CreateEllipticRgn (int nLeftRect, int nTopRect, int nRightRect, int nBottomRect) noexcept -> HRGN;
extern "C" auto CreateEllipticRgnIndirect (const RECT *lprc) noexcept -> HRGN;
extern "C" auto CreateEventA (LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCSTR lpName) noexcept -> HANDLE;
extern "C" auto CreateEventW (LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCWSTR lpName) noexcept -> HANDLE;
extern "C" auto CreateFiber (SIZE_T dwStackSize, LPFIBER_START_ROUTINE lpStartAddress, LPVOID lpParameter) noexcept -> LPVOID;
extern "C" auto CreateFiberEx (SIZE_T dwStackCommitSize, SIZE_T dwStackReserveSize, DWORD dwFlags, LPFIBER_START_ROUTINE lpStartAddress, LPVOID lpParameter) noexcept -> LPVOID;
extern "C" auto CreateFileA (LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile) noexcept -> HANDLE;
extern "C" auto CreateFileW (LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile) noexcept -> HANDLE;
extern "C" auto CreateFontA (int cHeight, int cWidth, int cEscapement, int cOrientation, int cWeight, DWORD bItalic, DWORD bUnderline, DWORD bStrikeOut, DWORD iCharSet, DWORD iOutPrecision, DWORD iClipPrecision, DWORD iQuality, DWORD iPitchAndFamily, LPCSTR pszFaceName) noexcept -> HFONT;
extern "C" auto CreateFontIndirectA (const LOGFONTA *lplf) noexcept -> HFONT;
extern "C" auto CreateFontIndirectExA (const ENUMLOGFONTEXDVA *Arg1) noexcept -> HFONT;
extern "C" auto CreateFontIndirectExW (const ENUMLOGFONTEXDVW *Arg1) noexcept -> HFONT;
extern "C" auto CreateFontIndirectW (const LOGFONTW *lplf) noexcept -> HFONT;
extern "C" auto CreateFontW (int cHeight, int cWidth, int cEscapement, int cOrientation, int cWeight, DWORD bItalic, DWORD bUnderline, DWORD bStrikeOut, DWORD iCharSet, DWORD iOutPrecision, DWORD iClipPrecision, DWORD iQuality, DWORD iPitchAndFamily, LPCWSTR pszFaceName) noexcept -> HFONT;
extern "C" auto CreateHalftonePalette (HDC hdc) noexcept -> HPALETTE;
extern "C" auto CreateHatchBrush (int iHatch, COLORREF color) noexcept -> HBRUSH;
extern "C" auto CreateICA (LPCSTR pszDriver, LPCSTR pszDevice, LPCSTR pszPort, const DEVMODEA *pdm) noexcept -> HDC;
extern "C" auto CreateICW (LPCWSTR pszDriver, LPCWSTR pszDevice, LPCWSTR pszPort, const DEVMODEW *pdm) noexcept -> HDC;
extern "C" auto CreateMailslotA (LPCSTR lpName, DWORD nMaxMessageSize, DWORD lReadTimeout, LPSECURITY_ATTRIBUTES lpSecurityAttributes) noexcept -> HANDLE;
extern "C" auto CreateMailslotW (LPCWSTR lpName, DWORD nMaxMessageSize, DWORD lReadTimeout, LPSECURITY_ATTRIBUTES lpSecurityAttributes) noexcept -> HANDLE;
extern "C" auto CreateMutexA (LPSECURITY_ATTRIBUTES lpMutexAttributes, BOOL bInitialOwner, LPCSTR lpName) noexcept -> HANDLE;
extern "C" auto CreateMutexW (LPSECURITY_ATTRIBUTES lpMutexAttributes, BOOL bInitialOwner, LPCWSTR lpName) noexcept -> HANDLE;
extern "C" auto CreateNamedPipeA (LPCSTR lpName, DWORD dwOpenMode, DWORD dwPipeMode, DWORD nMaxInstances, DWORD nOutBufferSize, DWORD nInBufferSize, DWORD nDefaultTimeOut, LPSECURITY_ATTRIBUTES lpSecurityAttributes) noexcept -> HANDLE;
extern "C" auto CreateNamedPipeW (LPCWSTR lpName, DWORD dwOpenMode, DWORD dwPipeMode, DWORD nMaxInstances, DWORD nOutBufferSize, DWORD nInBufferSize, DWORD nDefaultTimeOut, LPSECURITY_ATTRIBUTES lpSecurityAttributes) noexcept -> HANDLE;
extern "C" auto CreatePalette (const LOGPALETTE *plpal) noexcept -> HPALETTE;
extern "C" auto CreatePatternBrush (HBITMAP hbm) noexcept -> HBRUSH;
extern "C" auto CreatePen (int fnPenStyle, int nWidth, COLORREF crColor) noexcept -> HPEN;
extern "C" auto CreatePenIndirect (const LOGPEN *plpen) noexcept -> HPEN;
extern "C" auto CreatePipe (PHANDLE hReadPipe, PHANDLE hWritePipe, LPSECURITY_ATTRIBUTES lpPipeAttributes, DWORD nSize) noexcept -> BOOL;
extern "C" auto CreatePolygonRgn (const POINT *lppt, int cPoints, int fnPolyFillMode) noexcept -> HRGN;
extern "C" auto CreatePolyPolygonRgn (const POINT *lppt, const INT *lpPolyCounts, int nCount, int fnPolyFillMode) noexcept -> HRGN;
extern "C" auto CreateProcessA (LPCSTR lpApplicationName, LPSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCSTR lpCurrentDirectory, LPSTARTUPINFOA lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation) noexcept -> BOOL;
extern "C" auto CreateProcessW (LPCWSTR lpApplicationName, LPWSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation) noexcept -> BOOL;
extern "C" auto CreateRectRgn (int nLeftRect, int nTopRect, int nRightRect, int nBottomRect) noexcept -> HRGN;
extern "C" auto CreateRectRgnIndirect (const RECT *lprc) noexcept -> HRGN;
extern "C" auto CreateRoundRectRgn (int nLeftRect, int nTopRect, int nRightRect, int nBottomRect, int nWidthEllipse, int nHeightEllipse) noexcept -> HRGN;
extern "C" auto CreateSemaphoreA (LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, LONG lInitialCount, LONG lMaximumCount, LPCSTR lpName) noexcept -> HANDLE;
extern "C" auto CreateSemaphoreW (LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, LONG lInitialCount, LONG lMaximumCount, LPCWSTR lpName) noexcept -> HANDLE;
extern "C" auto CreateSolidBrush (COLORREF crColor) noexcept -> HBRUSH;
extern "C" auto CreateThread (LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId) noexcept -> HANDLE;
extern "C" auto CreateWindowExA (DWORD dwExStyle, LPCSTR lpClassName, LPCSTR lpWindowName, DWORD dwStyle, int x, int y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam) noexcept -> HWND;
extern "C" auto CreateWindowExW (DWORD dwExStyle, LPCWSTR lpClassName, LPCWSTR lpWindowName, DWORD dwStyle, int x, int y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam) noexcept -> HWND;
extern "C" auto DefWindowProcA (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam) noexcept -> LRESULT;
extern "C" auto DefWindowProcW (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam) noexcept -> LRESULT;
extern "C" auto DeleteAtom (ATOM nAtom) noexcept -> ATOM;
extern "C" auto DeleteCriticalSection (LPCRITICAL_SECTION lpCriticalSection) noexcept -> void;
extern "C" auto DeleteDC (HDC hdc) noexcept -> BOOL;
extern "C" auto DeleteFiber (LPVOID lpFiber) noexcept -> VOID;
extern "C" auto DeleteFileA (LPCSTR lpFileName) noexcept -> BOOL;
extern "C" auto DeleteFileW (LPCWSTR lpFileName) noexcept -> BOOL;
extern "C" auto DeleteObject (HGDIOBJ hObject) noexcept -> BOOL;
extern "C" auto DeviceCapabilitiesA (LPCSTR pDevice, LPCSTR pPort, WORD fwCapability, LPSTR pOutput, const DEVMODEA *pDevMode) noexcept -> int;
extern "C" auto DeviceCapabilitiesW (LPCWSTR pDevice, LPCWSTR pPort, WORD fwCapability, LPWSTR pOutput, const DEVMODEW *pDevMode) noexcept -> int;
extern "C" auto DisconnectNamedPipe (HANDLE hNamedPipe) noexcept -> BOOL;
extern "C" auto DispatchMessageA (const MSG* lpmsg) noexcept -> LRESULT;
extern "C" auto DispatchMessageW (const MSG* lpmsg) noexcept -> LRESULT;
extern "C" auto DosDateTimeToFileTime (WORD wFatDate, WORD wFatTime, LPFILETIME lpFileTime) noexcept -> BOOL;
extern "C" auto DPtoLP (HDC hdc, LPPOINT lppt, int c) noexcept -> BOOL;
extern "C" auto DrawAnimatedRects (HWND hwnd, int idAni, const RECT *lprcFrom, const RECT *lprcTo) noexcept -> BOOL;
extern "C" auto DrawCaption (HWND hwnd, HDC hdc, const RECT *lprect, UINT flags) noexcept -> BOOL;
extern "C" auto DrawEdge (HDC hdc, LPRECT qrc, UINT edge, UINT grfFlags) noexcept -> BOOL;
extern "C" auto DrawEscape (HDC hdc, int iEscape, int cjIn, LPCSTR lpIn) noexcept -> int;
extern "C" auto DrawFocusRect (HDC hDC, const RECT *lprc) noexcept -> BOOL;
extern "C" auto DrawFrameControl (HDC hdc, LPRECT lpRect, UINT uType, UINT uState) noexcept -> BOOL;
extern "C" auto DrawMenuBar (HWND hWnd) noexcept -> BOOL;
extern "C" auto DrawStateA (HDC hdc, HBRUSH hbrFore, DRAWSTATEPROC qfnCallBack, LPARAM lData, WPARAM wData, int x, int y, int cx, int cy, UINT uFlags) noexcept -> BOOL;
extern "C" auto DrawStateW (HDC hdc, HBRUSH hbrFore, DRAWSTATEPROC qfnCallBack, LPARAM lData, WPARAM wData, int x, int y, int cx, int cy, UINT uFlags) noexcept -> BOOL;
extern "C" auto DrawTextA (HDC hdc, LPCSTR lpchText, int cchText, LPRECT lprc, UINT format) noexcept -> int;
extern "C" auto DrawTextExA (HDC hdc, LPSTR lpchText, int cchText, LPRECT lprc, UINT format, LPDRAWTEXTPARAMS lpdtp) noexcept -> int;
extern "C" auto DrawTextExW (HDC hdc, LPWSTR lpchText, int cchText, LPRECT lprc, UINT format, LPDRAWTEXTPARAMS lpdtp) noexcept -> int;
extern "C" auto DrawTextW (HDC hdc, LPCWSTR lpchText, int cchText, LPRECT lprc, UINT format) noexcept -> int;
extern "C" auto Ellipse (HDC hdc, int left, int top, int right, int bottom) noexcept -> BOOL;
extern "C" auto EmptyClipboard () noexcept -> BOOL;
extern "C" auto EnableMenuItem (HMENU hMenu, UINT uIDEnableItem, UINT uEnable) noexcept -> BOOL;
extern "C" auto EndDialog (HWND hDlg, INT_PTR nResult) noexcept -> BOOL;
extern "C" auto EndPaint (HWND hWnd, const PAINTSTRUCT* lpPaint) noexcept -> BOOL;
extern "C" auto EndPath (HDC hdc) noexcept -> BOOL;
extern "C" auto EnterCriticalSection (LPCRITICAL_SECTION lpCriticalSection) noexcept -> void;
extern "C" auto EnumDisplayDevicesA (LPCSTR lpDevice, DWORD iDevNum, PDISPLAY_DEVICEA lpDisplayDevice, DWORD dwFlags) noexcept -> BOOL;
extern "C" auto EnumDisplayDevicesW (LPCWSTR lpDevice, DWORD iDevNum, PDISPLAY_DEVICEW lpDisplayDevice, DWORD dwFlags) noexcept -> BOOL;
extern "C" auto EnumDisplayMonitors (HDC hdc, LPCRECT lprcClip, MONITORENUMPROC lpfnEnum, LPARAM dwData) noexcept -> BOOL;
extern "C" auto EnumDisplaySettingsA (LPCSTR lpszDeviceName, DWORD iModeNum, DEVMODEA *lpDevMode) noexcept -> BOOL;
extern "C" auto EnumDisplaySettingsExA (LPCSTR lpszDeviceName, DWORD iModeNum, DEVMODEA *lpDevMode, DWORD dwFlags) noexcept -> BOOL;
extern "C" auto EnumDisplaySettingsExW (LPCWSTR lpszDeviceName, DWORD iModeNum, DEVMODEW *lpDevMode, DWORD dwFlags) noexcept -> BOOL;
extern "C" auto EnumDisplaySettingsW (LPCWSTR lpszDeviceName, DWORD iModeNum, DEVMODEW *lpDevMode) noexcept -> BOOL;
extern "C" auto EnumDynamicTimeZoneInformation (const DWORD dwIndex, PDYNAMIC_TIME_ZONE_INFORMATION lpTimeZoneInformation) noexcept -> DWORD;
extern "C" auto EnumFontFamiliesExA (HDC hdc, LPLOGFONTA lpLogfont, FONTENUMPROCA lpProc, LPARAM lParam, DWORD dwFlags) noexcept -> int;
extern "C" auto EnumFontFamiliesExW (HDC hdc, LPLOGFONTW lpLogfont, FONTENUMPROCW lpProc, LPARAM lParam, DWORD dwFlags) noexcept -> int;
extern "C" auto EnumObjects (HDC hdc, int nType, GOBJENUMPROC lpFunc, LPARAM lParam) noexcept -> int;
extern "C" auto EqualRect (const RECT* lprc1, const RECT* lprc2) noexcept -> BOOL;
extern "C" auto EqualRgn (HRGN hSrcRgn1, HRGN hSrcRgn2) noexcept -> BOOL;
extern "C" auto EscapeCommFunction (HANDLE hFile, DWORD dwFunc) noexcept -> BOOL;
extern "C" auto ExcludeClipRect (HDC hdc, int left, int top, int right, int bottom) noexcept -> int;
extern "C" auto ExcludeUpdateRgn (HDC hDC, HWND hWnd) noexcept -> int;
extern "C" auto ExitProcess [[noreturn]] (UINT uExitCode) noexcept -> VOID;
extern "C" auto ExitThread [[noreturn]] (DWORD dwExitCode) noexcept -> VOID;
extern "C" auto ExtCreatePen (DWORD iPenStyle, DWORD cWidth, const LOGBRUSH *plbrush, DWORD cStyle, const DWORD *pstyle) noexcept -> HPEN;
extern "C" auto ExtCreateRegion (const XFORM *lpXform, DWORD nCount, const RGNDATA *lpRgnData) noexcept -> HRGN;
extern "C" auto ExtFloodFill (HDC hdc, int x, int y, COLORREF color, UINT type) noexcept -> BOOL;
extern "C" auto ExtSelectClipRgn (HDC hdc, HRGN hrgn, int mode) noexcept -> int;
extern "C" auto ExtTextOutA (HDC hdc, int x, int y, UINT options, const RECT *lprect, LPCSTR lpString, UINT c, const INT *lpDx) noexcept -> BOOL;
extern "C" auto ExtTextOutW (HDC hdc, int x, int y, UINT options, const RECT *lprect, LPCWSTR lpString, UINT c, const INT *lpDx) noexcept -> BOOL;
extern "C" auto FatalAppExitA (UINT uAction, LPCSTR lpMessageText) noexcept -> void;
extern "C" auto FatalAppExitW (UINT uAction, LPCWSTR lpMessageText) noexcept -> void;
extern "C" auto FileTimeToDosDateTime (const FILETIME *lpFileTime, LPWORD lpFatDate, LPWORD lpFatTime) noexcept -> BOOL;
extern "C" auto FileTimeToLocalFileTime (const FILETIME *lpFileTime, LPFILETIME lpLocalFileTime) noexcept -> BOOL;
extern "C" auto FileTimeToSystemTime (const FILETIME* lpFileTime, LPSYSTEMTIME lpSystemTime) noexcept -> BOOL;
extern "C" auto FillConsoleOutputAttribute (HANDLE hConsoleOutput, WORD wAttribute, DWORD nLength, COORD dwWriteCoord, LPDWORD lpNumberOfAttrsWritten) noexcept -> BOOL;
extern "C" auto FillConsoleOutputCharacterA (HANDLE hConsoleOutput, CHAR cCharacter, DWORD nLength, COORD dwWriteCoord, LPDWORD lpNumberOfAttrsWritten) noexcept -> BOOL;
extern "C" auto FillConsoleOutputCharacterW (HANDLE hConsoleOutput, WCHAR cCharacter, DWORD nLength, COORD dwWriteCoord, LPDWORD lpNumberOfAttrsWritten) noexcept -> BOOL;
extern "C" auto FillPath (HDC hdc) noexcept -> BOOL;
extern "C" auto FillRect (HDC hDC, const RECT* lprc, HBRUSH hbr) noexcept -> int;
extern "C" auto FillRgn (HDC hdc, HRGN hrgn, HBRUSH hbr) noexcept -> BOOL;
extern "C" auto FindAtomA (LPCSTR lpString) noexcept -> ATOM;
extern "C" auto FindAtomW (LPCWSTR lpString) noexcept -> ATOM;
extern "C" auto FlattenPath (HDC hdc) noexcept -> BOOL;
extern "C" auto FlushConsoleInputBuffer (HANDLE hConsoleInput) noexcept -> BOOL;
extern "C" auto FrameRect (HDC hDC, const RECT *lprc, HBRUSH hbr) noexcept -> int;
extern "C" auto FrameRgn (HDC hdc, HRGN hrgn, HBRUSH hbr, int nWidth, int nHeight) noexcept -> BOOL;
extern "C" auto freeaddrinfo (PADDRINFOA pAddrInfo) noexcept -> VOID;
extern "C" auto FreeConsole () noexcept -> BOOL;
extern "C" auto FreeLibrary (HMODULE hModule) noexcept -> BOOL;
extern "C" auto GdiFlush () noexcept -> BOOL;
extern "C" auto GdiGetBatchLimit () noexcept -> DWORD;
extern "C" auto GdiSetBatchLimit (DWORD dw) noexcept -> DWORD;
extern "C" auto GenerateConsoleCtrlEvent (DWORD dwCtrlEvent, DWORD dwProcessGroupId) noexcept -> BOOL;
extern "C" auto getaddrinfo (PCSTR pNodeName, PCSTR pServiceName, const ADDRINFOA *pHints, PADDRINFOA *ppResult) noexcept -> INT;
extern "C" auto GetArcDirection (HDC hdc) noexcept -> int;
extern "C" auto GetAspectRatioFilterEx (HDC hdc, LPSIZE lpsize) noexcept -> BOOL;
extern "C" auto GetAtomNameA (ATOM nAtom, LPSTR lbBuffer, int nSize) noexcept -> UINT;
extern "C" auto GetAtomNameW (ATOM nAtom, LPWSTR lbBuffer, int nSize) noexcept -> UINT;
extern "C" auto GetBitmapDimensionEx (HBITMAP hbit, LPSIZE lpsize) noexcept -> BOOL;
extern "C" auto GetBkColor (HDC hdc) noexcept -> COLORREF;
extern "C" auto GetBkMode (HDC hdc) noexcept -> int;
extern "C" auto GetBoundsRect (HDC hdc, LPRECT lprect, UINT flags) noexcept -> UINT;
extern "C" auto GetBrushOrgEx (HDC hdc, LPPOINT lppt) noexcept -> BOOL;
extern "C" auto GetCharABCWidthsA (HDC hdc, UINT wFirst, UINT wLast, LPABC lpABC) noexcept -> BOOL;
extern "C" auto GetCharABCWidthsFloatA (HDC hdc, UINT iFirst, UINT iLast, LPABCFLOAT lpABC) noexcept -> BOOL;
extern "C" auto GetCharABCWidthsFloatW (HDC hdc, UINT iFirst, UINT iLast, LPABCFLOAT lpABC) noexcept -> BOOL;
extern "C" auto GetCharABCWidthsI (HDC hdc, UINT giFirst, UINT cgi, LPWORD pgi, LPABC pabc) noexcept -> BOOL;
extern "C" auto GetCharABCWidthsW (HDC hdc, UINT wFirst, UINT wLast, LPABC lpABC) noexcept -> BOOL;
extern "C" auto GetCharacterPlacementA (HDC hdc, LPCSTR lpString, int nCount, int nMexExtent, LPGCP_RESULTSA lpResults, DWORD dwFlags) noexcept -> DWORD;
extern "C" auto GetCharacterPlacementW (HDC hdc, LPCWSTR lpString, int nCount, int nMexExtent, LPGCP_RESULTSW lpResults, DWORD dwFlags) noexcept -> DWORD;
extern "C" auto GetCharWidth32A (HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer) noexcept -> BOOL;
extern "C" auto GetCharWidth32W (HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer) noexcept -> BOOL;
extern "C" auto GetCharWidthFloatA (HDC hdc, UINT iFirst, UINT iLast, PFLOAT lpBuffer) noexcept -> BOOL;
extern "C" auto GetCharWidthFloatW (HDC hdc, UINT iFirst, UINT iLast, PFLOAT lpBuffer) noexcept -> BOOL;
extern "C" auto GetCharWidthI (HDC hdc, UINT giFirst, UINT cgi, LPWORD pgi, LPINT piWidths) noexcept -> BOOL;
extern "C" auto GetClassInfoA (HINSTANCE hInstance, LPCSTR lpClassName, LPWNDCLASSA lpWndClass) noexcept -> BOOL;
extern "C" auto GetClassInfoExA (HINSTANCE hinst, LPCSTR lpszClass, LPWNDCLASSEXA lpwcx) noexcept -> BOOL;
extern "C" auto GetClassInfoExW (HINSTANCE hinst, LPCWSTR lpszClass, LPWNDCLASSEXW lpwcx) noexcept -> BOOL;
extern "C" auto GetClassInfoW (HINSTANCE hInstance, LPCWSTR lpClassName, LPWNDCLASSW lpWndClass) noexcept -> BOOL;
extern "C" auto GetClassLongA (HWND hWnd, int nIndex) noexcept -> DWORD;
extern "C" auto GetClassLongPtrA (HWND hWnd, int nIndex) noexcept -> ULONG_PTR;
extern "C" auto GetClassLongPtrW (HWND hWnd, int nIndex) noexcept -> ULONG_PTR;
extern "C" auto GetClassLongW (HWND hWnd, int nIndex) noexcept -> DWORD;
extern "C" auto GetClassNameA (HWND hWnd, LPSTR lpClassName, int nMaxCount) noexcept -> int;
extern "C" auto GetClassNameW (HWND hWnd, LPWSTR lpClassName, int nMaxCount) noexcept -> int;
extern "C" auto GetClassWord (HWND hWnd, int nIndex) noexcept -> WORD;
extern "C" auto GetClipboardData (UINT uFormat) noexcept -> HANDLE;
extern "C" auto GetClipBox (HDC hdc, LPRECT lprect) noexcept -> int;
extern "C" auto GetClipRgn (HDC hdc, HRGN hrgn) noexcept -> int;
extern "C" auto GetColorAdjustment (HDC hdc, LPCOLORADJUSTMENT lpca) noexcept -> BOOL;
extern "C" auto GetCommandLineA () noexcept -> LPSTR;
extern "C" auto GetCommandLineW () noexcept -> LPWSTR;
extern "C" auto GetCommConfig (HANDLE hCommDev, LPCOMMCONFIG lpCC, LPDWORD lpdwSize) noexcept -> BOOL;
extern "C" auto GetCommMask (HANDLE hFile, LPDWORD lpEvtMask) noexcept -> BOOL;
extern "C" auto GetCommModemStatus (HANDLE hFile, LPDWORD lpModemStat) noexcept -> BOOL;
extern "C" auto GetCommProperties (HANDLE hFile, LPCOMMPROP lpCommProp) noexcept -> BOOL;
extern "C" auto GetCommState (HANDLE hFile, LPDCB lpDCB) noexcept -> BOOL;
extern "C" auto GetCommTimeouts (HANDLE hFile, LPCOMMTIMEOUTS lpCommTimeouts) noexcept -> BOOL;
extern "C" auto GetConsoleAliasA (LPSTR lpSource, LPSTR lpTargetBuffer, DWORD TargetBufferLength, LPSTR lpExeName) noexcept -> DWORD;
extern "C" auto GetConsoleAliasesA (LPSTR lpAliasBuffer, DWORD AliasBufferLength, LPSTR lpExeName) noexcept -> DWORD;
extern "C" auto GetConsoleAliasesLengthA (LPSTR lpExeName) noexcept -> DWORD;
extern "C" auto GetConsoleAliasesLengthW (LPWSTR lpExeName) noexcept -> DWORD;
extern "C" auto GetConsoleAliasesW (LPWSTR lpAliasBuffer, DWORD AliasBufferLength, LPWSTR lpExeName) noexcept -> DWORD;
extern "C" auto GetConsoleAliasExesA (LPSTR lpExeNameBuffer, DWORD ExeNameBufferLength) noexcept -> DWORD;
extern "C" auto GetConsoleAliasExesLength () noexcept -> DWORD;
extern "C" auto GetConsoleAliasExesW (LPWSTR lpExeNameBuffer, DWORD ExeNameBufferLength) noexcept -> DWORD;
extern "C" auto GetConsoleAliasW (LPWSTR lpSource, LPWSTR lpTargetBuffer, DWORD TargetBufferLength, LPWSTR lpExeName) noexcept -> DWORD;
extern "C" auto GetConsoleCP () noexcept -> UINT;
extern "C" auto GetConsoleCursorInfo (HANDLE hConsoleOutput, PCONSOLE_CURSOR_INFO lpConsoleCursorInfo) noexcept -> BOOL;
extern "C" auto GetConsoleDisplayMode (LPDWORD lpModeFlags) noexcept -> BOOL;
extern "C" auto GetConsoleFontSize (HANDLE hConsoleOutput, DWORD nFont) noexcept -> COORD;
extern "C" auto GetConsoleHistoryInfo (PCONSOLE_HISTORY_INFO lpConsoleHistoryInfo) noexcept -> BOOL;
extern "C" auto GetConsoleMode (HANDLE hConsoleHandle, LPDWORD lpMode) noexcept -> BOOL;
extern "C" auto GetConsoleOriginalTitleA (LPSTR lpConsoleTitle, DWORD nSize) noexcept -> DWORD;
extern "C" auto GetConsoleOriginalTitleW (LPWSTR lpConsoleTitle, DWORD nSize) noexcept -> DWORD;
extern "C" auto GetConsoleOutputCP () noexcept -> UINT;
extern "C" auto GetConsoleProcessList (LPDWORD lpdwProcessList, DWORD dwProcessCount) noexcept -> DWORD;
extern "C" auto GetConsoleScreenBufferInfo (HANDLE hConsoleOutput, PCONSOLE_SCREEN_BUFFER_INFO lpConsoleScreenBufferInfo) noexcept -> BOOL;
extern "C" auto GetConsoleScreenBufferInfoEx (HANDLE hConsoleOutput, PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx) noexcept -> BOOL;
extern "C" auto GetConsoleSelectionInfo (PCONSOLE_SELECTION_INFO lpConsoleSelectionInfo) noexcept -> BOOL;
extern "C" auto GetConsoleTitleA (LPSTR lpConsoleTitle, DWORD nSize) noexcept -> DWORD;
extern "C" auto GetConsoleTitleW (LPWSTR lpConsoleTitle, DWORD nSize) noexcept -> DWORD;
extern "C" auto GetConsoleWindow () noexcept -> HWND;
extern "C" auto GetCurrentConsoleFont (HANDLE hConsoleOutput, BOOL bMaximumWindow, PCONSOLE_FONT_INFO lpConsoleCurrentFont) noexcept -> BOOL;
extern "C" auto GetCurrentConsoleFontEx (HANDLE hConsoleOutput, BOOL bMaximumWindow, PCONSOLE_FONT_INFOEX lpConsoleCurrentFontEx) noexcept -> BOOL;
extern "C" auto GetCurrentDirectoryA (DWORD nBufferLength, LPSTR lpBuffer) noexcept -> DWORD;
extern "C" auto GetCurrentDirectoryW (DWORD nBufferLength, LPWSTR lpBuffer) noexcept -> DWORD;
extern "C" auto GetCurrentObject (HDC hdc, UINT type) noexcept -> HGDIOBJ;
extern "C" auto GetCurrentPositionEx (HDC hdc, LPPOINT lppt) noexcept -> BOOL;
extern "C" auto GetCurrentProcess () noexcept -> HANDLE;
extern "C" auto GetCurrentProcessId () noexcept -> DWORD;
extern "C" auto GetCurrentProcessorNumber () noexcept -> DWORD;
extern "C" auto GetCurrentThread () noexcept -> HANDLE;
extern "C" auto GetCurrentThreadId () noexcept -> DWORD;
extern "C" auto GetDC (HWND hWnd) noexcept -> HDC;
extern "C" auto GetDCBrushColor (HDC hdc) noexcept -> COLORREF;
extern "C" auto GetDCEx (HWND hWnd, HRGN hrgnClip, DWORD flags) noexcept -> HDC;
extern "C" auto GetDCOrgEx (HDC hdc, LPPOINT lppt) noexcept -> BOOL;
extern "C" auto GetDCPenColor (HDC hdc) noexcept -> COLORREF;
extern "C" auto GetDefaultCommConfigA (LPCSTR lpszName, LPCOMMCONFIG lpCC, LPDWORD lpdwSize) noexcept -> BOOL;
extern "C" auto GetDefaultCommConfigW (LPCWSTR lpszName, LPCOMMCONFIG lpCC, LPDWORD lpdwSize) noexcept -> BOOL;
extern "C" auto GetDeviceCaps (HDC hdc, int index) noexcept -> int;
extern "C" auto GetDIBColorTable (HDC hdc, UINT iStart, UINT cEntries, RGBQUAD *prgbq) noexcept -> UINT;
extern "C" auto GetDIBits (HDC hdc, HBITMAP hbm, UINT start, UINT cLines, LPVOID lpvBits, LPBITMAPINFO lpbmi, UINT usage) noexcept -> int;
extern "C" auto GetDisplayAutoRotationPreferences (ORIENTATION_PREFERENCE *pOrientation) noexcept -> BOOL;
extern "C" auto GetDlgItem (HWND hDlg, int nIDDlgItem) noexcept -> HWND;
extern "C" auto GetDynamicTimeZoneInformation (PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation) noexcept -> DWORD;
extern "C" auto GetDynamicTimeZoneInformationEffectiveYears (const PDYNAMIC_TIME_ZONE_INFORMATION lpTimeZoneInformation, LPDWORD FirstYear, LPDWORD LastYear) noexcept -> DWORD;
extern "C" auto GetEnvironmentVariableA (LPCSTR lpName, LPSTR lpBuffer, DWORD nSize) noexcept -> DWORD;
extern "C" auto GetEnvironmentVariableW (LPCWSTR lpName, LPWSTR lpBuffer, DWORD nSize) noexcept -> DWORD;
extern "C" auto GetExitCodeProcess (HANDLE hProcess, LPDWORD lpExitCode) noexcept -> BOOL;
extern "C" auto GetExitCodeThread (HANDLE hThread, LPDWORD lpExitCode) noexcept -> BOOL;
extern "C" auto GetFileAttributes (LPCTSTR lpFileName) noexcept -> DWORD;
extern "C" auto GetFileSize (HANDLE hFile, LPDWORD lpFileSizeHigh) noexcept -> DWORD;
extern "C" auto GetFileTime (HANDLE hFile, LPFILETIME lpCreationTime, LPFILETIME lpLastAccessTime, LPFILETIME lpLastWriteTime) noexcept -> BOOL;
extern "C" auto GetFontData (HDC hdc, DWORD dwTable, DWORD dwOffset, PVOID pvBuffer, DWORD cjBuffer) noexcept -> DWORD;
extern "C" auto GetFontLanguageInfo (HDC hdc) noexcept -> DWORD;
extern "C" auto GetFontUnicodeRanges (HDC hdc, LPGLYPHSET lpgs) noexcept -> DWORD;
extern "C" auto GetForegroundWindow () noexcept -> HWND;
extern "C" auto GetGlyphIndicesA (HDC hdc, LPCSTR lpstr, int c, LPWORD pgi, DWORD fl) noexcept -> DWORD;
extern "C" auto GetGlyphIndicesW (HDC hdc, LPCWSTR lpstr, int c, LPWORD pgi, DWORD fl) noexcept -> DWORD;
extern "C" auto GetGlyphOutlineA (HDC hdc, UINT uChar, UINT fuFormat, LPGLYPHMETRICS lpgm, DWORD cjBuffer, LPVOID pvBuffer, const MAT2 *lpmat2) noexcept -> DWORD;
extern "C" auto GetGlyphOutlineW (HDC hdc, UINT uChar, UINT fuFormat, LPGLYPHMETRICS lpgm, DWORD cjBuffer, LPVOID pvBuffer, const MAT2 *lpmat2) noexcept -> DWORD;
extern "C" auto GetGraphicsMode (HDC hdc) noexcept -> int;
extern "C" auto GetKerningPairsA (HDC hdc, DWORD nPairs, LPKERNINGPAIR lpKernPair) noexcept -> DWORD;
extern "C" auto GetKerningPairsW (HDC hdc, DWORD nPairs, LPKERNINGPAIR lpKernPair) noexcept -> DWORD;
extern "C" auto GetLargestConsoleWindowSize (HANDLE hConsoleOutput) noexcept -> COORD;
extern "C" auto GetLastError () noexcept -> DWORD;
extern "C" auto GetLayout (HDC hdc) noexcept -> DWORD;
extern "C" auto GetLocalTime (LPSYSTEMTIME lpSystemTime) noexcept -> void;
extern "C" auto GetMailslotInfo (HANDLE hMailslot, LPDWORD lpMaxMessageSize, LPDWORD lpNextSize, LPDWORD lpMessageCount, LPDWORD lpReadTimeout) noexcept -> BOOL;
extern "C" auto GetMapMode (HDC hdc) noexcept -> int;
extern "C" auto GetMenu (HWND hWnd) noexcept -> HMENU;
extern "C" auto GetMenuItemInfoA (HMENU hMenu, UINT uItem, BOOL fByPosition, LPMENUITEMINFOA lpmii) noexcept -> BOOL;
extern "C" auto GetMenuItemInfoW (HMENU hMenu, UINT uItem, BOOL fByPosition, LPMENUITEMINFOW lpmii) noexcept -> BOOL;
extern "C" auto GetMessageA (LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax) noexcept -> BOOL;
extern "C" auto GetMessageW (LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax) noexcept -> BOOL;
extern "C" auto GetMetaRgn (HDC hdc, HRGN hrgn) noexcept -> int;
extern "C" auto GetMiterLimit (HDC hdc, PFLOAT plimit) noexcept -> BOOL;
extern "C" auto GetModuleFileNameA (HMODULE hModule, LPSTR lpFilename, DWORD nSize) noexcept -> DWORD;
extern "C" auto GetModuleFileNameW (HMODULE hModule, LPWSTR lpFilename, DWORD nSize) noexcept -> DWORD;
extern "C" auto GetModuleHandleA (LPCSTR lpModuleName) noexcept -> HMODULE;
extern "C" auto GetModuleHandleW (LPCWSTR lpModuleName) noexcept -> HMODULE;
extern "C" auto GetMonitorInfoA (HMONITOR hMonitor, LPMONITORINFO lpmi) noexcept -> BOOL;
extern "C" auto GetMonitorInfoW (HMONITOR hMonitor, LPMONITORINFO lpmi) noexcept -> BOOL;
extern "C" auto GetNamedPipeClientComputerNameA (HANDLE Pipe, LPSTR ClientComputerName, ULONG ClientComputerNameLength) noexcept -> BOOL;
extern "C" auto GetNamedPipeClientComputerNameW (HANDLE Pipe, LPWSTR ClientComputerName, ULONG ClientComputerNameLength) noexcept -> BOOL;
extern "C" auto GetNamedPipeClientProcessId (HANDLE Pipe, PULONG ClientProcessId) noexcept -> BOOL;
extern "C" auto GetNamedPipeClientSessionId (HANDLE Pipe, PULONG ClientSessionId) noexcept -> BOOL;
extern "C" auto GetNamedPipeHandleStateA (HANDLE hNamedPipe, LPDWORD lpState, LPDWORD lpCurInstances, LPDWORD lpMaxCollectionCount, LPDWORD lpCollectDataTimeout, LPSTR lpUserName, DWORD nMaxUserNameSize) noexcept -> BOOL;
extern "C" auto GetNamedPipeHandleStateW (HANDLE hNamedPipe, LPDWORD lpState, LPDWORD lpCurInstances, LPDWORD lpMaxCollectionCount, LPDWORD lpCollectDataTimeout, LPWSTR lpUserName, DWORD nMaxUserNameSize) noexcept -> BOOL;
extern "C" auto GetNamedPipeInfo (HANDLE hNamedPipe, LPDWORD lpFlags, LPDWORD lpOutBufferSize, LPDWORD lpInBufferSize, LPDWORD lpMaxInstances) noexcept -> BOOL;
extern "C" auto GetNamedPipeServerProcessId (HANDLE Pipe, PULONG ServerProcessId) noexcept -> BOOL;
extern "C" auto GetNamedPipeServerSessionId (HANDLE Pipe, PULONG ServerSessionId) noexcept -> BOOL;
extern "C" auto GetNativeSystemInfo (LPSYSTEM_INFO lpSystemInfo) noexcept -> void;
extern "C" auto GetNearestColor (HDC hdc, COLORREF color) noexcept -> COLORREF;
extern "C" auto GetNearestPaletteIndex (HPALETTE h, COLORREF color) noexcept -> UINT;
extern "C" auto GetNumberOfConsoleInputEvents (HANDLE hConsoleInput, LPDWORD lpcNumberOfEvents) noexcept -> BOOL;
extern "C" auto GetNumberOfConsoleMouseButtons (LPDWORD lpNumberOfMouseButtons) noexcept -> BOOL;
extern "C" auto GetObjectA (HANDLE h, int c, LPVOID pv) noexcept -> int;
extern "C" auto GetObjectType (HGDIOBJ h) noexcept -> DWORD;
extern "C" auto GetObjectW (HANDLE h, int c, LPVOID pv) noexcept -> int;
extern "C" auto GetOutlineTextMetricsA (HDC hdc, UINT cjCopy, LPOUTLINETEXTMETRICA potm) noexcept -> UINT;
extern "C" auto GetOutlineTextMetricsW (HDC hdc, UINT cjCopy, LPOUTLINETEXTMETRICW potm) noexcept -> UINT;
extern "C" auto GetPaletteEntries (HPALETTE hpal, UINT iStart, UINT cEntries, LPPALETTEENTRY pPalEntries) noexcept -> UINT;
extern "C" auto GetPath (HDC hdc, LPPOINT apt, LPBYTE aj, int cpt) noexcept -> int;
extern "C" auto GetPixel (HDC hdc, int x, int y) noexcept -> COLORREF;
extern "C" auto GetPolyFillMode (HDC hdc) noexcept -> int;
extern "C" auto GetPriorityClass (HANDLE hProcess) noexcept -> DWORD;
extern "C" auto GetProcAddress (HMODULE hModule, LPCSTR lpProcName) noexcept -> FARPROC;
extern "C" auto GetProcessAffinityMask (HANDLE hProcess, PDWORD_PTR lpProcessAffinityMask, PDWORD_PTR lpSystemAffinityMask) noexcept -> BOOL;
extern "C" auto GetProcessHeap () noexcept -> HANDLE;
extern "C" auto GetProcessId (HANDLE Process) noexcept -> DWORD;
extern "C" auto GetRandomRgn (HDC hdc, HRGN hrgn, INT i) noexcept -> int;
extern "C" auto GetRasterizerCaps (LPRASTERIZER_STATUS lpraststat, UINT cjBytes) noexcept -> BOOL;
extern "C" auto GetRegionData (HRGN hRgn, DWORD dwCount, LPRGNDATA lpRgnData) noexcept -> DWORD;
extern "C" auto GetRgnBox (HRGN hrgn, LPRECT lprc) noexcept -> int;
extern "C" auto GetROP2 (HDC hdc) noexcept -> int;
extern "C" auto GetStdHandle (DWORD nStdHandle) noexcept -> HANDLE;
extern "C" auto GetStockObject (int i) noexcept -> HGDIOBJ;
extern "C" auto GetStretchBltMode (HDC hdc) noexcept -> int;
extern "C" auto GetSysColorBrush (int nIndex) noexcept -> HBRUSH;
extern "C" auto GetSystemInfo (LPSYSTEM_INFO lpSystemInfo) noexcept -> void;
extern "C" auto GetSystemPaletteEntries (HDC hdc, UINT iStart, UINT cEntries, LPPALETTEENTRY pPalEntries) noexcept -> UINT;
extern "C" auto GetSystemPaletteUse (HDC hdc) noexcept -> UINT;
extern "C" auto GetSystemRegistryQuota (PDWORD pdwQuotaAllowed, PDWORD pdwQuotaUsed) noexcept -> BOOL;
extern "C" auto GetSystemTime (LPSYSTEMTIME lpSystemTime) noexcept -> void;
extern "C" auto GetSystemTimeAdjustment (PDWORD lpTimeAdjustment, PDWORD lpTimeIncrement, PBOOL lpTimeAdjustmentDisabled) noexcept -> BOOL;
extern "C" auto GetSystemTimeAsFileTime (LPFILETIME lpSystemTimeAsFileTime) noexcept -> void;
extern "C" auto GetSystemTimes (PFILETIME lpIdleTime, PFILETIME lpKernelTime, PFILETIME lpUserTime) noexcept -> BOOL;
extern "C" auto GetTabbedTextExtentA (HDC hdc, LPCSTR lpString, int chCount, int nTabPositions, const INT *lpnTabStopPositions) noexcept -> DWORD;
extern "C" auto GetTabbedTextExtentW (HDC hdc, LPCWSTR lpString, int chCount, int nTabPositions, const INT *lpnTabStopPositions) noexcept -> DWORD;
extern "C" auto GetTextAlign (HDC hdc) noexcept -> UINT;
extern "C" auto GetTextCharacterExtra (HDC hdc) noexcept -> int;
extern "C" auto GetTextColor (HDC hdc) noexcept -> COLORREF;
extern "C" auto GetTextExtentExPointA (HDC hdc, LPCSTR lpszString, int cchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize) noexcept -> BOOL;
extern "C" auto GetTextExtentExPointI (HDC hdc, LPWORD lpwszString, int cwchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize) noexcept -> BOOL;
extern "C" auto GetTextExtentExPointW (HDC hdc, LPCWSTR lpszString, int cchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize) noexcept -> BOOL;
extern "C" auto GetTextExtentPoint32A (HDC hdc, LPCSTR lpString, int c, LPSIZE psizl) noexcept -> BOOL;
extern "C" auto GetTextExtentPoint32W (HDC hdc, LPCWSTR lpString, int c, LPSIZE psizl) noexcept -> BOOL;
extern "C" auto GetTextExtentPointI (HDC hdc, LPWORD pgiIn, int cgi, LPSIZE psize) noexcept -> BOOL;
extern "C" auto GetTextFaceA (HDC hdc, int c, LPSTR lpName) noexcept -> int;
extern "C" auto GetTextFaceW (HDC hdc, int c, LPWSTR lpName) noexcept -> int;
extern "C" auto GetTextMetricsA (HDC hdc, LPTEXTMETRICA lptm) noexcept -> BOOL;
extern "C" auto GetTextMetricsW (HDC hdc, LPTEXTMETRICW lptm) noexcept -> BOOL;
extern "C" auto GetThreadId (HANDLE Thread) noexcept -> DWORD;
extern "C" auto GetTickCount () noexcept -> DWORD;
extern "C" auto GetTickCount64 () noexcept -> ULONGLONG;
extern "C" auto GetTimeFormatA (LCID Locale, DWORD dwFlags, const SYSTEMTIME *lpTime, LPCSTR lpFormat, LPSTR lpTimeStr, int cchTime) noexcept -> int;
extern "C" auto GetTimeFormatW (LCID Locale, DWORD dwFlags, const SYSTEMTIME *lpTime, LPCSTR lpFormat, LPSTR lpTimeStr, int cchTime) noexcept -> int;
extern "C" auto GetTimeZoneInformation (LPTIME_ZONE_INFORMATION lpTimeZoneInformation) noexcept -> DWORD;
extern "C" auto GetTimeZoneInformationForYear (USHORT wYear, PDYNAMIC_TIME_ZONE_INFORMATION pdtzi, LPTIME_ZONE_INFORMATION ptzi) noexcept -> BOOL;
extern "C" auto GetUpdateRect (HWND hWnd, LPRECT lpRect, BOOL bErase) noexcept -> BOOL;
extern "C" auto GetUpdateRgn (HWND hWnd, HRGN hRgn, BOOL bErase) noexcept -> int;
extern "C" auto GetViewportExtEx (HDC hdc, LPSIZE lpsize) noexcept -> BOOL;
extern "C" auto GetViewportOrgEx (HDC hdc, LPPOINT lppoint) noexcept -> BOOL;
extern "C" auto GetWindow (HWND hWnd, UINT uCmd) noexcept -> HWND;
extern "C" auto GetWindowDC (HWND hWnd) noexcept -> HDC;
extern "C" auto GetWindowExtEx (HDC hdc, LPSIZE lpsize) noexcept -> BOOL;
extern "C" auto GetWindowLongA (HWND hWnd, int nIndex) noexcept -> LONG;
extern "C" auto GetWindowLongPtrA (HWND hWnd, int nIndex) noexcept -> LONG_PTR;
extern "C" auto GetWindowLongPtrW (HWND hWnd, int nIndex) noexcept -> LONG_PTR;
extern "C" auto GetWindowLongW (HWND hWnd, int nIndex) noexcept -> LONG;
extern "C" auto GetWindowOrgEx (HDC hdc, LPPOINT lppoint) noexcept -> BOOL;
extern "C" auto GetWindowRect (HWND hWnd, LPRECT lpRect) noexcept -> BOOL;
extern "C" auto GetWindowRgn (HWND hWnd, HRGN hRgn) noexcept -> int;
extern "C" auto GetWindowRgnBox (HWND hWnd, LPRECT lprc) noexcept -> int;
extern "C" auto GetWorldTransform (HDC hdc, LPXFORM lpxf) noexcept -> BOOL;
extern "C" auto GlobalAddAtomA (LPCSTR lpString) noexcept -> ATOM;
extern "C" auto GlobalAddAtomW (LPCWSTR lpString) noexcept -> ATOM;
extern "C" auto GlobalAlloc (UINT uFlags, SIZE_T dwBytes) noexcept -> HGLOBAL;
extern "C" auto GlobalDeleteAtom (ATOM nAtom) noexcept -> ATOM;
extern "C" auto GlobalFindAtomA (LPCSTR lpString) noexcept -> ATOM;
extern "C" auto GlobalFindAtomW (LPCWSTR lpString) noexcept -> ATOM;
extern "C" auto GlobalFree (HGLOBAL hMem) noexcept -> HGLOBAL;
extern "C" auto GlobalGetAtomNameA (ATOM nAtom, LPSTR lbBuffer, int nSize) noexcept -> UINT;
extern "C" auto GlobalGetAtomNameW (ATOM nAtom, LPWSTR lbBuffer, int nSize) noexcept -> UINT;
extern "C" auto GlobalHandle (LPCVOID pMem) noexcept -> HGLOBAL;
extern "C" auto GlobalLock (HGLOBAL hMem) noexcept -> LPVOID;
extern "C" auto GlobalReAlloc (HGLOBAL hMem, SIZE_T dwBytes, UINT uFlags) noexcept -> HGLOBAL;
extern "C" auto GlobalSize (HGLOBAL hMem) noexcept -> SIZE_T;
extern "C" auto GlobalUnlock (HGLOBAL hMem) noexcept -> BOOL;
extern "C" auto GradientFill (HDC hdc, PTRIVERTEX pVertex, ULONG nVertex, PVOID pMesh, ULONG nMesh, ULONG ulMode) noexcept -> BOOL;
extern "C" auto GrayStringA (HDC hDC, HBRUSH hBrush, GRAYSTRINGPROC lpOutputFunc, LPARAM lpData, int nCount, int X, int Y, int nWidth, int nHeight) noexcept -> BOOL;
extern "C" auto GrayStringW (HDC hDC, HBRUSH hBrush, GRAYSTRINGPROC lpOutputFunc, LPARAM lpData, int nCount, int X, int Y, int nWidth, int nHeight) noexcept -> BOOL;
extern "C" auto HeapAlloc (HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes) noexcept -> LPVOID;
extern "C" auto HeapCompact (HANDLE hHeap, DWORD dwFlags) noexcept -> SIZE_T;
extern "C" auto HeapCreate (DWORD flOptions, SIZE_T dwInitialSize, SIZE_T dwMaximumSize) noexcept -> HANDLE;
extern "C" auto HeapDestroy (HANDLE hHeap) noexcept -> BOOL;
extern "C" auto HeapFree (HANDLE hHeap, DWORD dwFlags, LPVOID lpMem) noexcept -> BOOL;
extern "C" auto HeapLock (HANDLE hHeap) noexcept -> BOOL;
extern "C" auto HeapReAlloc (HANDLE hHeap, DWORD dwFlags, LPVOID lpMem, SIZE_T dwBytes) noexcept -> LPVOID;
extern "C" auto HeapSize (HANDLE hHeap, DWORD dwFlags, LPCVOID lpMem) noexcept -> SIZE_T;
extern "C" auto HeapUnlock (HANDLE hHeap) noexcept -> BOOL;
extern "C" auto HeapValidate (HANDLE hHeap, DWORD dwFlags, LPCVOID lpMem) noexcept -> BOOL;
extern "C" auto HeapWalk (HANDLE hHeap, LPPROCESS_HEAP_ENTRY lpEntry) noexcept -> BOOL;
extern "C" auto ImpersonateNamedPipeClient (HANDLE hNamedPipe) noexcept -> BOOL;
extern "C" auto InflateRect (LPRECT lprc, int dx, int dy) noexcept -> BOOL;
extern "C" auto InitAtomTable (DWORD nSize) noexcept -> BOOL;
extern "C" auto InitializeConditionVariable (PCONDITION_VARIABLE ConditionVariable) noexcept -> VOID;
extern "C" auto InitializeCriticalSection (LPCRITICAL_SECTION lpCriticalSection) noexcept -> void;
extern "C" auto InitializeCriticalSectionAndSpinCount (LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount) noexcept -> BOOL;
extern "C" auto InitializeCriticalSectionEx (LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount, DWORD Flags) noexcept -> BOOL;
extern "C" auto InitOnceBeginInitialize (LPINIT_ONCE lpInitOnce, DWORD dwFlags, PBOOL fPending, LPVOID *lpContext) noexcept -> BOOL;
extern "C" auto InitOnceComplete (LPINIT_ONCE lpInitOnce, DWORD dwFlags, LPVOID lpContext) noexcept -> BOOL;
extern "C" auto InitOnceInitialize (LPINIT_ONCE InitOnce) noexcept -> VOID;
extern "C" auto InsertMenuItemA (HMENU hMenu, UINT uItem, BOOL fByPosition, LPMENUITEMINFOA lpmii) noexcept -> BOOL;
extern "C" auto InsertMenuItemW (HMENU hMenu, UINT uItem, BOOL fByPosition, LPMENUITEMINFOW lpmii) noexcept -> BOOL;
extern "C" auto IntersectClipRect (HDC hdc, int nLeftRect, int nTopRect, int nRightRect, int nBottomRect) noexcept -> int;
extern "C" auto IntersectRect (LPRECT lprcDst, const RECT* lprcSrc1, const RECT* lprcSrc2) noexcept -> BOOL;
extern "C" auto InvalidateRect (HWND hWnd, const RECT* lpRect, BOOL bErase) noexcept -> BOOL;
extern "C" auto InvalidateRgn (HWND hWnd, HRGN hRgn, BOOL bErase) noexcept -> BOOL;
extern "C" auto InvertRect (HDC hDC, const RECT *lprc) noexcept -> BOOL;
extern "C" auto InvertRgn (HDC hdc, HRGN hrgn) noexcept -> BOOL;
extern "C" auto IsRectEmpty (const RECT* lprc) noexcept -> BOOL;
extern "C" auto IsThreadAFiber () noexcept -> BOOL;
extern "C" auto KillTimer (HWND hWnd, UINT_PTR uIDEvent) noexcept -> BOOL;
extern "C" auto LeaveCriticalSection (LPCRITICAL_SECTION lpCriticalSection) noexcept -> void;
extern "C" auto LineDDA (int xStart, int yStart, int xEnd, int yEnd, LINEDDAPROC lpProc, LPARAM data) noexcept -> BOOL;
extern "C" auto LineTo (HDC hdc, int x, int y) noexcept -> BOOL;
extern "C" auto listen (SOCKET s, int backlog) noexcept -> int;
extern "C" auto LoadBitmapA (HINSTANCE hInstance, LPCSTR lpBitmapName) noexcept -> HBITMAP;
extern "C" auto LoadBitmapW (HINSTANCE hInstance, LPCWSTR lpBitmapName) noexcept -> HBITMAP;
extern "C" auto LoadCursorA (HINSTANCE hInstance, LPCSTR lpCursorName) noexcept -> HCURSOR;
extern "C" auto LoadCursorW (HINSTANCE hInstance, LPCWSTR lpCursorName) noexcept -> HCURSOR;
extern "C" auto LoadIconA (HINSTANCE hInstance, LPCSTR lpIconName) noexcept -> HICON;
extern "C" auto LoadIconW (HINSTANCE hInstance, LPCWSTR lpIconName) noexcept -> HICON;
extern "C" auto LoadLibraryA (LPCSTR lpFileName) noexcept -> HMODULE;
extern "C" auto LoadLibraryW (LPCWSTR lpFileName) noexcept -> HMODULE;
extern "C" auto LocalFileTimeToFileTime (const FILETIME *lpLocalFileTime, LPFILETIME lpFileTime) noexcept -> BOOL;
extern "C" auto LockWindowUpdate (HWND hWndLock) noexcept -> BOOL;
extern "C" auto LPtoDP (HDC hdc, LPPOINT lppt, int c) noexcept -> BOOL;
extern "C" auto MapWindowPoints (HWND hWndFrom, HWND hWndTo, LPPOINT lpPoints, UINT cPoints) noexcept -> int;
extern "C" auto MaskBlt (HDC hdcDest, int xDest, int yDest, int width, int height, HDC hdcSrc, int xSrc, int ySrc, HBITMAP hbmMask, int xMask, int yMask, DWORD rop) noexcept -> BOOL;
extern "C" auto MessageBeep (UINT uType) noexcept -> BOOL;
extern "C" auto MessageBoxA (HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType) noexcept -> int;
extern "C" auto MessageBoxExA (HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType, WORD wLanguageId) noexcept -> int;
extern "C" auto MessageBoxExW (HWND hWnd, LPCWSTR lpText, LPCWSTR lpCaption, UINT uType, WORD wLanguageId) noexcept -> int;
extern "C" auto MessageBoxW (HWND hWnd, LPCWSTR lpText, LPCWSTR lpCaption, UINT uType) noexcept -> int;
extern "C" auto ModifyWorldTransform (HDC hdc, const XFORM *lpxf, DWORD mode) noexcept -> BOOL;
extern "C" auto MonitorFromPoint (POINT pt, DWORD dwFlags) noexcept -> HMONITOR;
extern "C" auto MonitorFromRect (LPCRECT lprc, DWORD dwFlags) noexcept -> HMONITOR;
extern "C" auto MonitorFromWindow (HWND hwnd, DWORD dwFlags) noexcept -> HMONITOR;
extern "C" auto mouse_event (DWORD dwFlags, DWORD dx, DWORD dy, DWORD dwData, ULONG_PTR dwExtraInfo) noexcept -> VOID;
extern "C" auto MoveFileA (LPCSTR lpExistingFileName, LPCSTR lpNewFileName) noexcept -> BOOL;
extern "C" auto MoveFileW (LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName) noexcept -> BOOL;
extern "C" auto MoveToEx (HDC hdc, int x, int y, LPPOINT lppt) noexcept -> BOOL;
extern "C" auto OffsetClipRgn (HDC hdc, int x, int y) noexcept -> int;
extern "C" auto OffsetRect (LPRECT lprc, int dx, int dy) noexcept -> BOOL;
extern "C" auto OffsetRgn (HRGN hrgn, int nXOffset, int nYOffset) noexcept -> int;
extern "C" auto OffsetViewportOrgEx (HDC hdc, int x, int y, LPPOINT lppt) noexcept -> BOOL;
extern "C" auto OffsetWindowOrgEx (HDC hdc, int x, int y, LPPOINT lppt) noexcept -> BOOL;
extern "C" auto OpenClipboard (HWND hWndNewOwner) noexcept -> BOOL;
extern "C" auto OpenEventA (DWORD dwDesiredAccess, BOOL bInheritHandle, LPCSTR lpName) noexcept -> HANDLE;
extern "C" auto OpenEventW (DWORD dwDesiredAccess, BOOL bInheritHandle, LPCWSTR lpName) noexcept -> HANDLE;
extern "C" auto PaintDesktop (HDC hdc) noexcept -> BOOL;
extern "C" auto PaintRgn (HDC hdc, HRGN hrgn) noexcept -> BOOL;
extern "C" auto PatBlt (HDC hdc, int x, int y, int w, int h, DWORD rop) noexcept -> BOOL;
extern "C" auto PathToRegion (HDC hdc) noexcept -> HRGN;
extern "C" auto PeekNamedPipe (HANDLE hNamedPipe, LPVOID lpBuffer, DWORD nBufferSize, LPDWORD lpBytesRead, LPDWORD lpTotalBytesAvail, LPDWORD lpBytesLeftThisMessage) noexcept -> BOOL;
extern "C" auto Pie (HDC hdc, int left, int top, int right, int bottom, int xr1, int yr1, int xr2, int yr2) noexcept -> BOOL;
extern "C" auto PlgBlt (HDC hdcDest, const POINT *lpPoint, HDC hdcSrc, int xSrc, int ySrc, int width, int height, HBITMAP hbmMask, int xMask, int yMask) noexcept -> BOOL;
extern "C" auto PolyBezier (HDC hdc, const POINT *apt, DWORD cpt) noexcept -> BOOL;
extern "C" auto PolyBezierTo (HDC hdc, const POINT* lppt, DWORD cCount) noexcept -> BOOL;
extern "C" auto PolyDraw (HDC hdc, const POINT *apt, const BYTE *aj, int cpt) noexcept -> BOOL;
extern "C" auto Polygon (HDC hdc, const POINT *apt, int cpt) noexcept -> BOOL;
extern "C" auto Polyline (HDC hdc, const POINT* lppt, int cPoints) noexcept -> BOOL;
extern "C" auto PolylineTo (HDC hdc, const POINT *apt, DWORD cpt) noexcept -> BOOL;
extern "C" auto PolyPolygon (HDC hdc, const POINT *apt, const INT *asz, int csz) noexcept -> BOOL;
extern "C" auto PolyPolyline (HDC hdc, const POINT *apt, const DWORD *asz, DWORD csz) noexcept -> BOOL;
extern "C" auto PolyTextOutA (HDC hdc, const POLYTEXTA *ppt, int nstrings) noexcept -> BOOL;
extern "C" auto PolyTextOutW (HDC hdc, const POLYTEXTW *ppt, int nstrings) noexcept -> BOOL;
extern "C" auto PostQuitMessage (int nExitCode) noexcept -> VOID;
extern "C" auto PtInRect (const RECT* lprc, POINT pt) noexcept -> BOOL;
extern "C" auto PtInRegion (HRGN hrgn, int X, int Y) noexcept -> BOOL;
extern "C" auto PtVisible (HDC hdc, int x, int y) noexcept -> BOOL;
extern "C" auto PulseEvent (HANDLE hEvent) noexcept -> BOOL;
extern "C" auto PurgeComm (HANDLE hFile, DWORD dwFlags) noexcept -> BOOL;
extern "C" auto QueryAuxiliaryCounterFrequency (PULONGLONG lpAuxiliaryCounterFrequency) noexcept -> HRESULT;
extern "C" auto QueryInterruptTime (PULONGLONG lpInterruptTime) noexcept -> void;
extern "C" auto QueryInterruptTimePrecise (PULONGLONG lpInterruptTimePrecise) noexcept -> void;
extern "C" auto QueryPerformanceCounter (LARGE_INTEGER *lpPerformanceCount) noexcept -> BOOL;
extern "C" auto QueryPerformanceFrequency (LARGE_INTEGER *lpFrequency) noexcept -> BOOL;
extern "C" auto QueryUnbiasedInterruptTime (PULONGLONG UnbiasedTime) noexcept -> BOOL;
extern "C" auto QueryUnbiasedInterruptTimePrecise (PULONGLONG lpUnbiasedInterruptTimePrecise) noexcept -> void;
extern "C" auto ReadFile (HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped) noexcept -> BOOL;
extern "C" auto RealizePalette (HDC hdc) noexcept -> UINT;
extern "C" auto Rectangle (HDC hdc, int left, int top, int right, int bottom) noexcept -> BOOL;
extern "C" auto RectInRegion (HRGN hrgn, const RECT *lprc) noexcept -> BOOL;
extern "C" auto RectVisible (HDC hdc, const RECT* lprc) noexcept -> BOOL;
extern "C" auto recv (SOCKET s, char *buf, int len, int flags) noexcept -> int;
extern "C" auto RedrawWindow (HWND hWnd, const RECT *lprcUpdate, HRGN hrgnUpdate, UINT flags) noexcept -> BOOL;
extern "C" auto RegCloseKey (HKEY hKey) noexcept -> LONG;
extern "C" auto RegCreateKeyExA (HKEY hKey, LPCSTR lpSubKey, DWORD Reserved, LPSTR lpClass, DWORD dwOptions, REGSAM samDesired, LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition) noexcept -> LONG;
extern "C" auto RegCreateKeyExW (HKEY hKey, LPCWSTR lpSubKey, DWORD Reserved, LPWSTR lpClass, DWORD dwOptions, REGSAM samDesired, LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition) noexcept -> LONG;
extern "C" auto RegisterClassA (const WNDCLASSA* lpWndClass) noexcept -> ATOM;
extern "C" auto RegisterClassExA (const WNDCLASSEXA* lpwcx) noexcept -> ATOM;
extern "C" auto RegisterClassExW (const WNDCLASSEXW* lpwcx) noexcept -> ATOM;
extern "C" auto RegisterClassW (const WNDCLASSW* lpWndClass) noexcept -> ATOM;
extern "C" auto RegOpenKeyExA (HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult) noexcept -> LONG;
extern "C" auto RegOpenKeyExW (HKEY hKey, LPCWSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult) noexcept -> LONG;
extern "C" auto RegQueryValueExA (HKEY hKey, LPCSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData) noexcept -> LONG;
extern "C" auto RegQueryValueExW (HKEY hKey, LPCWSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData) noexcept -> LONG;
extern "C" auto RegSetValueExA (HKEY hKey, LPCSTR lpValueName, DWORD Reserved, DWORD dwType, const BYTE* lpData, DWORD cbData) noexcept -> LONG;
extern "C" auto RegSetValueExW (HKEY hKey, LPCWSTR lpValueName, DWORD Reserved, DWORD dwType, const BYTE* lpData, DWORD cbData) noexcept -> LONG;
extern "C" auto ReleaseCapture () noexcept -> BOOL;
extern "C" auto ReleaseDC (HWND hWnd, HDC hDC) noexcept -> int;
extern "C" auto ReleaseMutex (HANDLE hMutex) noexcept -> BOOL;
extern "C" auto ReleaseSemaphore (HANDLE hSemaphore, LONG lReleaseCount, LPLONG lpPreviousCount) noexcept -> BOOL;
extern "C" auto RemoveFontMemResourceEx (HANDLE h) noexcept -> BOOL;
extern "C" auto RemoveFontResourceA (LPCSTR lpFileName) noexcept -> BOOL;
extern "C" auto RemoveFontResourceExA (LPCSTR name, DWORD fl, PVOID pdv) noexcept -> BOOL;
extern "C" auto RemoveFontResourceExW (LPCWSTR name, DWORD fl, PVOID pdv) noexcept -> BOOL;
extern "C" auto RemoveFontResourceW (LPCWSTR lpFileName) noexcept -> BOOL;
extern "C" auto RemoveVectoredContinueHandler (PVOID Handler) noexcept -> ULONG;
extern "C" auto RemoveVectoredExceptionHandler (PVOID Handler) noexcept -> ULONG;
extern "C" auto ResetDCA (HDC hdc, const DEVMODEA *lpdm) noexcept -> HDC;
extern "C" auto ResetDCW (HDC hdc, const DEVMODEW *lpdm) noexcept -> HDC;
extern "C" auto ResetEvent (HANDLE hEvent) noexcept -> BOOL;
extern "C" auto ResizePalette (HPALETTE hpal, UINT n) noexcept -> BOOL;
extern "C" auto RestoreDC (HDC hdc, int nSavedDC) noexcept -> BOOL;
extern "C" auto ResumeThread (HANDLE hThread) noexcept -> DWORD;
extern "C" auto RoundRect (HDC hdc, int left, int top, int right, int bottom, int width, int height) noexcept -> BOOL;
extern "C" auto SaveDC (HDC hdc) noexcept -> int;
extern "C" auto ScaleViewportExtEx (HDC hdc, int xn, int dx, int yn, int yd, LPSIZE lpsz) noexcept -> BOOL;
extern "C" auto ScaleWindowExtEx (HDC hdc, int xn, int xd, int yn, int yd, LPSIZE lpsz) noexcept -> BOOL;
extern "C" auto ScreenToClient (HWND hWnd, LPPOINT lpPoint) noexcept -> BOOL;
extern "C" auto SelectClipPath (HDC hdc, int mode) noexcept -> BOOL;
extern "C" auto SelectClipRgn (HDC hdc, HRGN hrgn) noexcept -> int;
extern "C" auto SelectObject (HDC hdc, HGDIOBJ hgdiobj) noexcept -> HGDIOBJ;
extern "C" auto SelectPalette (HDC hdc, HPALETTE hPal, BOOL bForceBkgd) noexcept -> HPALETTE;
extern "C" auto send (SOCKET s, const char *buf, int len, int flags) noexcept -> int;
extern "C" auto SendMessageA (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam) noexcept -> LRESULT;
extern "C" auto SendMessageW (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam) noexcept -> LRESULT;
extern "C" auto SetArcDirection (HDC hdc, int dir) noexcept -> int;
extern "C" auto SetBitmapDimensionEx (HBITMAP hbm, int w, int h, LPSIZE lpsz) noexcept -> BOOL;
extern "C" auto SetBkColor (HDC hdc, COLORREF color) noexcept -> COLORREF;
extern "C" auto SetBkMode (HDC hdc, int mode) noexcept -> int;
extern "C" auto SetBoundsRect (HDC hdc, const RECT *lprect, UINT flags) noexcept -> UINT;
extern "C" auto SetBrushOrgEx (HDC hdc, int x, int y, LPPOINT lppt) noexcept -> BOOL;
extern "C" auto SetCapture (HWND hWnd) noexcept -> HWND;
extern "C" auto SetClassLongA (HWND hWnd, int nIndex, LONG dwNewLong) noexcept -> DWORD;
extern "C" auto SetClassLongPtrA (HWND hWnd, int nIndex, LONG_PTR dwNewLong) noexcept -> ULONG_PTR;
extern "C" auto SetClassLongPtrW (HWND hWnd, int nIndex, LONG_PTR dwNewLong) noexcept -> ULONG_PTR;
extern "C" auto SetClassLongW (HWND hWnd, int nIndex, LONG dwNewLong) noexcept -> DWORD;
extern "C" auto SetClassWord (HWND hWnd, int nIndex, WORD wNewWord) noexcept -> WORD;
extern "C" auto SetClipboardData (UINT uFormat, HANDLE hMem) noexcept -> HANDLE;
extern "C" auto SetCoalescableTimer (HWND hWnd, UINT_PTR nIDEvent, UINT uElapse, TIMERPROC lpTimerFunc, ULONG uToleranceDelay) noexcept -> UINT_PTR;
extern "C" auto SetColorAdjustment (HDC hdc, const COLORADJUSTMENT *lpca) noexcept -> BOOL;
extern "C" auto SetCommBreak (HANDLE hFile) noexcept -> BOOL;
extern "C" auto SetCommConfig (HANDLE hCommDev, LPCOMMCONFIG lpCC, DWORD dwSize) noexcept -> BOOL;
extern "C" auto SetCommMask (HANDLE hFile, DWORD dwEvtMask) noexcept -> BOOL;
extern "C" auto SetCommState (HANDLE hFile, LPDCB lpDCB) noexcept -> BOOL;
extern "C" auto SetCommTimeouts (HANDLE hFile, LPCOMMTIMEOUTS lpCommTimeouts) noexcept -> BOOL;
extern "C" auto SetConsoleCP (UINT wCodePageID) noexcept -> BOOL;
extern "C" auto SetConsoleMode (HANDLE hConsoleHandle, DWORD dwMode) noexcept -> BOOL;
extern "C" auto SetConsoleTextAttribute (HANDLE hConsoleOutput, WORD wAttributes) noexcept -> BOOL;
extern "C" auto SetCriticalSectionSpinCount (LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount) noexcept -> DWORD;
extern "C" auto SetDCBrushColor (HDC hdc, COLORREF color) noexcept -> COLORREF;
extern "C" auto SetDCPenColor (HDC hdc, COLORREF color) noexcept -> COLORREF;
extern "C" auto SetDefaultCommConfigA (LPCSTR lpszName, LPCOMMCONFIG lpCC, DWORD dwSize) noexcept -> BOOL;
extern "C" auto SetDefaultCommConfigW (LPCWSTR lpszName, LPCOMMCONFIG lpCC, DWORD dwSize) noexcept -> BOOL;
extern "C" auto SetDIBColorTable (HDC hdc, UINT iStart, UINT cEntries, const RGBQUAD *prgbq) noexcept -> UINT;
extern "C" auto SetDIBits (HDC hdc, HBITMAP hbm, UINT start, UINT cLines, const VOID *lpBits, const BITMAPINFO *lpbmi, UINT ColorUse) noexcept -> int;
extern "C" auto SetDIBitsToDevice (HDC hdc, int xDest, int yDest, DWORD w, DWORD h, int xSrc, int ySrc, UINT StartScan, UINT cLines, const VOID *lpvBits, const BITMAPINFO *lpbmi, UINT ColorUse) noexcept -> int;
extern "C" auto SetDisplayAutoRotationPreferences (ORIENTATION_PREFERENCE orientation) noexcept -> BOOL;
extern "C" auto SetDynamicTimeZoneInformation (const DYNAMIC_TIME_ZONE_INFORMATION *lpTimeZoneInformation) noexcept -> BOOL;
extern "C" auto SetEnvironmentVariableA (LPCSTR lpName, LPCSTR lpValue) noexcept -> BOOL;
extern "C" auto SetEnvironmentVariableW (LPCWSTR lpName, LPCWSTR lpValue) noexcept -> BOOL;
extern "C" auto SetEvent (HANDLE hEvent) noexcept -> BOOL;
extern "C" auto SetFileAttributes (LPCTSTR lpFileName, DWORD dwFileAttributes) noexcept -> BOOL;
extern "C" auto SetFilePointer (HANDLE hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod) noexcept -> DWORD;
extern "C" auto SetFileTime (HANDLE hFile, const FILETIME *lpCreationTime, const FILETIME *lpLastAccessTime, const FILETIME *lpLastWriteTime) noexcept -> BOOL;
extern "C" auto SetGraphicsMode (HDC hdc, int iMode) noexcept -> int;
extern "C" auto SetLayout (HDC hdc, DWORD l) noexcept -> DWORD;
extern "C" auto SetLocalTime (const SYSTEMTIME *lpSystemTime) noexcept -> BOOL;
extern "C" auto SetMailslotInfo (HANDLE hMailslot, DWORD lReadTimeout) noexcept -> BOOL;
extern "C" auto SetMapMode (HDC hdc, int iMode) noexcept -> int;
extern "C" auto SetMapperFlags (HDC hdc, DWORD flags) noexcept -> DWORD;
extern "C" auto SetMenuItemInfoA (HMENU hMenu, UINT uItem, BOOL fByPosition, LPMENUITEMINFOA lpmii) noexcept -> BOOL;
extern "C" auto SetMenuItemInfoW (HMENU hMenu, UINT uItem, BOOL fByPosition, LPMENUITEMINFOW lpmii) noexcept -> BOOL;
extern "C" auto SetMetaRgn (HDC hdc) noexcept -> int;
extern "C" auto SetMiterLimit (HDC hdc, FLOAT limit, PFLOAT old) noexcept -> BOOL;
extern "C" auto SetNamedPipeHandleState (HANDLE hNamedPipe, LPDWORD lpMode, LPDWORD lpMaxCollectionCount, LPDWORD lpCollectDataTimeout) noexcept -> BOOL;
extern "C" auto SetPaletteEntries (HPALETTE hpal, UINT iStart, UINT cEntries, const PALETTEENTRY *pPalEntries) noexcept -> UINT;
extern "C" auto SetPixel (HDC hdc, int x, int y, COLORREF color) noexcept -> COLORREF;
extern "C" auto SetPixelV (HDC hdc, int x, int y, COLORREF color) noexcept -> BOOL;
extern "C" auto SetPolyFillMode (HDC hdc, int iPolyFillMode) noexcept -> int;
extern "C" auto SetPriorityClass (HANDLE hProcess, DWORD dwPriorityClass) noexcept -> BOOL;
extern "C" auto SetRect (LPRECT lprc, int xLeft, int yTop, int xRight, int yBottom) noexcept -> BOOL;
extern "C" auto SetRectEmpty (LPRECT lprc) noexcept -> BOOL;
extern "C" auto SetRectRgn (HRGN hrgn, int nLeftRect, int nTopRect, int nRightRect, int nBottomRect) noexcept -> BOOL;
extern "C" auto SetROP2 (HDC hdc, int rop2) noexcept -> int;
extern "C" auto SetStdHandle (DWORD nStdHandle, HANDLE hHandle) noexcept -> BOOL;
extern "C" auto SetStretchBltMode (HDC hdc, int mode) noexcept -> int;
extern "C" auto SetSystemPaletteUse (HDC hdc, UINT use) noexcept -> UINT;
extern "C" auto SetSystemTime (const SYSTEMTIME *lpSystemTime) noexcept -> BOOL;
extern "C" auto SetSystemTimeAdjustment (DWORD dwTimeAdjustment, BOOL bTimeAdjustmentDisabled) noexcept -> BOOL;
extern "C" auto SetTextAlign (HDC hdc, UINT align) noexcept -> UINT;
extern "C" auto SetTextCharacterExtra (HDC hdc, int extra) noexcept -> int;
extern "C" auto SetTextColor (HDC hdc, COLORREF color) noexcept -> COLORREF;
extern "C" auto SetTextJustification (HDC hdc, int extra, int count) noexcept -> BOOL;
extern "C" auto SetThreadAffinityMask (HANDLE hThread, DWORD_PTR dwThreadAffinityMask) noexcept -> DWORD_PTR;
extern "C" auto SetTimer (HWND hWnd, UINT_PTR nIDEvent, UINT uElapse, TIMERPROC lpTimerFunc) noexcept -> UINT_PTR;
extern "C" auto SetTimeZoneInformation (const TIME_ZONE_INFORMATION *lpTimeZoneInformation) noexcept -> BOOL;
extern "C" auto SetupComm (HANDLE hFile, DWORD dwInQueue, DWORD dwOutQueue) noexcept -> BOOL;
extern "C" auto SetViewportExtEx (HDC hdc, int x, int y, LPSIZE lpsz) noexcept -> BOOL;
extern "C" auto SetViewportOrgEx (HDC hdc, int x, int y, LPPOINT lppt) noexcept -> BOOL;
extern "C" auto SetWindowExtEx (HDC hdc, int x, int y, LPSIZE lpsz) noexcept -> BOOL;
extern "C" auto SetWindowLongA (HWND hWnd, int nIndex, LONG dwNewLong) noexcept -> LONG;
extern "C" auto SetWindowLongPtrA (HWND hWnd, int nIndex, LONG_PTR dwNewLong) noexcept -> LONG_PTR;
extern "C" auto SetWindowLongPtrW (HWND hWnd, int nIndex, LONG_PTR dwNewLong) noexcept -> LONG_PTR;
extern "C" auto SetWindowLongW (HWND hWnd, int nIndex, LONG dwNewLong) noexcept -> LONG;
extern "C" auto SetWindowOrgEx (HDC hdc, int x, int y, LPPOINT lppt) noexcept -> BOOL;
extern "C" auto SetWindowPos (HWND hWnd, HWND hWndInsertAfter, int X, int Y, int cx, int cy, UINT uFlags) noexcept -> BOOL;
extern "C" auto SetWindowRgn (HWND hWnd, HRGN hRgn, BOOL bRedraw) noexcept -> int;
extern "C" auto SetWorldTransform (HDC hdc, const XFORM *lpxf) noexcept -> BOOL;
extern "C" auto ShellAboutA (HWND hWnd, LPCSTR szApp, LPCSTR szOtherStuff, HICON hIcon) noexcept -> int;
extern "C" auto ShellAboutW (HWND hWnd, LPCWSTR szApp, LPCWSTR szOtherStuff, HICON hIcon) noexcept -> int;
extern "C" auto ShellExecuteA (HWND hwnd, LPCSTR lpOperation, LPCSTR lpFile, LPCSTR lpParameters, LPCSTR lpDirectory, INT nShowCmd) noexcept -> HINSTANCE;
extern "C" auto ShellExecuteW (HWND hwnd, LPCWSTR lpOperation, LPCWSTR lpFile, LPCWSTR lpParameters, LPCWSTR lpDirectory, INT nShowCmd) noexcept -> HINSTANCE;
extern "C" auto ShowWindow (HWND hWnd, int nCmdShow) noexcept -> BOOL;
extern "C" auto shutdown (SOCKET s, int how) noexcept -> int;
extern "C" auto Sleep (DWORD dwMilliseconds) noexcept -> VOID;
extern "C" auto SleepConditionVariableCS (PCONDITION_VARIABLE ConditionVariable, LPCRITICAL_SECTION CriticalSection, DWORD dwMilliseconds) noexcept -> BOOL;
extern "C" auto socket (int af, int type, int protocol) noexcept -> SOCKET;
extern "C" auto StretchBlt (HDC hdcDest, int xDest, int yDest, int wDest, int hDest, HDC hdcSrc, int xSrc, int ySrc, int wSrc, int hSrc, DWORD rop) noexcept -> BOOL;
extern "C" auto StretchDIBits (HDC hdc, int xDest, int yDest, int DestWidth, int DestHeight, int xSrc, int ySrc, int SrcWidth, int SrcHeight, const VOID *lpBits, const BITMAPINFO *lpbmi, UINT iUsage, DWORD rop) noexcept -> int;
extern "C" auto StrokeAndFillPath (HDC hdc) noexcept -> BOOL;
extern "C" auto StrokePath (HDC hdc) noexcept -> BOOL;
extern "C" auto SubtractRect (LPRECT lprcDst, const RECT* lprcSrc1, const RECT* lprcSrc2) noexcept -> BOOL;
extern "C" auto SwitchToFiber (LPVOID lpFiber) noexcept -> VOID;
extern "C" auto SwitchToThread () noexcept -> BOOL;
extern "C" auto SystemTimeToFileTime (const SYSTEMTIME *lpSystemTime, LPFILETIME lpFileTime) noexcept -> BOOL;
extern "C" auto SystemTimeToTzSpecificLocalTime (const TIME_ZONE_INFORMATION *lpTimeZoneInformation, const SYSTEMTIME *lpUniversalTime, LPSYSTEMTIME lpLocalTime) noexcept -> BOOL;
extern "C" auto SystemTimeToTzSpecificLocalTimeEx (const DYNAMIC_TIME_ZONE_INFORMATION *lpTimeZoneInformation, const SYSTEMTIME *lpUniversalTime, LPSYSTEMTIME lpLocalTime) noexcept -> BOOL;
extern "C" auto TabbedTextOutA (HDC hdc, int x, int y, LPCSTR lpString, int chCount, int nTabPositions, const INT *lpnTabStopPositions, int nTabOrigin) noexcept -> LONG;
extern "C" auto TabbedTextOutW (HDC hdc, int x, int y, LPCWSTR lpString, int chCount, int nTabPositions, const INT *lpnTabStopPositions, int nTabOrigin) noexcept -> LONG;
extern "C" auto TextOutA (HDC hdc, int x, int y, LPCSTR lpString, int c) noexcept -> BOOL;
extern "C" auto TextOutW (HDC hdc, int x, int y, LPCWSTR lpString, int c) noexcept -> BOOL;
extern "C" auto TlsAlloc () noexcept -> DWORD;
extern "C" auto TlsFree (DWORD dwTlsIndex) noexcept -> BOOL;
extern "C" auto TlsGetValue (DWORD dwTlsIndex) noexcept -> LPVOID;
extern "C" auto TlsSetValue (DWORD dwTlsIndex, LPVOID lpTlsValue) noexcept -> BOOL;
extern "C" auto TransactNamedPipe (HANDLE hNamedPipe, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesRead, LPOVERLAPPED lpOverlapped) noexcept -> BOOL;
extern "C" auto TranslateMessage (const MSG* lpMsg) noexcept -> BOOL;
extern "C" auto TransmitCommChar (HANDLE hFile, char cChar) noexcept -> BOOL;
extern "C" auto TransparentBlt (HDC hdcDest, int xoriginDest, int yoriginDest, int wDest, int hDest, HDC hdcSrc, int xoriginSrc, int yoriginSrc, int wSrc, int hSrc, UINT crTransparent) noexcept -> BOOL;
extern "C" auto TryEnterCriticalSection (LPCRITICAL_SECTION lpCriticalSection) noexcept -> BOOL;
extern "C" auto TzSpecificLocalTimeToSystemTime (const TIME_ZONE_INFORMATION *lpTimeZoneInformation, const SYSTEMTIME *lpLocalTime, LPSYSTEMTIME lpUniversalTime) noexcept -> BOOL;
extern "C" auto TzSpecificLocalTimeToSystemTimeEx (const DYNAMIC_TIME_ZONE_INFORMATION *lpTimeZoneInformation, const SYSTEMTIME *lpLocalTime, LPSYSTEMTIME lpUniversalTime) noexcept -> BOOL;
extern "C" auto UnionRect (LPRECT lprcDst, const RECT* lprcSrc1, const RECT* lprcSrc2) noexcept -> BOOL;
extern "C" auto UnrealizeObject (HGDIOBJ h) noexcept -> BOOL;
extern "C" auto UnregisterClassA (LPCSTR lpClassName, HINSTANCE hInstance) noexcept -> BOOL;
extern "C" auto UnregisterClassW (LPCWSTR lpClassName, HINSTANCE hInstance) noexcept -> BOOL;
extern "C" auto UpdateColors (HDC hdc) noexcept -> BOOL;
extern "C" auto UpdateWindow (HWND hWnd) noexcept -> BOOL;
extern "C" auto ValidateRect (HWND hWnd, const RECT* lpRect) noexcept -> BOOL;
extern "C" auto ValidateRgn (HWND hWnd, HRGN hRgn) noexcept -> BOOL;
extern "C" auto WaitCommEvent (HANDLE hFile, LPDWORD lpEvtMask, LPOVERLAPPED lpOverlapped) noexcept -> BOOL;
extern "C" auto WaitForMultipleObjects (DWORD nCount, const HANDLE *lpHandles, BOOL bWaitAll, DWORD dwMilliseconds) noexcept -> DWORD;
extern "C" auto WaitForSingleObject (HANDLE hHandle, DWORD dwMilliseconds) noexcept -> DWORD;
extern "C" auto WaitNamedPipeA (LPCSTR lpNamedPipeName, DWORD nTimeOut) noexcept -> BOOL;
extern "C" auto WaitNamedPipeW (LPCWSTR lpNamedPipeName, DWORD nTimeOut) noexcept -> BOOL;
extern "C" auto WakeAllConditionVariable (PCONDITION_VARIABLE ConditionVariable) noexcept -> VOID;
extern "C" auto WakeConditionVariable (PCONDITION_VARIABLE ConditionVariable) noexcept -> VOID;
extern "C" auto WidenPath (HDC hdc) noexcept -> BOOL;
extern "C" auto WindowFromDC (HDC hDC) noexcept -> HWND;
extern "C" auto WriteFile (HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped) noexcept -> BOOL;
extern "C" auto WSACleanup () noexcept -> int;
extern "C" auto WSAGetLastError () noexcept -> int;
extern "C" auto WSAStartup (WORD wVersionRequested, LPWSADATA lpWSAData) noexcept -> int;

#define LOWORD(l) ((USHORT) ((ULONG_PTR) (l)))
#define MAKEINTRESOURCEA(i) ((LPSTR) (ULONG_PTR) LOWORD (i))
#define MAKEINTRESOURCEW(i) ((LPWSTR) (ULONG_PTR) LOWORD (i))

#ifdef UNICODE
	#define AddAtom AddAtomW
	#define AddConsoleAlias AddConsoleAliasW
	#define AddFontResource AddFontResourceW
	#define AddFontResourceEx AddFontResourceExW
	#define BuildCommDCB BuildCommDCBW
	#define BuildCommDCBAndTimeouts BuildCommDCBAndTimeoutsW
	#define CallNamedPipe CallNamedPipeW
	#define ChangeDisplaySettings ChangeDisplaySettingsW
	#define ChangeDisplaySettingsEx ChangeDisplaySettingsExW
	#define CommConfigDialog CommConfigDialogW
	#define CreateDC CreateDCW
	#define CreateEvent CreateEventW
	#define CreateFile CreateFileW
	#define CreateFont CreateFontW
	#define CreateFontIndirect CreateFontIndirectW
	#define CreateFontIndirectEx CreateFontIndirectExW
	#define CreateIC CreateICW
	#define CreateMailslot CreateMailslotW
	#define CreateMutex CreateMutexW
	#define CreateNamedPipe CreateNamedPipeW
	#define CreateProcess CreateProcessW
	#define CreateSemaphore CreateSemaphoreW
	#define CreateWindowEx CreateWindowExW
	#define DefWindowProc DefWindowProcW
	#define DeleteFile DeleteFileW
	#define DeviceCapabilities DeviceCapabilitiesW
	#define DEVMODE DEVMODEW
	#define DispatchMessage DispatchMessageW
	#define DISPLAY_DEVICE DISPLAY_DEVICEW
	#define DrawState DrawStateW
	#define DrawText DrawTextW
	#define DrawTextEx DrawTextExW
	#define EnumDisplayDevices EnumDisplayDevicesW
	#define EnumDisplaySettings EnumDisplaySettingsW
	#define EnumDisplaySettingsEx EnumDisplaySettingsExW
	#define EnumFontFamiliesEx EnumFontFamiliesExW
	#define ENUMLOGFONTEX ENUMLOGFONTEXW
	#define ENUMLOGFONTEXDV ENUMLOGFONTEXDVW
	#define ExtTextOut ExtTextOutW
	#define FatalAppExit FatalAppExitW
	#define FillConsoleOutputCharacter FillConsoleOutputCharacterW
	#define FindAtom FindAtomW
	#define GCP_RESULTS GCP_RESULTSW
	#define GetAtomName GetAtomNameW
	#define GetCharABCWidths GetCharABCWidthsW
	#define GetCharABCWidthsFloat GetCharABCWidthsFloatW
	#define GetCharacterPlacement GetCharacterPlacementW
	#define GetCharWidth32 GetCharWidth32W
	#define GetCharWidthFloat GetCharWidthFloatW
	#define GetClassInfo GetClassInfoW
	#define GetClassInfoEx GetClassInfoExW
	#define GetClassLong GetClassLongW
	#define GetClassLongPtr GetClassLongPtrW
	#define GetClassName GetClassNameW
	#define GetCommandLine GetCommandLineW
	#define GetConsoleAlias GetConsoleAliasW
	#define GetConsoleAliases GetConsoleAliasesW
	#define GetConsoleAliasesLength GetConsoleAliasesLengthW
	#define GetConsoleAliasExes GetConsoleAliasExesW
	#define GetConsoleOriginalTitle GetConsoleOriginalTitleW
	#define GetConsoleTitle GetConsoleTitleW
	#define GetCurrentDirectory GetCurrentDirectoryW
	#define GetDefaultCommConfig GetDefaultCommConfigW
	#define GetEnvironmentVariable GetEnvironmentVariableW
	#define GetGlyphIndices GetGlyphIndicesW
	#define GetGlyphOutline GetGlyphOutlineW
	#define GetKerningPairs GetKerningPairsW
	#define GetMenuItemInfo GetMenuItemInfoW
	#define GetMessage GetMessageW
	#define GetModuleFileName GetModuleFileNameW
	#define GetModuleHandle GetModuleHandleW
	#define GetMonitorInfo GetMonitorInfoW
	#define GetNamedPipeClientComputerName GetNamedPipeClientComputerNameW
	#define GetNamedPipeHandleState GetNamedPipeHandleStateW
	#define GetObject GetObjectW
	#define GetOutlineTextMetrics GetOutlineTextMetricsW
	#define GetTabbedTextExtent GetTabbedTextExtentW
	#define GetTextExtentExPoint GetTextExtentExPointW
	#define GetTextExtentPoint32 GetTextExtentPoint32W
	#define GetTextFace GetTextFaceW
	#define GetTextMetrics GetTextMetricsW
	#define GetTimeFormat GetTimeFormatW
	#define GetWindowLong GetWindowLongW
	#define GetWindowLongPtr GetWindowLongPtrW
	#define GlobalAddAtom GlobalAddAtomW
	#define GlobalFindAtom GlobalFindAtomW
	#define GlobalGetAtomName GlobalGetAtomNameW
	#define GrayString GrayStringW
	#define InsertMenuItem InsertMenuItemW
	#define LoadBitmap LoadBitmapW
	#define LoadCursor LoadCursorW
	#define LoadIcon LoadIconW
	#define LoadLibrary LoadLibraryW
	#define LOGFONT LOGFONTW
	#define LPDEVMODE LPDEVMODEW
	#define LPDISPLAY_DEVICE LPDISPLAY_DEVICEW
	#define LPENUMLOGFONTEX LPENUMLOGFONTEXW
	#define LPENUMLOGFONTEXDV LPENUMLOGFONTEXDVW
	#define LPGCP_RESULTS LPGCP_RESULTSW
	#define LPMENUITEMINFO LPMENUITEMINFOW
	#define LPOUTLINETEXTMETRIC LPOUTLINETEXTMETRICW
	#define LPPOLYTEXT LPPOLYTEXTW
	#define LPSTARTUPINFO LPSTARTUPINFOW
	#define LPTEXTMETRIC LPTEXTMETRICW
	#define LPWNDCLASS LPWNDCLASSW
	#define LPWNDCLASSEX LPWNDCLASSEXW
	#define MAKEINTRESOURCE MAKEINTRESOURCEW
	#define MENUITEMINFO MENUITEMINFOW
	#define MessageBox MessageBoxW
	#define MessageBoxEx MessageBoxExW
	#define MONITORINFOEX MONITORINFOEXW
	#define MoveFile MoveFileW
	#define NPDEVMODE NPDEVMODEW
	#define NPLOGFONT NPLOGFONTW
	#define NPOUTLINETEXTMETRIC NPOUTLINETEXTMETRICW
	#define NPPOLYTEXT NPPOLYTEXTW
	#define NPTEXTMETRIC NPTEXTMETRICW
	#define OpenEvent OpenEventW
	#define OUTLINETEXTMETRIC OUTLINETEXTMETRICW
	#define PDEVMODE PDEVMODEW
	#define PDISPLAY_DEVICE PDISPLAY_DEVICEW
	#define PENUMLOGFONTEXDV PENUMLOGFONTEXDVW
	#define PLOGFONT PLOGFONTW
	#define POLYTEXT POLYTEXTW
	#define PolyTextOut PolyTextOutW
	#define POUTLINETEXTMETRIC POUTLINETEXTMETRICW
	#define PPOLYTEXT PPOLYTEXTW
	#define PTEXTMETRIC PTEXTMETRICW
	#define RegCreateKeyEx RegCreateKeyExW
	#define RegisterClass RegisterClassW
	#define RegisterClassEx RegisterClassExW
	#define RegOpenKeyEx RegOpenKeyExW
	#define RegQueryValueEx RegQueryValueExW
	#define RegSetValueEx RegSetValueExW
	#define RemoveFontResource RemoveFontResourceW
	#define RemoveFontResourceEx RemoveFontResourceExW
	#define ResetDC ResetDCW
	#define SendMessage SendMessageW
	#define SetClassLong SetClassLongW
	#define SetClassLongPtr SetClassLongPtrW
	#define SetDefaultCommConfig SetDefaultCommConfigW
	#define SetEnvironmentVariable SetEnvironmentVariableW
	#define SetMenuItemInfo SetMenuItemInfoW
	#define SetWindowLong SetWindowLongW
	#define SetWindowLongPtr SetWindowLongPtrW
	#define ShellAbout ShellAboutW
	#define ShellExecute ShellExecuteW
	#define STARTUPINFO STARTUPINFOW
	#define TabbedTextOut TabbedTextOutW
	#define TEXTMETRIC TEXTMETRICW
	#define TextOut TextOutW
	#define UnregisterClass UnregisterClassW
	#define WaitNamedPipe WaitNamedPipeW
	#define WNDCLASS WNDCLASSW
	#define WNDCLASSEX WNDCLASSEXW
#else
	#define AddAtom AddAtomA
	#define AddConsoleAlias AddConsoleAliasA
	#define AddFontResource AddFontResourceA
	#define AddFontResourceEx AddFontResourceExA
	#define BuildCommDCB BuildCommDCBA
	#define BuildCommDCBAndTimeouts BuildCommDCBAndTimeoutsA
	#define CallNamedPipe CallNamedPipeA
	#define ChangeDisplaySettings ChangeDisplaySettingsA
	#define ChangeDisplaySettingsEx ChangeDisplaySettingsExA
	#define CommConfigDialog CommConfigDialogA
	#define CreateDC CreateDCA
	#define CreateEvent CreateEventA
	#define CreateFile CreateFileA
	#define CreateFont CreateFontA
	#define CreateFontIndirect CreateFontIndirectA
	#define CreateFontIndirectEx CreateFontIndirectExA
	#define CreateIC CreateICA
	#define CreateMailslot CreateMailslotA
	#define CreateMutex CreateMutexA
	#define CreateNamedPipe CreateNamedPipeA
	#define CreateProcess CreateProcessA
	#define CreateSemaphore CreateSemaphoreA
	#define CreateWindowEx CreateWindowExA
	#define DefWindowProc DefWindowProcA
	#define DeleteFile DeleteFileA
	#define DeviceCapabilities DeviceCapabilitiesA
	#define DEVMODE DEVMODEA
	#define DispatchMessage DispatchMessageA
	#define DISPLAY_DEVICE DISPLAY_DEVICEA
	#define DrawState DrawStateA
	#define DrawText DrawTextA
	#define DrawTextEx DrawTextExA
	#define EnumDisplayDevices EnumDisplayDevicesA
	#define EnumDisplaySettings EnumDisplaySettingsA
	#define EnumDisplaySettingsEx EnumDisplaySettingsExA
	#define EnumFontFamiliesEx EnumFontFamiliesExA
	#define ENUMLOGFONTEX ENUMLOGFONTEXA
	#define ENUMLOGFONTEXDV ENUMLOGFONTEXDVA
	#define ExtTextOut ExtTextOutA
	#define FatalAppExit FatalAppExitA
	#define FillConsoleOutputCharacter FillConsoleOutputCharacterA
	#define FindAtom FindAtomA
	#define GCP_RESULTS GCP_RESULTSA
	#define GetAtomName GetAtomNameA
	#define GetCharABCWidths GetCharABCWidthsA
	#define GetCharABCWidthsFloat GetCharABCWidthsFloatA
	#define GetCharacterPlacement GetCharacterPlacementA
	#define GetCharWidth32 GetCharWidth32A
	#define GetCharWidthFloat GetCharWidthFloatA
	#define GetClassInfo GetClassInfoA
	#define GetClassInfoEx GetClassInfoExA
	#define GetClassLong GetClassLongA
	#define GetClassLongPtr GetClassLongPtrA
	#define GetClassName GetClassNameA
	#define GetCommandLine GetCommandLineA
	#define GetConsoleAlias GetConsoleAliasA
	#define GetConsoleAliases GetConsoleAliasesA
	#define GetConsoleAliasesLength GetConsoleAliasesLengthA
	#define GetConsoleAliasExes GetConsoleAliasExesA
	#define GetConsoleOriginalTitle GetConsoleOriginalTitleA
	#define GetConsoleTitle GetConsoleTitleA
	#define GetCurrentDirectory GetCurrentDirectoryA
	#define GetDefaultCommConfig GetDefaultCommConfigA
	#define GetEnvironmentVariable GetEnvironmentVariableA
	#define GetGlyphIndices GetGlyphIndicesA
	#define GetGlyphOutline GetGlyphOutlineA
	#define GetKerningPairs GetKerningPairsA
	#define GetMenuItemInfo GetMenuItemInfoA
	#define GetMessage GetMessageA
	#define GetModuleFileName GetModuleFileNameA
	#define GetModuleHandle GetModuleHandleA
	#define GetMonitorInfo GetMonitorInfoA
	#define GetNamedPipeClientComputerName GetNamedPipeClientComputerNameA
	#define GetNamedPipeHandleState GetNamedPipeHandleStateA
	#define GetObject GetObjectA
	#define GetOutlineTextMetrics GetOutlineTextMetricsA
	#define GetTabbedTextExtent GetTabbedTextExtentA
	#define GetTextExtentExPoint GetTextExtentExPointA
	#define GetTextExtentPoint32 GetTextExtentPoint32A
	#define GetTextFace GetTextFaceA
	#define GetTextMetrics GetTextMetricsA
	#define GetTimeFormat GetTimeFormatA
	#define GetWindowLong GetWindowLongA
	#define GetWindowLongPtr GetWindowLongPtrA
	#define GlobalAddAtom GlobalAddAtomA
	#define GlobalFindAtom GlobalFindAtomA
	#define GlobalGetAtomName GlobalGetAtomNameA
	#define GrayString GrayStringA
	#define InsertMenuItem InsertMenuItemA
	#define LoadBitmap LoadBitmapA
	#define LoadCursor LoadCursorA
	#define LoadIcon LoadIconA
	#define LoadLibrary LoadLibraryA
	#define LOGFONT LOGFONTA
	#define LPDEVMODE LPDEVMODEA
	#define LPDISPLAY_DEVICE LPDISPLAY_DEVICEA
	#define LPENUMLOGFONTEX LPENUMLOGFONTEXA
	#define LPENUMLOGFONTEXDV LPENUMLOGFONTEXDVA
	#define LPGCP_RESULTS LPGCP_RESULTSA
	#define LPMENUITEMINFO LPMENUITEMINFOA
	#define LPOUTLINETEXTMETRIC LPOUTLINETEXTMETRICA
	#define LPPOLYTEXT LPPOLYTEXTA
	#define LPSTARTUPINFO LPSTARTUPINFOA
	#define LPTEXTMETRIC LPTEXTMETRICA
	#define LPWNDCLASS LPWNDCLASSA
	#define LPWNDCLASSEX LPWNDCLASSEXA
	#define MAKEINTRESOURCE MAKEINTRESOURCEA
	#define MENUITEMINFO MENUITEMINFOA
	#define MessageBox MessageBoxA
	#define MessageBoxEx MessageBoxExA
	#define MONITORINFOEX MONITORINFOEXA
	#define MoveFile MoveFileA
	#define NPDEVMODE NPDEVMODEA
	#define NPLOGFONT NPLOGFONTA
	#define NPOUTLINETEXTMETRIC NPOUTLINETEXTMETRICA
	#define NPPOLYTEXT NPPOLYTEXTA
	#define NPTEXTMETRIC NPTEXTMETRICA
	#define OpenEvent OpenEventA
	#define OUTLINETEXTMETRIC OUTLINETEXTMETRICA
	#define PDEVMODE PDEVMODEA
	#define PDISPLAY_DEVICE PDISPLAY_DEVICEA
	#define PENUMLOGFONTEXDV PENUMLOGFONTEXDVA
	#define PLOGFONT PLOGFONTA
	#define POLYTEXT POLYTEXTA
	#define PolyTextOut PolyTextOutA
	#define POUTLINETEXTMETRIC POUTLINETEXTMETRICA
	#define PPOLYTEXT PPOLYTEXTA
	#define PTEXTMETRIC PTEXTMETRICWA
	#define RegCreateKeyEx RegCreateKeyExA
	#define RegisterClass RegisterClassA
	#define RegisterClassEx RegisterClassExA
	#define RegOpenKeyEx RegOpenKeyExA
	#define RegQueryValueEx RegQueryValueExA
	#define RegSetValueEx RegSetValueExA
	#define RemoveFontResource RemoveFontResourceA
	#define RemoveFontResourceEx RemoveFontResourceExA
	#define ResetDC ResetDCA
	#define SendMessage SendMessageA
	#define SetClassLong SetClassLongA
	#define SetClassLongPtr SetClassLongPtrA
	#define SetDefaultCommConfig SetDefaultCommConfigA
	#define SetEnvironmentVariable SetEnvironmentVariableA
	#define SetMenuItemInfo SetMenuItemInfoA
	#define SetWindowLong SetWindowLongA
	#define SetWindowLongPtr SetWindowLongPtrA
	#define ShellAbout ShellAboutA
	#define ShellExecute ShellExecuteA
	#define STARTUPINFO STARTUPINFOA
	#define TabbedTextOut TabbedTextOutA
	#define TEXTMETRIC TEXTMETRICA
	#define TextOut TextOutA
	#define UnregisterClass UnregisterClassA
	#define WaitNamedPipe WaitNamedPipeA
	#define WNDCLASS WNDCLASSA
	#define WNDCLASSEX WNDCLASSEXA
#endif

#define APIENTRY
#define CALLBACK
#define WINAPI

#endif // ECS_WINDOWS_HEADER_INCLUDED
